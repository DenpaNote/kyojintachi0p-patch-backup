From a682492c1577b409076b42cb423576e8a4842a0a Mon Sep 17 00:00:00 2001
From: yazawazi <47273265+Yazawazi@users.noreply.github.com>
Date: Wed, 4 Sep 2024 20:28:20 +0800
Subject: [PATCH] feat: 202409040002

---
 .../scenario/AbstractAppScenarioPresenter.as  |  89 +-
 .../app/scenario/AbstractAppScenarioView.as   |  49 +-
 .../scenario/AbstractScenarioViewBuilder.as   |   2 +-
 .../app/scenario/command/ReadStopCommand.as   |   2 +-
 .../app/scenario/view/SimpleBackLogLayer.as   |  16 +-
 .../scenario/view/text/EffectiveTextDraw.as   | 247 +++--
 info/k2c/app/scenario/view/text/LetterData.as |  99 ++
 .../scenario/AppScenarioViewEvent.as          |   6 +
 .../scenario/view/AbstractTextView.as         |   6 +
 .../scenario/view/text/ITextStyle.as          |   2 +
 info/k2c/kjzero/KyojinZeroPrologue_2.as       |  81 --
 info/k2c/kjzero/app/GameSystem.as             |   6 +-
 info/k2c/kjzero/app/ResourceSettings.as       |   7 +
 info/k2c/kjzero/app/ResourceSettingsAir.as    |  19 +
 .../k2c/kjzero/app/data/ScenarioDefinition.as |   4 +-
 .../k2c/kjzero/app/factory/AirSceneFactory.as |   5 +
 info/k2c/kjzero/app/factory/MySceneFactory.as |   4 +
 info/k2c/kjzero/dao/ScenarioSaveInfoDAO.as    |  78 +-
 info/k2c/kjzero/models/ChapterDataManager.as  |   2 +-
 info/k2c/kjzero/scenario/AdvUIView.as         |  48 +-
 info/k2c/kjzero/scenario/AppAdvView.as        |   2 +-
 info/k2c/kjzero/scenario/AppNovelView.as      |  17 +
 info/k2c/kjzero/scenario/AppPresenterBase.as  |  29 +
 info/k2c/kjzero/scenario/NovelUIView.as       |  44 +-
 .../scenario/view/AppAdventureMessageView.as  |   1 -
 .../scenario/view/text/BacklogTextStyle.as    |  11 +-
 .../scenario/view/text/ChapterListSprite.as   | 102 ++
 .../scenario/view/text/ChapterSprite.as       | 279 ++++++
 .../view/text/TextStyleFactoryImpl.as         |   1 -
 .../scenario/view/text/TextStyleImpl.as       |  39 +-
 info/k2c/kjzero/tasks/ChapterSelectTask.as    | 381 +-------
 info/k2c/kjzero/tasks/OptionTask.as           | 354 +------
 info/k2c/kjzero/tasks/SaveLoadTask.as         | 901 ++++++++++++++++++
 info/k2c/kjzero/tasks/TitleTask.as            |  42 +-
 info/k2c/kjzero/tasks/ending/EndingTask.as    | 264 +----
 .../kjzero/tasks/ending/GrowerTreeWrapper.as  | 235 +++++
 .../k2c/kjzero/tasks/ending/LeafObjectData.as |  25 +
 info/k2c/yamalib/draw/RestorableLayer.as      |  62 +-
 .../gui/button/AdvancedDarkenButton.as        |  73 ++
 .../yamalib/gui/button/DiscreteIndicator.as   |  91 ++
 .../gui/button/SwitchableButtonGroup.as       | 205 ++++
 .../gui/button/SwitchableButtonGroupItem.as   |  53 ++
 info/k2c/yamalib/sound/BGMManager.as          |  68 +-
 info/k2c/yamalib/sound/SEManager.as           |   2 +-
 44 files changed, 2808 insertions(+), 1245 deletions(-)
 create mode 100644 info/k2c/app/scenario/view/text/LetterData.as
 delete mode 100644 info/k2c/kjzero/KyojinZeroPrologue_2.as
 create mode 100644 info/k2c/kjzero/scenario/view/text/ChapterListSprite.as
 create mode 100644 info/k2c/kjzero/scenario/view/text/ChapterSprite.as
 create mode 100644 info/k2c/kjzero/tasks/SaveLoadTask.as
 create mode 100644 info/k2c/kjzero/tasks/ending/GrowerTreeWrapper.as
 create mode 100644 info/k2c/kjzero/tasks/ending/LeafObjectData.as
 create mode 100644 info/k2c/yamalib/gui/button/AdvancedDarkenButton.as
 create mode 100644 info/k2c/yamalib/gui/button/DiscreteIndicator.as
 create mode 100644 info/k2c/yamalib/gui/button/SwitchableButtonGroup.as
 create mode 100644 info/k2c/yamalib/gui/button/SwitchableButtonGroupItem.as

diff --git a/info/k2c/app/scenario/AbstractAppScenarioPresenter.as b/info/k2c/app/scenario/AbstractAppScenarioPresenter.as
index 9823dba..4a74f1b 100644
--- a/info/k2c/app/scenario/AbstractAppScenarioPresenter.as
+++ b/info/k2c/app/scenario/AbstractAppScenarioPresenter.as
@@ -77,6 +77,8 @@ package info.k2c.app.scenario
       
       protected var currentBackLogPageNo:int = 0;
       
+      protected var skipTimer:Timer = null;
+      
       public function AbstractAppScenarioPresenter(param1:ResourceLoaderFactory, param2:EnvironmentInfo, param3:ScenarioInfo, param4:ScenarioReadStatusDAO)
       {
          super();
@@ -157,7 +159,6 @@ package info.k2c.app.scenario
             log.debug("scenario initialized.");
             appScenarioPresenter.dispatchEvent(new Event(EVENT_INIT));
          });
-         this.execBlockingCommand = true;
          this.scenarioPageMgr.init();
       }
       
@@ -174,7 +175,7 @@ package info.k2c.app.scenario
          this.updateEnvironmentInfo();
          this.bindViewEvent();
          saveDataBytes = saveData as ByteArray;
-         this.bgmMgr.excecRestore(saveDataBytes);
+         this.bgmMgr.excecRestore(saveDataBytes,this.environmentInfo.bgmMansterVol / 100);
          this.seMgr.excecRestore(saveDataBytes);
          scenarioPageNo = saveDataBytes.readInt();
          this.scenarioPageMgr.setPosition(scenarioPageNo);
@@ -187,7 +188,7 @@ package info.k2c.app.scenario
             state.initializeFlg = true;
             loadingScenarioData = false;
             execBlockingCommand = false;
-            log.debug("scenario loaded.");
+            log.info("scenario loaded.");
             var _loc3_:String = saveDataBytes.readUTF();
             scenarioView.restoreScenarioView(_loc3_);
             appScenarioPresenter.dispatchEvent(new Event(EVENT_INIT));
@@ -456,6 +457,8 @@ package info.k2c.app.scenario
          this.scenarioView.addEventListener(AppScenarioViewEvent.MENU_REQUEST_OPTION,this.onScenarioMenuOptionRequest);
          this.scenarioView.addEventListener(AppScenarioViewEvent.MENU_REQUEST_TITLE,this.onScenarioMenuTitleRequest);
          this.scenarioView.addEventListener(AppScenarioViewEvent.MENU_REQUEST_GAME_EXIT,this.onScenarioMenuGameExitRequest);
+         this.scenarioView.addEventListener(AppScenarioViewEvent.MENU_REQUEST_TRUE_SAVE,this.onScenarioMenuTrueSaveRequest);
+         this.scenarioView.addEventListener(AppScenarioViewEvent.MENU_REQUEST_TRUE_LOAD,this.onScenarioMenuTrueLoadRequest);
          this.scenarioView.addEventListener(AppScenarioViewEvent.TEXT_VIEW_TEXT_INIT,this.onScenarioViewInit);
          this.scenarioView.addEventListener(AppScenarioViewEvent.TEXT_VIEW_TEXT_PROGRESS,this.onScenarioViewUpdate);
          this.scenarioView.addEventListener(AppScenarioViewEvent.TEXT_VIEW_READ_STOP,this.onScenarioViewReadStop);
@@ -464,6 +467,7 @@ package info.k2c.app.scenario
          this.scenarioView.addEventListener(AppScenarioViewEvent.TEXT_VIEW_MOUSE_RIGHT_CLIK,this.onTextRClick);
          this.scenarioView.addEventListener(AppScenarioViewEvent.TEXT_VIEW_MOUSE_RIGHT_DOWN,this.onTextRDown);
          this.scenarioView.addEventListener(AppScenarioViewEvent.KEY_UP,this.onKeyUp);
+         this.scenarioView.addEventListener(AppScenarioViewEvent.KEY_DOWN,this.onKeyDown);
       }
       
       private function unbindViewEvent() : void
@@ -474,6 +478,8 @@ package info.k2c.app.scenario
          this.scenarioView.removeEventListener(AppScenarioViewEvent.MENU_REQUEST_OPTION,this.onScenarioMenuOptionRequest);
          this.scenarioView.removeEventListener(AppScenarioViewEvent.MENU_REQUEST_TITLE,this.onScenarioMenuTitleRequest);
          this.scenarioView.removeEventListener(AppScenarioViewEvent.MENU_REQUEST_GAME_EXIT,this.onScenarioMenuGameExitRequest);
+         this.scenarioView.removeEventListener(AppScenarioViewEvent.MENU_REQUEST_TRUE_SAVE,this.onScenarioMenuTrueSaveRequest);
+         this.scenarioView.removeEventListener(AppScenarioViewEvent.MENU_REQUEST_TRUE_LOAD,this.onScenarioMenuTrueLoadRequest);
          this.scenarioView.removeEventListener(AppScenarioViewEvent.TEXT_VIEW_TEXT_INIT,this.onScenarioViewInit);
          this.scenarioView.removeEventListener(AppScenarioViewEvent.TEXT_VIEW_TEXT_PROGRESS,this.onScenarioViewUpdate);
          this.scenarioView.removeEventListener(AppScenarioViewEvent.TEXT_VIEW_READ_STOP,this.onScenarioViewReadStop);
@@ -482,6 +488,7 @@ package info.k2c.app.scenario
          this.scenarioView.removeEventListener(AppScenarioViewEvent.TEXT_VIEW_MOUSE_RIGHT_CLIK,this.onTextRClick);
          this.scenarioView.removeEventListener(AppScenarioViewEvent.TEXT_VIEW_MOUSE_RIGHT_DOWN,this.onTextRDown);
          this.scenarioView.removeEventListener(AppScenarioViewEvent.KEY_UP,this.onKeyUp);
+         this.scenarioView.removeEventListener(AppScenarioViewEvent.KEY_DOWN,this.onKeyDown);
       }
       
       protected function onScenarioMenuShowRequest(param1:Event) : void
@@ -518,6 +525,14 @@ package info.k2c.app.scenario
       {
       }
       
+      protected function onScenarioMenuTrueSaveRequest(param1:Event) : void
+      {
+      }
+      
+      protected function onScenarioMenuTrueLoadRequest(param1:Event) : void
+      {
+      }
+      
       protected function onMouseMoveEvent(param1:AppScenarioViewEvent) : void
       {
          var _loc2_:MouseEvent = param1.originEvent as MouseEvent;
@@ -547,6 +562,11 @@ package info.k2c.app.scenario
          {
             if(this.scenarioView.isTextViewVisible())
             {
+               if(param1 !== null && param1.originEvent is MouseEvent && this.scenarioView.handleMouseClick(param1.originEvent))
+               {
+                  return;
+               }
+               log.info("flag: {0}, stop: {1}",this.endOfPageFlag,this.isTextReadStop());
                if(this.endOfPageFlag && this.isTextReadStop())
                {
                   if(!this.execBlockingCommand)
@@ -668,6 +688,10 @@ package info.k2c.app.scenario
             {
                this.onScenarioMenuLoadRequest(null);
             }
+            else if(Keyboard.CONTROL == _loc2_.keyCode)
+            {
+               this.stopSkip();
+            }
             else
             {
                _loc2_.preventDefault();
@@ -675,6 +699,65 @@ package info.k2c.app.scenario
          }
       }
       
+      private function skip() : void
+      {
+         if(this.scenarioView.isBackLogVisible())
+         {
+            return;
+         }
+         if(this.scenarioView.isShowScenarioMenu())
+         {
+            return;
+         }
+         if(this.endOfPageFlag && this.isTextReadStop())
+         {
+            onTextLClick(null);
+         }
+         else if(this.isTextReadStop())
+         {
+            this.scenarioView.hideEndOfLineIcon();
+            this.scenarioView.continueTextViewRead();
+         }
+         else if(!this.skipTextLineFlag)
+         {
+            this.skipTextReadEffect();
+         }
+      }
+      
+      private function startSkip() : void
+      {
+         if(this.skipTimer == null)
+         {
+            this.skipTimer = new Timer(100);
+            this.skipTimer.addEventListener(TimerEvent.TIMER,this.skipTimerHandler);
+            this.skipTimer.start();
+         }
+      }
+      
+      private function stopSkip() : void
+      {
+         if(this.skipTimer != null)
+         {
+            this.skipTimer.stop();
+            this.skipTimer = null;
+         }
+      }
+      
+      private function skipTimerHandler(param1:TimerEvent) : void
+      {
+         this.skip();
+      }
+      
+      private function onKeyDown(param1:AppScenarioViewEvent) : void
+      {
+         var keyEvent:KeyboardEvent = param1.originEvent as KeyboardEvent;
+         if(keyEvent.keyCode != Keyboard.CONTROL)
+         {
+            return;
+         }
+         this.startSkip();
+      }
+      
       protected function skipTextReadEffect() : void
       {
          this.scenarioView.disableTextSpeed();
diff --git a/info/k2c/app/scenario/AbstractAppScenarioView.as b/info/k2c/app/scenario/AbstractAppScenarioView.as
index 56bf7a1..6ecf085 100644
--- a/info/k2c/app/scenario/AbstractAppScenarioView.as
+++ b/info/k2c/app/scenario/AbstractAppScenarioView.as
@@ -1,10 +1,13 @@
 package info.k2c.app.scenario
 {
+   import flash.display.BitmapData;
    import flash.display.DisplayObjectContainer;
+   import flash.display.Sprite;
    import flash.display.Stage;
    import flash.events.Event;
    import flash.events.KeyboardEvent;
    import flash.events.MouseEvent;
+   import flash.geom.Matrix;
    import info.k2c.app.scenario.command.parameter.LayerContainerParameter;
    import info.k2c.app.scenario.command.parameter.LayerShowParameter;
    import info.k2c.app.scenario.view.SimpleBackLogLayer;
@@ -165,6 +168,8 @@ package info.k2c.app.scenario
          this._scenarioUIView.addEventListener(AppScenarioViewEvent.MENU_REQUEST_OPTION,this.passThroughViewEvent);
          this._scenarioUIView.addEventListener(AppScenarioViewEvent.MENU_REQUEST_TITLE,this.passThroughViewEvent);
          this._scenarioUIView.addEventListener(AppScenarioViewEvent.MENU_REQUEST_GAME_EXIT,this.passThroughViewEvent);
+         this._scenarioUIView.addEventListener(AppScenarioViewEvent.MENU_REQUEST_TRUE_SAVE,this.passThroughViewEvent);
+         this._scenarioUIView.addEventListener(AppScenarioViewEvent.MENU_REQUEST_TRUE_LOAD,this.passThroughViewEvent);
          this._textView.addEventListener(AbstractTextView.ON_START_EVENT,this.onTextViewStart);
          this._textView.addEventListener(AbstractTextView.ON_UPDATE_EVENT,this.onTextViewUpdate);
          this._textView.addEventListener(AbstractTextView.ON_STOP_EVENT,this.onTextViewReadStop);
@@ -184,6 +189,7 @@ package info.k2c.app.scenario
          if(this.stage)
          {
             this.stage.addEventListener(KeyboardEvent.KEY_UP,this.onTextKeyEvent);
+            this.stage.addEventListener(KeyboardEvent.KEY_DOWN,this.onTextKeyDown);
          }
       }
       
@@ -199,6 +205,7 @@ package info.k2c.app.scenario
          if(this.stage)
          {
             this.stage.removeEventListener(KeyboardEvent.KEY_UP,this.onTextKeyEvent);
+            this.stage.removeEventListener(KeyboardEvent.KEY_DOWN,this.onTextKeyDown);
          }
       }
       
@@ -210,6 +217,8 @@ package info.k2c.app.scenario
          this._scenarioUIView.removeEventListener(AppScenarioViewEvent.MENU_REQUEST_OPTION,this.passThroughViewEvent);
          this._scenarioUIView.removeEventListener(AppScenarioViewEvent.MENU_REQUEST_TITLE,this.passThroughViewEvent);
          this._scenarioUIView.removeEventListener(AppScenarioViewEvent.MENU_REQUEST_GAME_EXIT,this.passThroughViewEvent);
+         this._scenarioUIView.removeEventListener(AppScenarioViewEvent.MENU_REQUEST_TRUE_SAVE,this.passThroughViewEvent);
+         this._scenarioUIView.removeEventListener(AppScenarioViewEvent.MENU_REQUEST_TRUE_LOAD,this.passThroughViewEvent);
          this._textView.removeEventListener(AbstractTextView.ON_START_EVENT,this.onTextViewStart);
          this._textView.removeEventListener(AbstractTextView.ON_UPDATE_EVENT,this.onTextViewUpdate);
          this._textView.removeEventListener(AbstractTextView.ON_STOP_EVENT,this.onTextViewReadStop);
@@ -280,6 +289,11 @@ package info.k2c.app.scenario
          this.dispatchUserInputEvent(new AppScenarioViewEvent(AppScenarioViewEvent.KEY_UP,false,false,null,param1));
       }
       
+      private function onTextKeyDown(param1:KeyboardEvent) : void
+      {
+         this.dispatchUserInputEvent(new AppScenarioViewEvent(AppScenarioViewEvent.KEY_DOWN,false,false,null,param1));
+      }
+      
       public function showScenarioMenu(param1:* = null) : void
       {
          this.scenarioUIView.showScenarioMenu(param1);
@@ -645,8 +659,7 @@ package info.k2c.app.scenario
          var _loc3_:Number = Number(_loc1_.lastChY);
          _loc2_ += this.textView.x + 20;
          _loc3_ += this.textView.y - 0;
-         var _loc4_:Number = 0.5;
-         this.newPageIcon.show(_loc2_,_loc3_,_loc4_);
+         this.newPageIcon.show(_loc2_,_loc3_,0.5);
       }
       
       public function hideEndOfPageIcon() : void
@@ -654,6 +667,18 @@ package info.k2c.app.scenario
          this.newPageIcon.hide();
       }
       
+      public function getScreenShot() : BitmapData
+      {
+         var _loc1_:Sprite = new Sprite();
+         var _loc2_:DisplayObjectContainer = this._viewLayerContainer.getLayer(ViewLayerDefinition.WORLD_CONTAINER);
+         var _loc3_:Matrix = new Matrix();
+         var _loc4_:BitmapData;
+         (_loc4_ = new BitmapData(1280,720)).draw(_loc2_,_loc3_);
+         var _loc5_:DisplayObjectContainer = this._viewLayerContainer.getLayer(ViewLayerDefinition.TEXT_LAYER);
+         _loc4_.draw(_loc5_,_loc3_);
+         return _loc4_;
+      }
+      
       public function createViewRestoreData() : void
       {
          var _loc1_:LayerRestoreData = this.mainScenarioLayer.getRestorableObject();
@@ -670,6 +695,21 @@ package info.k2c.app.scenario
          dispatchEvent(new AppScenarioViewEvent(AppScenarioViewEvent.CREATE_VIEW_RESTORE_DATA,false,false,_loc4_));
       }
       
+      public function createViewRestoreDataToString() : String
+      {
+         var _loc1_:LayerRestoreData = this.mainScenarioLayer.getRestorableObject();
+         var _loc2_:LayerRestoreData = this.frontScenarioLayer.getRestorableObject();
+         var _loc3_:* = {
+            "mainLayer":_loc1_.toMap(),
+            "frontLayer":_loc2_.toMap(),
+            "textView":{
+               "position":this.textView.textPosition,
+               "speed":this.textView.textSpeed
+            }
+         };
+         return JSON.stringify(_loc3_);
+      }
+      
       public function restoreScenarioView(param1:*) : void
       {
          var _loc2_:String = param1 as String;
@@ -679,5 +719,10 @@ package info.k2c.app.scenario
          this.textView.textPosition = _loc3_.textView.position;
          this.textView.readStop();
       }
+      
+      public function handleMouseClick(event:MouseEvent) : Boolean
+      {
+         return _textView.handleMouseClick(event);
+      }
    }
 }
diff --git a/info/k2c/app/scenario/AbstractScenarioViewBuilder.as b/info/k2c/app/scenario/AbstractScenarioViewBuilder.as
index 6ce9de2..c5dfa7a 100644
--- a/info/k2c/app/scenario/AbstractScenarioViewBuilder.as
+++ b/info/k2c/app/scenario/AbstractScenarioViewBuilder.as
@@ -80,7 +80,7 @@ package info.k2c.app.scenario
          this.textView = this.createTextView();
          this.backlogLayer = this.createBackLogLayer();
          this.layerContainer.getLayer(ViewLayerDefinition.TEXT_LAYER).addChild(this.textView);
-         this.layerContainer.getLayer(ViewLayerDefinition.TEXT_LAYER).addChild(this.backlogLayer);
+         this.layerContainer.getLayer(ViewLayerDefinition.ORVER_LAYER).addChild(this.backlogLayer);
          deferred = new Deferred();
          deferred.resolve(null);
          return deferred.promise;
diff --git a/info/k2c/app/scenario/command/ReadStopCommand.as b/info/k2c/app/scenario/command/ReadStopCommand.as
index 823c72f..9ac0997 100644
--- a/info/k2c/app/scenario/command/ReadStopCommand.as
+++ b/info/k2c/app/scenario/command/ReadStopCommand.as
@@ -32,7 +32,7 @@ package info.k2c.app.scenario.command
       override public function start(param1:AppScenarioPresenter) : void
       {
          var _loc2_:AbstractAppScenarioView = null;
-         log.info("## start : time {0} ",this.stopTime);
+         log.debug("## start : time {0} ",this.stopTime);
          this.scenarioController = param1;
          _loc2_ = param1.getScenarioView() as AbstractAppScenarioView;
          _loc2_.stopTextViewRead();
diff --git a/info/k2c/app/scenario/view/SimpleBackLogLayer.as b/info/k2c/app/scenario/view/SimpleBackLogLayer.as
index 30b14cf..0a8790a 100644
--- a/info/k2c/app/scenario/view/SimpleBackLogLayer.as
+++ b/info/k2c/app/scenario/view/SimpleBackLogLayer.as
@@ -31,10 +31,12 @@ package info.k2c.app.scenario.view
          this.layerWidth = param3;
          this.layerHeight = param4;
          var _loc5_:Shape = new Shape();
-         this.addChild(_loc5_);
          _loc5_.graphics.beginFill(0,0.8);
          _loc5_.graphics.drawRoundRect(0,0,this.layerWidth,this.layerHeight,50,50);
          _loc5_.graphics.endFill();
+         this.textView.visible = true;
+         this.textView.name = "textView";
+         this.addChild(_loc5_);
          this.addChild(this.textView);
       }
       
@@ -47,7 +49,11 @@ package info.k2c.app.scenario.view
       public function setCurrentPageData(param1:PageData) : void
       {
          this.textView.reset(false);
-         this.textView.setScenarioData(param1.text);
+         var obj:Object = {
+            "text":param1.text,
+            "textStyles":param1.textFontStyles
+         };
+         this.textView.setScenarioData(obj);
          this.textView.textPosition = this.textView.pageTextLength - 1;
       }
       
@@ -85,7 +91,11 @@ package info.k2c.app.scenario.view
          if(this.nowPageNo >= 0 && this.nowPageNo < this.scenarioInfo.scenarioData.length)
          {
             this.textView.reset(false);
-            this.textView.setScenarioData(this.scenarioInfo.scenarioData[this.nowPageNo].text);
+            var obj:Object = {
+               "text":this.scenarioInfo.scenarioData[this.nowPageNo].text,
+               "textStyles":this.scenarioInfo.scenarioData[this.nowPageNo].textFontStyles
+            };
+            this.textView.setScenarioData(obj);
             this.textView.textPosition = this.textView.pageTextLength - 1;
          }
       }
diff --git a/info/k2c/app/scenario/view/text/EffectiveTextDraw.as b/info/k2c/app/scenario/view/text/EffectiveTextDraw.as
index f62e6cd..6aceaf4 100644
--- a/info/k2c/app/scenario/view/text/EffectiveTextDraw.as
+++ b/info/k2c/app/scenario/view/text/EffectiveTextDraw.as
@@ -3,6 +3,9 @@ package info.k2c.app.scenario.view.text
    import flash.display.DisplayObject;
    import flash.display.Sprite;
    import flash.events.Event;
+   import flash.events.MouseEvent;
+   import flash.net.URLRequest;
+   import flash.net.navigateToURL;
    import flash.utils.Dictionary;
    import info.k2c.frameworks.scenario.view.AbstractTextView;
    import info.k2c.frameworks.scenario.view.event.ReadCompleteEvent;
@@ -151,6 +154,28 @@ package info.k2c.app.scenario.view.text
          return _loc3_;
       }
       
+      private function createLetterWithWiki(param1:String, param2:String) : DisplayObject
+      {
+         var _loc2_:DisplayObject = this.textStyle.createLetterForWiki(param1);
+         var _loc3_:Sprite = new Sprite();
+         _loc3_.addEventListener(MouseEvent.CLICK,function(event:MouseEvent):void
+         {
+            log.info("hit wiki");
+            event.stopImmediatePropagation();
+            var _loc2_:String = param2;
+            var _loc5_:String = _loc2_.split(" ").join("%20");
+            var _loc6_:String = "https://kyojintachi.denpanote.moe/docs/%E7%A6%BB%E5%BC%80%E7%9A%84%E4%BA%BA%E4%BB%AC%20ZERO%20-prologue-/" + encodeURI(_loc5_);
+            navigateToURL(new URLRequest(_loc6_));
+         });
+         _loc2_.x = -_loc2_.width / 2;
+         _loc2_.y = -_loc2_.height / 2;
+         _loc3_.mouseChildren = false;
+         _loc3_.mouseEnabled = true;
+         _loc3_.name = param2;
+         _loc3_.addChild(_loc2_);
+         return _loc3_;
+      }
+      
       private function addNextLetter(param1:Boolean = true) : Boolean
       {
          var _loc2_:DisplayObject = null;
@@ -159,6 +184,12 @@ package info.k2c.app.scenario.view.text
          {
             if(this.letterDataList[this.textPos])
             {
+               var _loc4_:Boolean = this.letterDataList[this.textPos].display;
+               if(!_loc4_)
+               {
+                  ++this.textPos;
+                  return addNextLetter(param1);
+               }
                _loc2_ = this.letterDataList[this.textPos].letterObj;
                this.textContainer.addChild(_loc2_);
                if(param1)
@@ -191,7 +222,7 @@ package info.k2c.app.scenario.view.text
             _loc1_ = new ReadUpdateEvent(AbstractTextView.ON_UPDATE_EVENT);
             if(this.letterDataList[this.textPos - 1])
             {
-               _loc2_ = this.letterDataList[this.textPos - 1].char;
+               _loc2_ = String(this.letterDataList[this.textPos - 1].char);
                _loc1_.setUpdateText(_loc2_);
             }
             this.dispatchEvent(_loc1_);
@@ -283,6 +314,12 @@ package info.k2c.app.scenario.view.text
          this.letterObjectDataMap = new Dictionary(true);
          var _loc3_:int = 0;
          var _loc4_:ITextStyle = this._textStyle;
+         var inWiki:int = 0;
+         var wikiText:String = "";
+         var leftWiki:LetterData = null;
+         var rightWiki:LetterData = null;
+         var middleWiki:LetterData = null;
+         var charWiki:LetterData = null;
          while(_loc3_ < this.scenarioText.length)
          {
             if(_loc2_.hasOwnProperty(_loc3_))
@@ -290,15 +327,66 @@ package info.k2c.app.scenario.view.text
                this._textStyle = _loc2_[_loc3_] as ITextStyle;
             }
             _loc8_ = this.scenarioText.charAt(_loc3_);
-            _loc9_ = null;
-            if(_loc8_ != "\n")
+            if(_loc8_ == "{")
+            {
+               inWiki = 1;
+               wikiText = "";
+               (leftWiki = new LetterData()).char = "WIKI_START_FLAG";
+               leftWiki.letterObj = this.createLetter(" ");
+               leftWiki.display = false;
+               this.letterDataList.push(leftWiki);
+               _loc3_++;
+            }
+            else if(_loc8_ == "}")
+            {
+               inWiki = 0;
+               wikiText = "";
+               (rightWiki = new LetterData()).char = "WIKI_STOP_FLAG";
+               rightWiki.letterObj = this.createLetter(" ");
+               rightWiki.display = false;
+               this.letterDataList.push(rightWiki);
+               _loc3_++;
+            }
+            else if(inWiki == 1)
+            {
+               if(_loc8_ == "|")
+               {
+                  (middleWiki = new LetterData()).char = "WIKI_SPLIT_FLAG";
+                  middleWiki.letterObj = this.createLetter(" ");
+                  middleWiki.display = false;
+                  this.letterDataList.push(middleWiki);
+                  inWiki = 2;
+                  _loc3_++;
+               }
+               else
+               {
+                  (charWiki = new LetterData()).char = "WIKI_TEXT_CONTENT";
+                  charWiki.letterObj = this.createLetter(" ");
+                  charWiki.display = false;
+                  this.letterDataList.push(charWiki);
+                  wikiText += _loc8_;
+                  _loc3_++;
+               }
+            }
+            else
             {
-               (_loc9_ = new LetterData()).char = _loc8_;
-               _loc9_.letterObj = this.createLetter(_loc8_);
-               this.letterObjectDataMap[_loc9_.letterObj] = _loc9_;
+               _loc9_ = null;
+               if(_loc8_ != "\n")
+               {
+                  (_loc9_ = new LetterData()).char = _loc8_;
+                  if(inWiki == 2)
+                  {
+                     _loc9_.letterObj = this.createLetterWithWiki(_loc8_,wikiText);
+                  }
+                  else
+                  {
+                     _loc9_.letterObj = this.createLetter(_loc8_);
+                  }
+                  this.letterObjectDataMap[_loc9_.letterObj] = _loc9_;
+               }
+               this.letterDataList.push(_loc9_);
+               _loc3_++;
             }
-            this.letterDataList.push(_loc9_);
-            _loc3_++;
          }
          _loc3_ = 0;
          var _loc5_:Number = 0;
@@ -325,6 +413,12 @@ package info.k2c.app.scenario.view.text
                {
                   if(null != this.letterDataList[_loc3_])
                   {
+                     if(!this.letterDataList[_loc3_].display)
+                     {
+                        _loc16_++;
+                        _loc3_++;
+                        continue;
+                     }
                      _loc17_ = this.letterDataList[_loc3_].letterObj;
                      this.letterDataList[_loc3_].ox = _loc5_;
                      this.letterDataList[_loc3_].oy = _loc6_;
@@ -373,28 +467,31 @@ package info.k2c.app.scenario.view.text
             }
             if(_loc3_ + _loc6_.letterObj.width > this.textAreaWidth)
             {
-               if(Util.JapaneseHyphenation_LH.indexOf(_loc6_.char) != -1)
-               {
-                  _loc2_.pop();
-               }
-               _loc7_ = 0;
-               _loc8_ = int(_loc2_.length - 1);
-               while(_loc8_ >= 0)
+               if(_loc6_.display)
                {
-                  _loc9_ = _loc2_[_loc8_];
-                  if(Util.JapaneseHyphenation_LE.indexOf(_loc9_.char) == -1)
+                  if(Util.JapaneseHyphenation_LH.indexOf(_loc6_.char) != -1)
                   {
-                     break;
+                     _loc2_.pop();
                   }
-                  _loc7_++;
-                  _loc8_--;
-               }
-               for each(_loc9_ in _loc2_)
-               {
-                  _loc4_ += _loc9_.letterObj.width;
+                  _loc7_ = 0;
+                  _loc8_ = int(_loc2_.length - 1);
+                  while(_loc8_ >= 0)
+                  {
+                     _loc9_ = _loc2_[_loc8_];
+                     if(Util.JapaneseHyphenation_LE.indexOf(_loc9_.char) == -1)
+                     {
+                        break;
+                     }
+                     _loc7_++;
+                     _loc8_--;
+                  }
+                  for each(_loc9_ in _loc2_)
+                  {
+                     _loc4_ += _loc9_.letterObj.width;
+                  }
+                  _loc2_ = _loc2_.slice(0,_loc2_.length - _loc7_);
+                  break;
                }
-               _loc2_ = _loc2_.slice(0,_loc2_.length - _loc7_);
-               break;
             }
             _loc3_ += _loc6_.letterObj.width;
             _loc2_.push(_loc6_);
@@ -419,6 +516,10 @@ package info.k2c.app.scenario.view.text
          var _loc1_:Boolean = this.isEnd();
          if(_loc1_)
          {
+            _loc5_ = this.getLastCharPos();
+            (_loc6_ = new ReadCompleteEvent(AbstractTextView.ON_COMPLETE_EVENT)).setLastTextPosX(_loc5_.lastChX);
+            _loc6_.setLastTextPosY(_loc5_.lastChY);
+            this.dispatchEvent(_loc6_);
             return false;
          }
          if(!this.isVisible)
@@ -685,82 +786,30 @@ package info.k2c.app.scenario.view.text
          return _loc1_;
       }
       
+      override public function handleMouseClick(event:MouseEvent) : Boolean
+      {
+         var x:int = event.stageX;
+         var y:int = event.stageY;
+         var i:int = 0;
+         while(i < this.textContainer.numChildren)
+         {
+            var child:Sprite = this.textContainer.getChildAt(i) as Sprite;
+            if(child.hasOwnProperty("mouseEnabled") && child.mouseEnabled)
+            {
+               if(child.hitTestPoint(x,y))
+               {
+                  child.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
+                  return true;
+               }
+            }
+            i++;
+         }
+         return false;
+      }
+      
       private function debugTextDrawState() : void
       {
          log.debug("readstop:{0} VOver:{1}",this.stop,this.isVOrver());
       }
    }
 }
-
-import flash.display.DisplayObject;
-import org.libspark.betweenas3.tweens.ITween;
-
-class LetterData
-{
-    
-   
-   private var _char:String;
-   
-   private var _letterObj:DisplayObject;
-   
-   private var _tween:ITween;
-   
-   private var _ox:Number = 0;
-   
-   private var _oy:Number = 0;
-   
-   public function LetterData()
-   {
-      super();
-   }
-   
-   public function get char() : String
-   {
-      return this._char;
-   }
-   
-   public function set char(param1:String) : void
-   {
-      this._char = param1;
-   }
-   
-   public function get letterObj() : DisplayObject
-   {
-      return this._letterObj;
-   }
-   
-   public function set letterObj(param1:DisplayObject) : void
-   {
-      this._letterObj = param1;
-   }
-   
-   public function get ox() : Number
-   {
-      return this._ox;
-   }
-   
-   public function set ox(param1:Number) : void
-   {
-      this._ox = param1;
-   }
-   
-   public function get oy() : Number
-   {
-      return this._oy;
-   }
-   
-   public function set oy(param1:Number) : void
-   {
-      this._oy = param1;
-   }
-   
-   public function get tween() : ITween
-   {
-      return this._tween;
-   }
-   
-   public function set tween(param1:ITween) : void
-   {
-      this._tween = param1;
-   }
-}
diff --git a/info/k2c/app/scenario/view/text/LetterData.as b/info/k2c/app/scenario/view/text/LetterData.as
new file mode 100644
index 0000000..76b25a0
--- /dev/null
+++ b/info/k2c/app/scenario/view/text/LetterData.as
@@ -0,0 +1,99 @@
+package info.k2c.app.scenario.view.text
+{
+   import flash.display.DisplayObject;
+   import org.libspark.betweenas3.tweens.ITween;
+   
+   public class LetterData
+   {
+       
+      
+      private var _char:String;
+      
+      private var _letterObj:DisplayObject;
+      
+      private var _tween:ITween;
+      
+      private var _ox:Number = 0;
+      
+      private var _oy:Number = 0;
+      
+      private var _display:Boolean = true;
+      
+      private var _stop_here:Boolean = false;
+      
+      public function LetterData()
+      {
+         super();
+      }
+      
+      public function get display() : Boolean
+      {
+         return this._display;
+      }
+      
+      public function set display(param1:Boolean) : *
+      {
+         this._display = param1;
+      }
+      
+      public function get stop_here() : Boolean
+      {
+         return this._stop_here;
+      }
+      
+      public function set stop_here(param1:Boolean) : *
+      {
+         this._stop_here = param1;
+      }
+      
+      public function get char() : String
+      {
+         return this._char;
+      }
+      
+      public function set char(param1:String) : void
+      {
+         this._char = param1;
+      }
+      
+      public function get letterObj() : DisplayObject
+      {
+         return this._letterObj;
+      }
+      
+      public function set letterObj(param1:DisplayObject) : void
+      {
+         this._letterObj = param1;
+      }
+      
+      public function get ox() : Number
+      {
+         return this._ox;
+      }
+      
+      public function set ox(param1:Number) : void
+      {
+         this._ox = param1;
+      }
+      
+      public function get oy() : Number
+      {
+         return this._oy;
+      }
+      
+      public function set oy(param1:Number) : void
+      {
+         this._oy = param1;
+      }
+      
+      public function get tween() : ITween
+      {
+         return this._tween;
+      }
+      
+      public function set tween(param1:ITween) : void
+      {
+         this._tween = param1;
+      }
+   }
+}
diff --git a/info/k2c/frameworks/scenario/AppScenarioViewEvent.as b/info/k2c/frameworks/scenario/AppScenarioViewEvent.as
index df88c78..cf3340d 100644
--- a/info/k2c/frameworks/scenario/AppScenarioViewEvent.as
+++ b/info/k2c/frameworks/scenario/AppScenarioViewEvent.as
@@ -23,6 +23,8 @@ package info.k2c.frameworks.scenario
       
       public static const KEY_UP:String = "scenarioViewKeyUp";
       
+      public static const KEY_DOWN:String = "scenarioViewKeyDown";
+      
       public static const MENU_SHOW_REQUEST:String = "menuShowRequest";
       
       public static const MENU_HIDE_REQUEST:String = "menuHideRequest";
@@ -48,6 +50,10 @@ package info.k2c.frameworks.scenario
       public static const CREATE_VIEW_RESTORE_DATA:String = "createViewRestoreData";
       
       public static const VIEW_RESTORE_COMPLETE:String = "viewRestoreComplete";
+      
+      public static const MENU_REQUEST_TRUE_SAVE:String = "menuRequestTrueSave";
+      
+      public static const MENU_REQUEST_TRUE_LOAD:String = "menuRequestTrueLoad";
        
       
       public function AppScenarioViewEvent(param1:String, param2:Boolean = false, param3:Boolean = false, param4:Object = null, param5:Event = null)
diff --git a/info/k2c/frameworks/scenario/view/AbstractTextView.as b/info/k2c/frameworks/scenario/view/AbstractTextView.as
index 01646ff..7e780da 100644
--- a/info/k2c/frameworks/scenario/view/AbstractTextView.as
+++ b/info/k2c/frameworks/scenario/view/AbstractTextView.as
@@ -2,6 +2,7 @@ package info.k2c.frameworks.scenario.view
 {
    import flash.display.DisplayObject;
    import flash.display.Sprite;
+   import flash.events.MouseEvent;
    import info.k2c.frameworks.scenario.view.text.ITextStyle;
    
    public class AbstractTextView extends Sprite
@@ -117,6 +118,11 @@ package info.k2c.frameworks.scenario.view
          return false;
       }
       
+      public function handleMouseClick(param1:MouseEvent) : Boolean
+      {
+         return false;
+      }
+      
       public function isEnd() : Boolean
       {
          return false;
diff --git a/info/k2c/frameworks/scenario/view/text/ITextStyle.as b/info/k2c/frameworks/scenario/view/text/ITextStyle.as
index 70083b4..60c8d11 100644
--- a/info/k2c/frameworks/scenario/view/text/ITextStyle.as
+++ b/info/k2c/frameworks/scenario/view/text/ITextStyle.as
@@ -10,5 +10,7 @@ package info.k2c.frameworks.scenario.view.text
       function setStyle(param1:TextField) : void;
       
       function createLetter(param1:String) : DisplayObject;
+      
+      function createLetterForWiki(param1:String) : DisplayObject;
    }
 }
diff --git a/info/k2c/kjzero/KyojinZeroPrologue_2.as b/info/k2c/kjzero/KyojinZeroPrologue_2.as
deleted file mode 100644
index 4ddfc51..0000000
--- a/info/k2c/kjzero/KyojinZeroPrologue_2.as
+++ /dev/null
@@ -1,81 +0,0 @@
-package info.k2c.kjzero
-{
-   import flash.desktop.NativeApplication;
-   import flash.display.Sprite;
-   import flash.display.StageAlign;
-   import flash.display.StageQuality;
-   import flash.display.StageScaleMode;
-   import flash.events.Event;
-   import flash.filesystem.File;
-   import info.k2c.kjzero.app.GameSystem;
-   import info.k2c.yamalib.font.FontLoader;
-   import info.k2c.yamalib.log.FileTarget;
-   import mx.logging.LogEventLevel;
-   
-   public class KyojinZeroPrologue extends Sprite
-   {
-       
-      
-      private var fonts:FontLoader;
-      
-      private var gameSystem:GameSystem;
-      
-      public function KyojinZeroPrologue()
-      {
-         super();
-         this.initApp();
-         NativeApplication.nativeApplication.autoExit = true;
-      }
-      
-      private function initApp() : void
-      {
-         this.stage.align = StageAlign.TOP_LEFT;
-         this.stage.scaleMode = StageScaleMode.NO_SCALE;
-         this.stage.quality = StageQuality.HIGH;
-         this.fonts = new FontLoader();
-         this.fonts.addEventListener(Event.COMPLETE,this.runApp);
-         this.fonts.load("app:/font/AppFonts.swf");
-      }
-      
-      private function runApp(param1:Event) : void
-      {
-         this.fonts.removeEventListener(Event.COMPLETE,this.runApp);
-         GameSystem.init(this.stage);
-         if("true" == GameSystem.getInstance().appProperties.getProperty("debugFlag"))
-         {
-            this.initLog();
-         }
-         GameSystem.getInstance().run();
-      }
-      
-      private function initLog() : void
-      {
-         var _loc1_:FileTarget = new FileTarget();
-         _loc1_.includeCategory = true;
-         _loc1_.includeDate = true;
-         _loc1_.includeTime = true;
-         _loc1_.includeLevel = true;
-         _loc1_.level = LogEventLevel.INFO;
-         var _loc2_:String = "kyojin_zero";
-         var _loc3_:String = "app.log";
-         var _loc4_:File;
-         if(!(_loc4_ = File.documentsDirectory.resolvePath(_loc2_)).exists)
-         {
-            _loc4_.createDirectory();
-         }
-         _loc1_.directory = _loc4_;
-         _loc1_.filename = _loc3_;
-         var _loc5_:File;
-         if((_loc5_ = _loc4_.resolvePath(_loc3_)).exists)
-         {
-            try
-            {
-               _loc5_.deleteFile();
-            }
-            catch(error:Error)
-            {
-            }
-         }
-      }
-   }
-}
diff --git a/info/k2c/kjzero/app/GameSystem.as b/info/k2c/kjzero/app/GameSystem.as
index 2f35180..3ae2a0b 100644
--- a/info/k2c/kjzero/app/GameSystem.as
+++ b/info/k2c/kjzero/app/GameSystem.as
@@ -380,13 +380,13 @@ package info.k2c.kjzero.app
       private function createCloseDialog() : void
       {
          var noButton:SimpleFontButton;
-         var yesButton:SimpleFontButton = new SimpleFontButton("はい",24);
+         var yesButton:SimpleFontButton = new SimpleFontButton("确定",24);
          yesButton.addEventListener(MouseEvent.CLICK,function():void
          {
             GameSystem.exitApplication();
          });
-         noButton = new SimpleFontButton("いいえ",24);
-         this.closeDialog = this.createDefaultDialog("アプリケーションを終了しますか？",Vector.<DisplayObject>([yesButton,noButton]));
+         noButton = new SimpleFontButton("取消",24);
+         this.closeDialog = this.createDefaultDialog("要结束应用程序吗？",Vector.<DisplayObject>([yesButton,noButton]));
          this.modalDialogLayer = new Sprite();
          this.modalDialogLayer.graphics.beginFill(0,0);
          this.modalDialogLayer.graphics.drawRect(0,0,clientWidth,clientWidth);
diff --git a/info/k2c/kjzero/app/ResourceSettings.as b/info/k2c/kjzero/app/ResourceSettings.as
index 1f15492..5f68a2d 100644
--- a/info/k2c/kjzero/app/ResourceSettings.as
+++ b/info/k2c/kjzero/app/ResourceSettings.as
@@ -22,6 +22,8 @@ package info.k2c.kjzero.app
       
       public static const KEY_DB_SYSTEM:String = "dbSystemFile";
       
+      public static const KEY_JSON_WIKI:String = "wikiJsonFile";
+      
       {
          dbKey.writeUTFBytes("Egroj38D9fUNkkgB");
       }
@@ -60,5 +62,10 @@ package info.k2c.kjzero.app
       {
          return null;
       }
+      
+      public function getWikiObject() : Object
+      {
+         return null;
+      }
    }
 }
diff --git a/info/k2c/kjzero/app/ResourceSettingsAir.as b/info/k2c/kjzero/app/ResourceSettingsAir.as
index 6e0d68d..bc2b7f0 100644
--- a/info/k2c/kjzero/app/ResourceSettingsAir.as
+++ b/info/k2c/kjzero/app/ResourceSettingsAir.as
@@ -1,6 +1,8 @@
 package info.k2c.kjzero.app
 {
    import flash.filesystem.File;
+   import flash.filesystem.FileMode;
+   import flash.filesystem.FileStream;
    import flash.utils.ByteArray;
    import info.k2c.yamalib.db.DBTarget;
    import info.k2c.yamalib.utils.Properties;
@@ -30,6 +32,8 @@ package info.k2c.kjzero.app
       
       public static const KEY_DB_USER:String = "userDBFile";
       
+      public static const KEY_JSON_WIKI:String = "wikiJsonFile";
+      
       {
          dbKey.writeUTFBytes("Egroj38D9fUNkkgB");
       }
@@ -52,6 +56,10 @@ package info.k2c.kjzero.app
       
       private var userDBFile:File;
       
+      private var wikiJson:File;
+      
+      private var wikiObject:Object;
+      
       private var myDbMapping:*;
       
       private var loadDB:Boolean = false;
@@ -70,6 +78,12 @@ package info.k2c.kjzero.app
          this.dbSeFile = getFile(_loc1_,KEY_DB_SE);
          this.dbSystemFile = getFile(_loc1_,KEY_DB_SYSTEM);
          this.userDBFile = getFile(_loc1_,KEY_DB_USER);
+         this.wikiJson = getFile(_loc1_,KEY_JSON_WIKI);
+         var fileStream:FileStream = new FileStream();
+         fileStream.open(this.wikiJson,FileMode.READ);
+         var fileString:String = String(fileStream.readUTFBytes(wikiJson.size));
+         fileStream.close();
+         this.wikiObject = JSON.parse(fileString);
          if(!this.userDBFile.isDirectory)
          {
             File.applicationStorageDirectory.resolvePath("db").createDirectory();
@@ -126,5 +140,10 @@ package info.k2c.kjzero.app
       {
          return this.userDBFile;
       }
+      
+      override public function getWikiObject() : Object
+      {
+         return this.wikiObject;
+      }
    }
 }
diff --git a/info/k2c/kjzero/app/data/ScenarioDefinition.as b/info/k2c/kjzero/app/data/ScenarioDefinition.as
index b7a0830..09e1cbc 100644
--- a/info/k2c/kjzero/app/data/ScenarioDefinition.as
+++ b/info/k2c/kjzero/app/data/ScenarioDefinition.as
@@ -8,8 +8,8 @@ package info.k2c.kjzero.app.data
       private static var instance:ScenarioDefinition = null;
       
       private static const SCENARIO_CHAPTER_LIST:Array = [{
-         "title":"第1章 舎密部警保局捜査1課",
-         "sections":[["深淵より仰向くもの","この物語はいずれ辿り着く深淵より始まる……","SEI_01"],["毒虫","舎密部警保局捜査第１課に配属された新入りの＜オレ＞は何かしっくりこないものを感じながらも、組織の一員としての任務につく。","SEI_01"],["朽根","＜ワタナベ＞は舎密部警保局捜査第１課課長・斑猫と年季の入ったバーではじめて酒を飲むことになった。","SEI_01"],["官房局装備課１","ワタナベは斑猫から譲り受けたクーガーの試し撃ちのため、装備課に銃弾の調達しに向かうが……","SEI_01"],["彼ら――斑猫／吉住／ワタナベ――","銃弾を調達して捜査課に戻ったワタナベは「装備課の女の子」が不愉快そうな視線を斑猫に送るのを見た。","SEI_01"],["ただの銃口と彼らの銃口","４８１発の銃弾を手に入れたワタナベはクーガーを手に取り射撃練習場へと向かう。","SEI_01"],["毒虫は死なない","射撃練習場で埴谷から斑猫が課長に着任するまでの経緯を聞いたワタナベは「呪いの椅子」と呼ばれた第１課課長の椅子にクーガーの照準を向ける。","SEI_01"],["seeing as ...","ワタナベは吉住が装備課へ配属となった顛末について「内偵」を続ける。","SEI_01"],["#４１２００１","試し撃ちでクーガーの射撃精度は向上していくが、「内偵」はまったく進展していない。","SEI_01"],["官房局装備課２","たんまりあった弾丸を使い切ったワタナベは再度装備課へ調達に向かう。","SEI_01"],["L@ve Letter","些細な不正と引き替えに吉住が手渡したラブレターの内容とは……","SEI_01"],["one storied ...","捜査課から吉住をはずしたことに斑猫が関わっていた――ワタナベはその斑猫と再びファブリオで酒をのむ。","SEI_01"],["L@ve Lettering","ワタナベはラブレターの回答を手にして装備課へ向かう。","SEI_01"],["併存する闘争","ワタナベは自己の一部を組織と同化させながら、それ以外の自分が何なのかということを少しずつ見いだしていく。","SEI_01"],["或る、唯一の秋","秋雨が降っている。配属から半年あまり経過したワタナベはまだそこにいる。","SEI_01"],["社会科準備室におけるエスノメソドロジー","膨雀高校二年で山岳部の部員、重村毅人の内偵。初めての本格的な潜入捜査としてワタナベは山岳部に入部するために顧問がいる社会科準備室で入部届を提出する。","SEI_01"],["マンション制圧","重村の潜伏先が判明した。急襲して重村を確保する。","SEI_01"],["無実の罪跡","潜伏先には重村の変死体と一つのゲーム。それが意味するものとは……","SEI_01"],["捜査１課 ～ 重村の痕跡","斑猫は重村のゲーム上の行動を追い、ワタナベは部屋を覆っていた塗料について調査を始める。","SEI_01"],["re:481","調査は着々と進む。その中でワタナベは理由のない射撃衝動にかられ弾丸を手に入れるために装備課へと足を運んでいた。","SEI_01"],["弾痕","熱に浮かされたようにワタナベは射撃場で銃弾を消費する。","SEI_01"],["ファブリオ","ワタナベと斑猫は互いの調査結果をファブリオで交換する。","SEI_01"],["想像と推理、そして事件報告書","事件は解決した――ワタナベはそれを受け入れようとする。","SEI_01"],["ワタナベの銃口","捜査課全員を集めたブリーフィングで事件の終結が宣言される。","SEI_01"],["作戦行動開始","突発的に事象は進展する……","SEI_01"],["射撃場の主","舎密部は敵味方不明の勢力が入り乱れ混乱していた。そんな中ワタナベは射撃場へと向かうが……","SEI_01"],["飼い犬たちの沈黙","電網研に向かうとそこは無人になっていた……","SEI_01"],["這根の毒虫","捜査課にもどるとそこにはデスクに座って端末を操作する斑猫がいた。","SEI_01"],["事件の終わり","互いに警保局局長殺害を主張する諜報課と捜査課の仲介に単独ワタナベが向かう。","SEI_01"],["新しい事件","舎密部の内紛は収まった、だが斑猫は戻ってこなかった。","SEI_01"]]
+         "title":"第一章 舍密部警保局搜查1课",
+         "sections":[["深渊的仰望者","这个故事从我们终将抵达的深渊开始……","SEI_01"],["毒虫","刚被分配到舍密部警保局搜查第1课时，一切都无处适从，但任务仍在催促，因为“我”是组织的一员。","SEI_01"],["朽根","＜渡边＞和舍密部警保局搜查第1课课长斑猫灌起了酒精。","SEI_01"],["官房局装备课1","从斑猫手里接过美洲豹后，为了试射，渡边向装备课申请子弹……","SEI_01"],["他们——斑猫/吉住/渡边——","渡边与刚领的子弹回到搜查课时，“装备课的女子”用目光向斑猫叙说着不快。","SEI_01"],["普通的枪口和他们的枪口","481发子弹，一把美洲狮，渡边走向了靶场。","SEI_01"],["毒虫は死なない","射撃練習場で埴谷から斑猫が課長に着任するまでの経緯を聞いたワタナベは「呪いの椅子」と呼ばれた第１課課長の椅子にクーガーの照準を向ける。","SEI_01"],["seeing as ...","ワタナベは吉住が装備課へ配属となった顛末について「内偵」を続ける。","SEI_01"],["#４１２００１","試し撃ちでクーガーの射撃精度は向上していくが、「内偵」はまったく進展していない。","SEI_01"],["官房局装備課２","たんまりあった弾丸を使い切ったワタナベは再度装備課へ調達に向かう。","SEI_01"],["L@ve Letter","些細な不正と引き替えに吉住が手渡したラブレターの内容とは……","SEI_01"],["one storied ...","捜査課から吉住をはずしたことに斑猫が関わっていた――ワタナベはその斑猫と再びファブリオで酒をのむ。","SEI_01"],["L@ve Lettering","ワタナベはラブレターの回答を手にして装備課へ向かう。","SEI_01"],["併存する闘争","ワタナベは自己の一部を組織と同化させながら、それ以外の自分が何なのかということを少しずつ見いだしていく。","SEI_01"],["或る、唯一の秋","秋雨が降っている。配属から半年あまり経過したワタナベはまだそこにいる。","SEI_01"],["社会科準備室におけるエスノメソドロジー","膨雀高校二年で山岳部の部員、重村毅人の内偵。初めての本格的な潜入捜査としてワタナベは山岳部に入部するために顧問がいる社会科準備室で入部届を提出する。","SEI_01"],["マンション制圧","重村の潜伏先が判明した。急襲して重村を確保する。","SEI_01"],["無実の罪跡","潜伏先には重村の変死体と一つのゲーム。それが意味するものとは……","SEI_01"],["捜査１課 ～ 重村の痕跡","斑猫は重村のゲーム上の行動を追い、ワタナベは部屋を覆っていた塗料について調査を始める。","SEI_01"],["re:481","調査は着々と進む。その中でワタナベは理由のない射撃衝動にかられ弾丸を手に入れるために装備課へと足を運んでいた。","SEI_01"],["弾痕","熱に浮かされたようにワタナベは射撃場で銃弾を消費する。","SEI_01"],["ファブリオ","ワタナベと斑猫は互いの調査結果をファブリオで交換する。","SEI_01"],["想像と推理、そして事件報告書","事件は解決した――ワタナベはそれを受け入れようとする。","SEI_01"],["ワタナベの銃口","捜査課全員を集めたブリーフィングで事件の終結が宣言される。","SEI_01"],["作戦行動開始","突発的に事象は進展する……","SEI_01"],["射撃場の主","舎密部は敵味方不明の勢力が入り乱れ混乱していた。そんな中ワタナベは射撃場へと向かうが……","SEI_01"],["飼い犬たちの沈黙","電網研に向かうとそこは無人になっていた……","SEI_01"],["這根の毒虫","捜査課にもどるとそこにはデスクに座って端末を操作する斑猫がいた。","SEI_01"],["事件の終わり","互いに警保局局長殺害を主張する諜報課と捜査課の仲介に単独ワタナベが向かう。","SEI_01"],["新しい事件","舎密部の内紛は収まった、だが斑猫は戻ってこなかった。","SEI_01"]]
       },{
          "title":"第2章 消えた斑猫",
          "sections":[["暗函","ワタナベと名付けられた何ものかは名付けられたことによって境界を意識し始める。それは捜査とは完全に区別された個人的な体験だったのか。","SEI_02"],["ＸＮＣ２８Ｂ０３９","ワタナベがその得体の知れない薬瓶を振るとクスリたちはざらざらと音をたてた。","SEI_02"],["監視カメラ／不等速非直線運動","それは絶対ではないが、だからといって相対というわけではない。何ものかがそう望むように恣意的に見える。","SEI_02"],["ゼロ合目","ワタナベは＜ここ＞から山頂を臨む。","SEI_02"],["fictional injection","そいつは真実なんかよりも強行に侵入してくるのに、誰もそれに気付かないでいる。","SEI_02"],["重村の攻略ノート","そのノートは真新しく数式は物理法則を原則準用している。","SEI_02"],["飼い犬たちの夕餉","彼らの首輪に繋がっている鎖は何でできていて、どこにつなぎ止められているのか。","SEI_02"],["狙撃する記号たち","現実は記号化され象徴的にワタナベに狙いをさだめる。","SEI_02"],["射己","ワタナベの射撃は非芸術的に精確だった。そこには一切の感動はない。","SEI_02"],["10/07 AM 08:47:55","彼女はそのとき何を直視していたのだろう。彼女は不敵に笑っている。","SEI_02"],["お月見山入口にて","ワタナベは終着駅で電車を降りる。","SEI_02"],["お月見山登山道","その道はひっそりとして異様で、ワタナベだけが神妙に歩みを進める。","SEI_02"],["お月見山（裏）登山道","日常だけが現実じゃない。非日常もまた現実なのだ。現実は彼らを包囲する。","SEI_02"],["彼らの静かなパーティ","そのパーティはその空間の外で最高潮に達していた。","SEI_02"],["青髯の男たち","彼らはワタナベと積極的にコンタクトを試みた。","SEI_02"],["過重労働――ケイ","お月見山から戻ったワタナベはまず自身の感覚を無意識に批判する――機械的に、非人間的に。","SEI_02"],["戦の前に確認すべき唯一の事","すべてを冷静に認識するとき、それ以外はすべて虚妄なのだと認識してしまう。そのときケイは……","SEI_02"],["中華屋にて――デッドフィールドへのログイン方法","ＸＮＣ２８Ｂ０３９はデッドフィールドにログインするためのリアルタイム生体認証を実装したナノマシンであることを知らされる。","SEI_02"],["電磁被曝保護室","その電磁的な静寂の中でワタナベはデッドフィールドをはじめてプレイする。","SEI_02"]]
diff --git a/info/k2c/kjzero/app/factory/AirSceneFactory.as b/info/k2c/kjzero/app/factory/AirSceneFactory.as
index 7b953df..ef9809a 100644
--- a/info/k2c/kjzero/app/factory/AirSceneFactory.as
+++ b/info/k2c/kjzero/app/factory/AirSceneFactory.as
@@ -6,6 +6,7 @@ package info.k2c.kjzero.app.factory
    import info.k2c.kjzero.tasks.LogoTask;
    import info.k2c.kjzero.tasks.MvpScenarioTask;
    import info.k2c.kjzero.tasks.OptionTask;
+   import info.k2c.kjzero.tasks.SaveLoadTask;
    import info.k2c.kjzero.tasks.TestTask;
    import info.k2c.kjzero.tasks.TitleTask;
    import info.k2c.kjzero.tasks.ending.EndingTask;
@@ -69,6 +70,10 @@ package info.k2c.kjzero.app.factory
                return new EndingTask(this.gameSystem);
             case TEST:
                return new TestTask(this.gameSystem);
+            case SAVE:
+               return new SaveLoadTask(this.gameSystem,true);
+            case LOAD:
+               return new SaveLoadTask(this.gameSystem,false);
             default:
                log.info("undefined task id:" + param1);
                return null;
diff --git a/info/k2c/kjzero/app/factory/MySceneFactory.as b/info/k2c/kjzero/app/factory/MySceneFactory.as
index eeed397..be05752 100644
--- a/info/k2c/kjzero/app/factory/MySceneFactory.as
+++ b/info/k2c/kjzero/app/factory/MySceneFactory.as
@@ -20,6 +20,10 @@ package info.k2c.kjzero.app.factory
       
       public static const OPTION:String = "OPTION";
       
+      public static const SAVE:String = "SAVE";
+      
+      public static const LOAD:String = "LOAD";
+      
       public static const SAVELOAD:String = "SAVELOAD";
       
       public static const CHAPTER_SELECT:String = "CHAPTER_SELECT";
diff --git a/info/k2c/kjzero/dao/ScenarioSaveInfoDAO.as b/info/k2c/kjzero/dao/ScenarioSaveInfoDAO.as
index 0caccc1..628d8cc 100644
--- a/info/k2c/kjzero/dao/ScenarioSaveInfoDAO.as
+++ b/info/k2c/kjzero/dao/ScenarioSaveInfoDAO.as
@@ -57,6 +57,77 @@ package info.k2c.kjzero.dao
          }
       }
       
+      public function replaceSaveData(replaceID:int, saveData:Object) : Number
+      {
+         var sqlStatement:SQLStatement;
+         var sqlStr:String;
+         if(!this.isAvailable())
+         {
+            log.warn("db unavailable. db : {0} table : {1}",this.db,this.tableName);
+            return -99;
+         }
+         sqlStatement = new SQLStatement();
+         sqlStatement.sqlConnection = this.connection;
+         try
+         {
+            sqlStr = "REPLACE INTO " + this.tableName + " (id, name, category1, category2, category3, category4, category5, thumbnail, metadata, data, lastupdatetime) VALUES " + "(:id, :name, :category1, :category2, :category3, :category4, :category5, :thumbnail, :metadata, :data, datetime(\'now\', \'localtime\'))";
+            sqlStatement.text = sqlStr;
+            sqlStatement.parameters[":id"] = replaceID;
+            sqlStatement.parameters[":name"] = saveData.name as String;
+            sqlStatement.parameters[":category1"] = saveData.category1 as String;
+            sqlStatement.parameters[":category2"] = saveData.category2 as String;
+            sqlStatement.parameters[":category3"] = saveData.category3 as String;
+            sqlStatement.parameters[":category4"] = saveData.category4 as String;
+            sqlStatement.parameters[":category5"] = saveData.category5 as String;
+            sqlStatement.parameters[":thumbnail"] = saveData.thumbnail as ByteArray;
+            sqlStatement.parameters[":metadata"] = JSON.stringify(saveData.metadata);
+            sqlStatement.parameters[":data"] = saveData.data;
+            sqlStatement.text = sqlStr;
+            sqlStatement.execute();
+            return sqlStatement.sqlConnection.lastInsertRowID;
+         }
+         catch(e:*)
+         {
+            log.error("insert error : {0}",e);
+         }
+         return -99;
+      }
+      
+      public function addMyOwnSaveData(param:Object) : Number
+      {
+         var sqlStatement:SQLStatement;
+         var sqlStr:String;
+         if(!this.isAvailable())
+         {
+            log.warn("db unavailable. db : {0} table : {1}",this.db,this.tableName);
+            return -99;
+         }
+         sqlStatement = new SQLStatement();
+         sqlStatement.sqlConnection = this.connection;
+         try
+         {
+            sqlStr = "INSERT INTO " + this.tableName + " (id, name, category1, category2, category3, category4, category5, thumbnail, metadata, data, lastupdatetime) VALUES " + "(null, :name, :category1, :category2, :category3, :category4, :category5, :thumbnail, :metadata, :data, datetime(\'now\', \'localtime\'))";
+            sqlStatement.text = sqlStr;
+            sqlStatement.parameters[":name"] = param.name as String;
+            sqlStatement.parameters[":category1"] = param.category1 as String;
+            sqlStatement.parameters[":category2"] = param.category2 as String;
+            sqlStatement.parameters[":category3"] = param.category3 as String;
+            sqlStatement.parameters[":category4"] = param.category4 as String;
+            sqlStatement.parameters[":category5"] = param.category5 as String;
+            sqlStatement.parameters[":thumbnail"] = param.thumbnail as ByteArray;
+            sqlStatement.parameters[":metadata"] = JSON.stringify(param.metadata);
+            sqlStatement.parameters[":data"] = param.data;
+            sqlStatement.text = sqlStr;
+            sqlStatement.execute();
+            return sqlStatement.sqlConnection.lastInsertRowID;
+         }
+         catch(e:*)
+         {
+            log.error("insert error : {0}",e);
+         }
+         return -99;
+      }
+      
       public function addSaveData(param1:*) : Number
       {
          var sqlStatement:SQLStatement;
@@ -65,16 +136,15 @@ package info.k2c.kjzero.dao
          if(!this.isAvailable())
          {
             log.warn("db unavailable. db : {0} table : {1}",this.db,this.tableName);
-            return Number.NaN;
+            return -99;
          }
          sqlStatement = new SQLStatement();
          sqlStatement.sqlConnection = this.connection;
          try
          {
-            sqlStr = "INSERT INTO " + this.tableName + " (id, name, type, category1, category2, category3, category4, category5, thumbnail, metadata, data, lastupdatetime) VALUES " + "(null, :name, :type, :category1, :category2, :category3, :category4, :category5, :thumbnail, :metadata, :data, datetime(\'now\', \'localtime\'))";
+            sqlStr = "INSERT INTO " + this.tableName + " (id, name, category1, category2, category3, category4, category5, thumbnail, metadata, data, lastupdatetime) VALUES " + "(null, :name, :category1, :category2, :category3, :category4, :category5, :thumbnail, :metadata, :data, datetime(\'now\', \'localtime\'))";
             sqlStatement.text = sqlStr;
             sqlStatement.parameters[":name"] = data.name as String;
-            sqlStatement.parameters[":type"] = data.type as Number;
             sqlStatement.parameters[":category1"] = data.category1 as String;
             sqlStatement.parameters[":category2"] = data.category2 as String;
             sqlStatement.parameters[":category3"] = data.category3 as String;
@@ -92,7 +162,7 @@ package info.k2c.kjzero.dao
          {
             log.error("insert error : {0}",e);
          }
-         return Number.NaN;
+         return -99;
       }
       
       public function updateSaveData(param1:*, param2:Number) : void
diff --git a/info/k2c/kjzero/models/ChapterDataManager.as b/info/k2c/kjzero/models/ChapterDataManager.as
index 9e23514..96153cc 100644
--- a/info/k2c/kjzero/models/ChapterDataManager.as
+++ b/info/k2c/kjzero/models/ChapterDataManager.as
@@ -10,7 +10,7 @@ package info.k2c.kjzero.models
    {
        
       
-      private var chapterIdList:Vector.<String>;
+      public var chapterIdList:Vector.<String>;
       
       private var chapterDataMap:Dictionary;
       
diff --git a/info/k2c/kjzero/scenario/AdvUIView.as b/info/k2c/kjzero/scenario/AdvUIView.as
index 1994acf..75e0bec 100644
--- a/info/k2c/kjzero/scenario/AdvUIView.as
+++ b/info/k2c/kjzero/scenario/AdvUIView.as
@@ -75,6 +75,18 @@ package info.k2c.kjzero.scenario
       },{
          "fileid":"system/common/updown_mask.png",
          "props":{"id":"updown_mask"}
+      },{
+         "fileid":"system/adv/menu_save_button.png",
+         "props":{"id":"menu_save_button"}
+      },{
+         "fileid":"system/adv/menu_save_button_over.png",
+         "props":{"id":"menu_save_button_over"}
+      },{
+         "fileid":"system/adv/menu_load_button.png",
+         "props":{"id":"menu_load_button"}
+      },{
+         "fileid":"system/adv/menu_load_button_over.png",
+         "props":{"id":"menu_load_button_over"}
       }]);
        
       
@@ -222,6 +234,8 @@ package info.k2c.kjzero.scenario
       private function initSileMenu() : void
       {
          var mask:Bitmap;
+         var buttonTrueSave:ModefulButton;
+         var buttonLoad:ModefulButton;
          var buttonSave:ModefulButton;
          var buttonOption:ModefulButton;
          var buttonExit:ModefulButton;
@@ -236,9 +250,29 @@ package info.k2c.kjzero.scenario
          this.menuContainer.addChild(mask);
          this.scenarioProgressContainer.cacheAsBitmap = mask.cacheAsBitmap = true;
          this.scenarioProgressContainer.mask = mask;
+         buttonTrueSave = this.createButton("menu_save_button","menu_save_button_over");
+         buttonTrueSave.x = 145;
+         buttonTrueSave.y = 218;
+         buttonTrueSave.addEventListener(MouseEvent.CLICK,function():void
+         {
+            var _loc1_:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
+            SEManager.getInstance().playSE(_loc1_.id,_loc1_);
+            dispatchEvent(new AppScenarioViewEvent(AppScenarioViewEvent.MENU_REQUEST_TRUE_SAVE));
+         });
+         this.menuContainer.addChild(buttonTrueSave);
+         buttonLoad = this.createButton("menu_load_button","menu_load_button_over");
+         buttonLoad.x = 145;
+         buttonLoad.y = 278;
+         buttonLoad.addEventListener(MouseEvent.CLICK,function():void
+         {
+            var _loc1_:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
+            SEManager.getInstance().playSE(_loc1_.id,_loc1_);
+            dispatchEvent(new AppScenarioViewEvent(AppScenarioViewEvent.MENU_REQUEST_TRUE_LOAD));
+         });
+         this.menuContainer.addChild(buttonLoad);
          buttonSave = this.createButton("menu_select_button","menu_select_button_over");
          buttonSave.x = 145;
-         buttonSave.y = 218;
+         buttonSave.y = 338;
          buttonSave.addEventListener(MouseEvent.CLICK,function():void
          {
             var _loc1_:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
@@ -248,7 +282,7 @@ package info.k2c.kjzero.scenario
          this.menuContainer.addChild(buttonSave);
          buttonOption = this.createButton("menu_option_button","menu_option_button_over");
          buttonOption.x = 145;
-         buttonOption.y = 278;
+         buttonOption.y = 398;
          buttonOption.addEventListener(MouseEvent.CLICK,function():void
          {
             var _loc1_:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
@@ -258,18 +292,18 @@ package info.k2c.kjzero.scenario
          this.menuContainer.addChild(buttonOption);
          buttonExit = this.createButton("menu_quit_button","menu_quit_button_over");
          buttonExit.x = 145;
-         buttonExit.y = 338;
-         yesButton = new SimpleFontButton("はい",24);
+         buttonExit.y = 458;
+         yesButton = new SimpleFontButton("确定",24);
          yesButton.addEventListener(MouseEvent.CLICK,function():void
          {
             var _loc1_:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
             SEManager.getInstance().playSE(_loc1_.id,_loc1_);
             dispatchEvent(new AppScenarioViewEvent(AppScenarioViewEvent.MENU_REQUEST_TITLE));
          });
-         noButton = new SimpleFontButton("いいえ",24);
+         noButton = new SimpleFontButton("取消",24);
          buttonExit.addEventListener(MouseEvent.CLICK,function():void
          {
-            GameSystem.getInstance().showModalDialog("タイトル画面に戻りますが、よろしいですか？",Vector.<DisplayObject>([yesButton,noButton]));
+            GameSystem.getInstance().showModalDialog("是否返回标题画面？",Vector.<DisplayObject>([yesButton,noButton]));
          });
          this.menuContainer.addChild(buttonExit);
          this.taskScreen.addChild(this.menuContainer);
@@ -334,7 +368,7 @@ package info.k2c.kjzero.scenario
          if(null !== param1)
          {
             _loc2_ = String(param1["scenarioId"]);
-            _loc3_ = parseInt(param1["sceneNo"]);
+            _loc3_ = int(parseInt(param1["sceneNo"]));
          }
          if(!this.menuContainer.visible)
          {
diff --git a/info/k2c/kjzero/scenario/AppAdvView.as b/info/k2c/kjzero/scenario/AppAdvView.as
index 1eb093b..f55bd5e 100644
--- a/info/k2c/kjzero/scenario/AppAdvView.as
+++ b/info/k2c/kjzero/scenario/AppAdvView.as
@@ -135,7 +135,7 @@ package info.k2c.kjzero.scenario
          var _loc2_:DisplayObjectContainer = this._viewLayerContainer.getLayer(ViewLayerDefinition.WORLD_CONTAINER);
          var _loc3_:Matrix = new Matrix();
          var _loc4_:BitmapData;
-         (_loc4_ = new BitmapData(_loc2_.width,_loc2_.height)).draw(_loc2_,_loc3_);
+         (_loc4_ = new BitmapData(1280,720)).draw(_loc2_,_loc3_);
          var _loc5_:DisplayObjectContainer = this._viewLayerContainer.getLayer(ViewLayerDefinition.TEXT_LAYER);
          _loc4_.draw(_loc5_,_loc3_);
          return _loc4_;
diff --git a/info/k2c/kjzero/scenario/AppNovelView.as b/info/k2c/kjzero/scenario/AppNovelView.as
index 2d08efa..77c1ef6 100644
--- a/info/k2c/kjzero/scenario/AppNovelView.as
+++ b/info/k2c/kjzero/scenario/AppNovelView.as
@@ -1,7 +1,12 @@
 package info.k2c.kjzero.scenario
 {
+   import flash.display.BitmapData;
+   import flash.display.DisplayObjectContainer;
+   import flash.display.Sprite;
    import flash.display.Stage;
+   import flash.geom.Matrix;
    import info.k2c.app.scenario.AbstractAppScenarioView;
+   import info.k2c.frameworks.scenario.view.ViewLayerDefinition;
    import mx.logging.ILogger;
    import mx.logging.Log;
    
@@ -15,5 +20,17 @@ package info.k2c.kjzero.scenario
       {
          super(param1);
       }
+      
+      override public function getScreenShot() : BitmapData
+      {
+         var _loc1_:Sprite = new Sprite();
+         var _loc2_:DisplayObjectContainer = this._viewLayerContainer.getLayer(ViewLayerDefinition.WORLD_CONTAINER);
+         var _loc3_:Matrix = new Matrix();
+         var _loc4_:BitmapData;
+         (_loc4_ = new BitmapData(1280,720)).draw(_loc2_,_loc3_);
+         var _loc5_:DisplayObjectContainer = this._viewLayerContainer.getLayer(ViewLayerDefinition.TEXT_LAYER);
+         _loc4_.draw(_loc5_,_loc3_);
+         return _loc4_;
+      }
    }
 }
diff --git a/info/k2c/kjzero/scenario/AppPresenterBase.as b/info/k2c/kjzero/scenario/AppPresenterBase.as
index e1e8f14..458e435 100644
--- a/info/k2c/kjzero/scenario/AppPresenterBase.as
+++ b/info/k2c/kjzero/scenario/AppPresenterBase.as
@@ -82,6 +82,35 @@ package info.k2c.kjzero.scenario
          this.processTaskCommand("call",MySceneFactory.OPTION,_loc2_);
       }
       
+      override protected function onScenarioMenuTrueSaveRequest(param1:Event) : void
+      {
+         var screenShot:* = this.scenarioView.getScreenShot();
+         this.scenarioView.hideScenarioMenu();
+         var _loc2_:Object = {
+            "bgmManager":bgmMgr,
+            "seManager":seMgr,
+            "currentScenarioId":this.scenarioInfo.scenarioId,
+            "currentSceneNo":this.currentPageData.sceneNo,
+            "screenShot":screenShot,
+            "currentText":this.currentPageData.text,
+            "currentPos":this.scenarioPageMgr.currentPageNo,
+            "currentScenarioView":this.scenarioView
+         };
+         this.scenarioView.hideScenarioMenu();
+         this.processTaskCommand("call",MySceneFactory.SAVE,_loc2_);
+      }
+      
+      override protected function onScenarioMenuTrueLoadRequest(param1:Event) : void
+      {
+         this.scenarioView.hideScenarioMenu();
+         var _loc2_:Object = {
+            "bgmManager":bgmMgr,
+            "seManager":seMgr
+         };
+         this.scenarioView.hideScenarioMenu();
+         this.processTaskCommand("call",MySceneFactory.LOAD,_loc2_);
+      }
+      
       override protected function onScenarioMenuTitleRequest(param1:Event) : void
       {
          log.info("click title");
diff --git a/info/k2c/kjzero/scenario/NovelUIView.as b/info/k2c/kjzero/scenario/NovelUIView.as
index 9a3e8d6..8e81f3e 100644
--- a/info/k2c/kjzero/scenario/NovelUIView.as
+++ b/info/k2c/kjzero/scenario/NovelUIView.as
@@ -88,6 +88,18 @@ package info.k2c.kjzero.scenario
       },{
          "fileid":"system/common/updown_mask.png",
          "props":{"id":"updown_mask"}
+      },{
+         "fileid":"system/scenario/button_load.png",
+         "props":{"id":"button_load"}
+      },{
+         "fileid":"system/scenario/button_load_over.png",
+         "props":{"id":"button_load_over"}
+      },{
+         "fileid":"system/scenario/button_save.png",
+         "props":{"id":"button_save"}
+      },{
+         "fileid":"system/scenario/button_save_over.png",
+         "props":{"id":"button_save_over"}
       }]);
        
       
@@ -217,7 +229,7 @@ package info.k2c.kjzero.scenario
             currentSectionMarker = loader.getBitmap("arrow-right");
             readSectionPopupContainer = new Sprite();
             readSectionPopupContainer.addChild(loader.getBitmap("popup_frame_read"));
-            var _loc1_:DisplayObject = createReadSectionTextObject("☑セクション読了",25);
+            var _loc1_:DisplayObject = createReadSectionTextObject("☑片段阅读完毕",25);
             _loc1_.x = readSectionPopupContainer.width - _loc1_.width - 10;
             readSectionPopupContainer.addChild(_loc1_);
             deferred.resolve(null);
@@ -271,6 +283,8 @@ package info.k2c.kjzero.scenario
          var buttonSave:ZoomModefulButton;
          var buttonOption:ZoomModefulButton;
          var buttonExit:ZoomModefulButton;
+         var buttonTrueSave:ZoomModefulButton;
+         var buttonLoad:ZoomModefulButton;
          var yesButton:SimpleFontButton = null;
          var noButton:SimpleFontButton = null;
          this.sideMenuContainer = new Sprite();
@@ -298,6 +312,26 @@ package info.k2c.kjzero.scenario
          this.scenarioProgressContainer.mask = mask;
          progressBackground.addChild(mask);
          progressBackground.addChild(this.scenarioProgressContainer);
+         buttonTrueSave = new ZoomModefulButton(this.loader.getBitmap("button_save"),null,this.loader.getBitmap("button_save_over"));
+         buttonTrueSave.x = 7;
+         buttonTrueSave.y = 162;
+         buttonTrueSave.addEventListener(MouseEvent.CLICK,function():void
+         {
+            var _loc1_:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
+            SEManager.getInstance().playSE(_loc1_.id,_loc1_);
+            dispatchEvent(new AppScenarioViewEvent(AppScenarioViewEvent.MENU_REQUEST_TRUE_SAVE));
+         });
+         buttonLoad = new ZoomModefulButton(this.loader.getBitmap("button_load"),null,this.loader.getBitmap("button_load_over"));
+         buttonLoad.x = 7;
+         buttonLoad.y = 270;
+         buttonLoad.addEventListener(MouseEvent.CLICK,function():void
+         {
+            var _loc1_:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
+            SEManager.getInstance().playSE(_loc1_.id,_loc1_);
+            dispatchEvent(new AppScenarioViewEvent(AppScenarioViewEvent.MENU_REQUEST_TRUE_LOAD));
+         });
+         this.sideMenuContainer.addChild(buttonLoad);
+         this.sideMenuContainer.addChild(buttonTrueSave);
          buttonSave = new ZoomModefulButton(this.loader.getBitmap("button_select_capter"),null,this.loader.getBitmap("button_select_capter_over"));
          buttonSave.x = 7;
          buttonSave.y = 378;
@@ -321,17 +355,17 @@ package info.k2c.kjzero.scenario
          buttonExit = new ZoomModefulButton(this.loader.getBitmap("button_exit"),null,this.loader.getBitmap("button_exit_over"));
          buttonExit.x = 7;
          buttonExit.y = 588;
-         yesButton = new SimpleFontButton("はい",24);
+         yesButton = new SimpleFontButton("确定",24);
          yesButton.addEventListener(MouseEvent.CLICK,function():void
          {
             var _loc1_:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
             SEManager.getInstance().playSE(_loc1_.id,_loc1_);
             dispatchEvent(new AppScenarioViewEvent(AppScenarioViewEvent.MENU_REQUEST_TITLE));
          });
-         noButton = new SimpleFontButton("いいえ",24);
+         noButton = new SimpleFontButton("取消",24);
          buttonExit.addEventListener(MouseEvent.CLICK,function():void
          {
-            GameSystem.getInstance().showModalDialog("タイトル画面に戻りますが、よろしいですか？",Vector.<DisplayObject>([yesButton,noButton]));
+            GameSystem.getInstance().showModalDialog("是否返回标题画面？",Vector.<DisplayObject>([yesButton,noButton]));
          });
          this.sideMenuContainer.addChild(buttonExit);
          this.taskScreen.addChild(this.sideMenuContainer);
@@ -397,7 +431,7 @@ package info.k2c.kjzero.scenario
          if(null !== param1)
          {
             _loc2_ = String(param1["scenarioId"]);
-            _loc3_ = parseInt(param1["sceneNo"]);
+            _loc3_ = int(parseInt(param1["sceneNo"]));
          }
          if(!this.sideMenuContainer.visible)
          {
diff --git a/info/k2c/kjzero/scenario/view/AppAdventureMessageView.as b/info/k2c/kjzero/scenario/view/AppAdventureMessageView.as
index 773c8f3..0df9597 100644
--- a/info/k2c/kjzero/scenario/view/AppAdventureMessageView.as
+++ b/info/k2c/kjzero/scenario/view/AppAdventureMessageView.as
@@ -30,7 +30,6 @@ package info.k2c.kjzero.scenario.view
          this.parentLayer = param1;
          var _loc2_:TextFormat = TextStyleImpl.getGothicTextStyle();
          _loc2_.bold = false;
-         _loc2_.letterSpacing = 2.5;
          var _loc3_:TextStyleImpl = new TextStyleImpl(_loc2_);
          var _loc4_:int = 996;
          var _loc5_:int = 200;
diff --git a/info/k2c/kjzero/scenario/view/text/BacklogTextStyle.as b/info/k2c/kjzero/scenario/view/text/BacklogTextStyle.as
index 79e0a56..0819cfe 100644
--- a/info/k2c/kjzero/scenario/view/text/BacklogTextStyle.as
+++ b/info/k2c/kjzero/scenario/view/text/BacklogTextStyle.as
@@ -41,7 +41,7 @@ package info.k2c.kjzero.scenario.view.text
          _loc1_.kerning = true;
          _loc1_.align = TextFormatAlign.LEFT;
          _loc1_.leading = 5;
-         _loc1_.letterSpacing = -3;
+         _loc1_.letterSpacing = 3;
          return _loc1_;
       }
       
@@ -83,11 +83,16 @@ package info.k2c.kjzero.scenario.view.text
             _loc2_.x = -_loc2_.width / 2;
             _loc2_.y = -_loc2_.height / 2;
          }
-         var _loc3_:BitmapData = new BitmapData(_loc2_.textWidth,_loc2_.textHeight,false,16777215);
+         var _loc3_:BitmapData = new BitmapData(_loc2_.textWidth,_loc2_.textHeight,true,16777215);
          _loc3_.draw(_loc2_);
          var _loc4_:Bitmap = new Bitmap(_loc3_);
-         _loc3_.dispose();
+         _loc4_.smoothing = true;
          return _loc4_;
       }
+      
+      public function createLetterForWiki(param1:String) : DisplayObject
+      {
+         return this.createLetter(param1);
+      }
    }
 }
diff --git a/info/k2c/kjzero/scenario/view/text/ChapterListSprite.as b/info/k2c/kjzero/scenario/view/text/ChapterListSprite.as
new file mode 100644
index 0000000..3e27180
--- /dev/null
+++ b/info/k2c/kjzero/scenario/view/text/ChapterListSprite.as
@@ -0,0 +1,102 @@
+package info.k2c.kjzero.scenario.view.text
+{
+   import flash.display.Sprite;
+   import flash.events.Event;
+   import info.k2c.yamalib.utils.Util;
+   import mx.logging.ILogger;
+   import mx.logging.Log;
+   
+   public class ChapterListSprite extends Sprite
+   {
+      
+      public static const EVENT_PROGRESS_SLIDE:String = "progress_slide";
+      
+      private static var CHAPTER_LINE_MARGIN:int = 50;
+      
+      private static var log:ILogger = Log.getLogger("ChapterListSprite");
+       
+      
+      private var chapterSpriteList:Vector.<ChapterSprite>;
+      
+      private var _chapterStartHeightList:Vector.<int>;
+      
+      private var _displayHeight:int = 0;
+      
+      public function ChapterListSprite()
+      {
+         this.chapterSpriteList = new Vector.<ChapterSprite>();
+         this._chapterStartHeightList = new Vector.<int>();
+         super();
+      }
+      
+      public function dispose() : void
+      {
+         var _loc1_:ChapterSprite = null;
+         for each(_loc1_ in this.chapterSpriteList)
+         {
+            _loc1_.dispose();
+         }
+         Util.removeAllChild(this);
+      }
+      
+      public function get chapterStartHeightList() : Vector.<int>
+      {
+         return this._chapterStartHeightList;
+      }
+      
+      public function get displayHeight() : int
+      {
+         if(this._displayHeight <= 0)
+         {
+            return this.height;
+         }
+         return this._displayHeight;
+      }
+      
+      public function addChapterSprite(param1:ChapterSprite) : void
+      {
+         this.updateChaperSpriteHeight(null);
+         if(this.displayHeight != 0)
+         {
+            param1.y = this.displayHeight + CHAPTER_LINE_MARGIN;
+         }
+         this.chapterSpriteList.push(param1);
+         param1.addEventListener(ChapterSprite.EVENT_PROGRESS_SLIDE,this.updateChaperSpriteHeight);
+         this.addChild(param1);
+      }
+      
+      public function getChapterSprite(param1:String, param2:String) : ChapterSprite
+      {
+         var _loc3_:ChapterSprite = null;
+         for each(_loc3_ in this.chapterSpriteList)
+         {
+            if(_loc3_.hasScenarioScene(param1,param2))
+            {
+               return _loc3_;
+            }
+         }
+         return null;
+      }
+      
+      private function updateChaperSpriteHeight(param1:Event) : void
+      {
+         var _loc4_:ChapterSprite = null;
+         this._chapterStartHeightList = new Vector.<int>();
+         var _loc2_:int = 0;
+         var _loc3_:int = 0;
+         while(_loc3_ < this.chapterSpriteList.length)
+         {
+            if(_loc3_ > 0)
+            {
+               _loc2_ += CHAPTER_LINE_MARGIN;
+            }
+            this._chapterStartHeightList.push(_loc2_);
+            (_loc4_ = this.chapterSpriteList[_loc3_]).y = _loc2_;
+            _loc2_ += _loc4_.displayHeight;
+            _loc3_++;
+         }
+         this._displayHeight = _loc2_;
+         dispatchEvent(new Event(EVENT_PROGRESS_SLIDE));
+      }
+   }
+}
diff --git a/info/k2c/kjzero/scenario/view/text/ChapterSprite.as b/info/k2c/kjzero/scenario/view/text/ChapterSprite.as
new file mode 100644
index 0000000..f941035
--- /dev/null
+++ b/info/k2c/kjzero/scenario/view/text/ChapterSprite.as
@@ -0,0 +1,279 @@
+package info.k2c.kjzero.scenario.view.text
+{
+   import flash.display.Bitmap;
+   import flash.display.BitmapData;
+   import flash.display.DisplayObject;
+   import flash.display.Sprite;
+   import flash.events.Event;
+   import flash.events.MouseEvent;
+   import info.k2c.yamalib.utils.Util;
+   import org.libspark.betweenas3.BetweenAS3;
+   import org.libspark.betweenas3.easing.Expo;
+   import org.libspark.betweenas3.easing.Sine;
+   import org.libspark.betweenas3.tweens.ITween;
+   
+   public class ChapterSprite extends Sprite
+   {
+      
+      public static const EVENT_PROGRESS_SLIDE:String = "progress_slide";
+      
+      public static const EVENT_OPEN_SECTION:String = "open_section";
+       
+      
+      private var titleObj:DisplayObject;
+      
+      private var sectionListContainer:Sprite;
+      
+      private var sectionListContainerMask:Bitmap;
+      
+      private var sectionListObj:DisplayObject;
+      
+      private var showListFlag:Boolean;
+      
+      private var slideDownTween:ITween;
+      
+      private var slideUpTween:ITween;
+      
+      private var sectionOpenImg:Bitmap;
+      
+      private var sectionCloseImg:Bitmap;
+      
+      private var openIndicatorTween:ITween;
+      
+      private var closeIndicatorTween:ITween;
+      
+      private var allButtonMap:Object;
+      
+      public function ChapterSprite(param1:DisplayObject, param2:DisplayObject, param3:Bitmap, param4:Bitmap, param5:Object)
+      {
+         this.allButtonMap = {};
+         super();
+         this.titleObj = param1;
+         this.sectionListObj = param2;
+         this.sectionOpenImg = param3;
+         this.sectionCloseImg = param4;
+         this.allButtonMap = param5;
+         this.sectionListContainer = new Sprite();
+         this.sectionListContainer.x = param2.x;
+         this.sectionListContainer.y = param2.y;
+         param2.x = 0;
+         param2.y = 0;
+         this.sectionListContainer.addChild(param2);
+         param2.visible = false;
+         this.sectionListContainerMask = new Bitmap(new BitmapData(param2.width,param2.height,false,0));
+         this.addChild(param1);
+         this.addChild(this.sectionListContainer);
+         param3.height = param4.height = param1.height + 10;
+         param3.scaleX = param3.scaleY;
+         param4.scaleX = param4.scaleY;
+         param3.alpha = param4.alpha = 0.8;
+         param3.x = param4.x = param1.width + 15;
+         param3.y = param4.y = (param1.height - param3.height) / 2;
+         this.addChild(param3);
+         this.addChild(param4);
+         param3.alpha = param4.alpha = 0;
+         this.showListFlag = false;
+         this.mouseEnabled = false;
+         this.mouseChildren = true;
+         this.setTitleClickEvent();
+      }
+      
+      public function dispose() : void
+      {
+         var _loc1_:Object = null;
+         var _loc2_:* = undefined;
+         this.removeTitleClickEvent();
+         this.sectionListContainerMask.bitmapData.dispose();
+         this.sectionOpenImg.bitmapData.dispose();
+         this.sectionCloseImg.bitmapData.dispose();
+         for each(_loc1_ in this.allButtonMap)
+         {
+            for each(_loc2_ in _loc1_)
+            {
+               if(_loc2_.hasOwnProperty("dispose"))
+               {
+                  _loc2_["dispose"]();
+               }
+            }
+         }
+         Util.removeAllChild(this);
+      }
+      
+      public function get isShowList() : Boolean
+      {
+         return this.showListFlag;
+      }
+      
+      public function getScenarioSceneButton(param1:String, param2:String) : Sprite
+      {
+         if(Boolean(this.allButtonMap.hasOwnProperty(param1)) && Boolean(this.allButtonMap[param1].hasOwnProperty(param2)))
+         {
+            return this.allButtonMap[param1][param2] as Sprite;
+         }
+         return null;
+      }
+      
+      public function hasScenarioScene(param1:String, param2:String) : Boolean
+      {
+         return null !== this.getScenarioSceneButton(param1,param2);
+      }
+      
+      public function get displayHeight() : Number
+      {
+         var _loc1_:Number = Number(this.sectionListContainer.y);
+         if(null != this.slideDownTween || null != this.slideUpTween)
+         {
+            _loc1_ += this.sectionListContainerMask.height + this.sectionListContainerMask.y;
+         }
+         return _loc1_;
+      }
+      
+      public function show() : Boolean
+      {
+         if(this.slideUpTween != null && Boolean(this.slideUpTween.isPlaying))
+         {
+            return false;
+         }
+         if(!this.showListFlag)
+         {
+            this.showListFlag = true;
+            this.sectionListContainerMask.y = -this.sectionListObj.height;
+            this.addChild(this.sectionListContainerMask);
+            this.sectionListContainer.mask = this.sectionListContainerMask;
+            this.slideDownTween = BetweenAS3.parallel(BetweenAS3.tween(this.sectionListObj,{"alpha":1},{"alpha":0},0.5,Sine.easeOut),BetweenAS3.tween(this.sectionListContainerMask,{"y":0},null,0.5,Sine.easeOut));
+            this.slideDownTween.onComplete = function():void
+            {
+               if(contains(sectionListContainerMask))
+               {
+                  removeChild(sectionListContainerMask);
+                  sectionListContainer.mask = null;
+               }
+            };
+            this.slideDownTween.onUpdate = function():void
+            {
+               dispatchEvent(new Event(EVENT_PROGRESS_SLIDE));
+            };
+            this.slideDownTween.play();
+            this.sectionListObj.visible = true;
+            dispatchEvent(new Event(EVENT_OPEN_SECTION));
+            return true;
+         }
+         return false;
+      }
+      
+      public function hide() : Boolean
+      {
+         if(this.slideDownTween != null && Boolean(this.slideDownTween.isPlaying))
+         {
+            return false;
+         }
+         if(this.showListFlag)
+         {
+            this.showListFlag = false;
+            this.sectionListContainerMask.y = 0;
+            this.addChild(this.sectionListContainerMask);
+            this.sectionListContainer.mask = this.sectionListContainerMask;
+            this.slideUpTween = BetweenAS3.parallel(BetweenAS3.tween(this.sectionListObj,{"alpha":0},null,0.8,Expo.easeOut),BetweenAS3.tween(this.sectionListContainerMask,{"y":-this.sectionListContainerMask.height},null,0.8,Expo.easeOut));
+            this.slideUpTween.onComplete = function():void
+            {
+               sectionListObj.visible = false;
+               removeChild(sectionListContainerMask);
+               sectionListContainer.mask = null;
+            };
+            this.slideUpTween.onUpdate = function():void
+            {
+               dispatchEvent(new Event(EVENT_PROGRESS_SLIDE));
+            };
+            this.slideUpTween.play();
+            return true;
+         }
+         return false;
+      }
+      
+      private function setTitleClickEvent() : void
+      {
+         this.titleObj.addEventListener(MouseEvent.CLICK,this.onTitleClick);
+         this.titleObj.addEventListener(MouseEvent.MOUSE_OVER,this.onTitleMouseOver);
+         this.titleObj.addEventListener(MouseEvent.MOUSE_OUT,this.onTitleMouseOut);
+      }
+      
+      private function removeTitleClickEvent() : void
+      {
+         this.titleObj.removeEventListener(MouseEvent.CLICK,this.onTitleClick);
+         this.titleObj.removeEventListener(MouseEvent.MOUSE_OVER,this.onTitleMouseOver);
+         this.titleObj.removeEventListener(MouseEvent.MOUSE_OUT,this.onTitleMouseOut);
+      }
+      
+      private function onTitleClick(param1:MouseEvent) : void
+      {
+         if(this.showListFlag)
+         {
+            this.hide();
+         }
+         else
+         {
+            this.show();
+         }
+      }
+      
+      private function onTitleMouseOver(param1:MouseEvent) : void
+      {
+         if(this.showListFlag)
+         {
+            this.showCloseIndicator();
+            this.hideOpenIndicator();
+         }
+         else
+         {
+            this.showOpenIndicator();
+            this.hideCloseIndicator();
+         }
+      }
+      
+      private function onTitleMouseOut(param1:MouseEvent) : void
+      {
+         this.hideCloseIndicator();
+         this.hideOpenIndicator();
+      }
+      
+      private function showCloseIndicator() : void
+      {
+         if(null != this.closeIndicatorTween && Boolean(this.closeIndicatorTween.isPlaying))
+         {
+            this.closeIndicatorTween.stop();
+         }
+         this.closeIndicatorTween = BetweenAS3.tween(this.sectionCloseImg,{"alpha":0.8},null,1,Sine.easeOut);
+         this.closeIndicatorTween.play();
+      }
+      
+      private function hideCloseIndicator() : void
+      {
+         if(null != this.closeIndicatorTween && Boolean(this.closeIndicatorTween.isPlaying))
+         {
+            this.closeIndicatorTween.stop();
+         }
+         this.closeIndicatorTween = BetweenAS3.tween(this.sectionCloseImg,{"alpha":0},null,1,Expo.easeOut);
+         this.closeIndicatorTween.play();
+      }
+      
+      private function showOpenIndicator() : void
+      {
+         if(null != this.openIndicatorTween && Boolean(this.openIndicatorTween.isPlaying))
+         {
+            this.openIndicatorTween.stop();
+         }
+         this.openIndicatorTween = BetweenAS3.tween(this.sectionOpenImg,{"alpha":0.8},null,1,Sine.easeOut);
+         this.openIndicatorTween.play();
+      }
+      
+      private function hideOpenIndicator() : void
+      {
+         if(null != this.openIndicatorTween && Boolean(this.openIndicatorTween.isPlaying))
+         {
+            this.openIndicatorTween.stop();
+         }
+         this.openIndicatorTween = BetweenAS3.tween(this.sectionOpenImg,{"alpha":0},null,1,Expo.easeOut);
+         this.openIndicatorTween.play();
+      }
+   }
+}
diff --git a/info/k2c/kjzero/scenario/view/text/TextStyleFactoryImpl.as b/info/k2c/kjzero/scenario/view/text/TextStyleFactoryImpl.as
index a051858..4169a9b 100644
--- a/info/k2c/kjzero/scenario/view/text/TextStyleFactoryImpl.as
+++ b/info/k2c/kjzero/scenario/view/text/TextStyleFactoryImpl.as
@@ -35,7 +35,6 @@ package info.k2c.kjzero.scenario.view.text
          {
             _loc2_.color = param1["color"];
          }
-         _loc2_.letterSpacing = 2.5;
          return new TextStyleImpl(_loc2_);
       }
    }
diff --git a/info/k2c/kjzero/scenario/view/text/TextStyleImpl.as b/info/k2c/kjzero/scenario/view/text/TextStyleImpl.as
index c04aad6..8d4bd52 100644
--- a/info/k2c/kjzero/scenario/view/text/TextStyleImpl.as
+++ b/info/k2c/kjzero/scenario/view/text/TextStyleImpl.as
@@ -62,9 +62,9 @@ package info.k2c.kjzero.scenario.view.text
          _loc1_.color = 16777215;
          _loc1_.kerning = false;
          _loc1_.align = TextFormatAlign.LEFT;
-         _loc1_.size = 20;
-         _loc1_.leading = 8;
-         _loc1_.letterSpacing = 0;
+         _loc1_.size = 26;
+         _loc1_.leading = 3;
+         _loc1_.letterSpacing = -0.5;
          return _loc1_;
       }
       
@@ -75,10 +75,10 @@ package info.k2c.kjzero.scenario.view.text
          _loc1_.color = 16777215;
          _loc1_.kerning = false;
          _loc1_.align = TextFormatAlign.LEFT;
-         _loc1_.leading = 8;
+         _loc1_.leading = 3;
          _loc1_.size = 26;
-         _loc1_.leading = 8;
-         _loc1_.letterSpacing = 0.5;
+         _loc1_.leading = 3;
+         _loc1_.letterSpacing = -0.5;
          return _loc1_;
       }
       
@@ -121,5 +121,32 @@ package info.k2c.kjzero.scenario.view.text
          _loc8_.smoothing = true;
          return _loc8_;
       }
+      
+      public function createLetterForWiki(param1:String) : DisplayObject
+      {
+         var _loc2_:String = param1;
+         var _loc3_:Number = 0;
+         var _loc4_:Number = 0;
+         if(-1 !== this.SPACEING_CHAR_LIST.indexOf(param1))
+         {
+            _loc4_ += (this.defaultTextFormat.size as Number) / 4;
+         }
+         var _loc5_:TextField = new TextField();
+         this.setStyle(_loc5_);
+         _loc5_.text = _loc2_;
+         _loc5_.textColor = 16308073;
+         _loc5_.cacheAsBitmap = true;
+         var _loc6_:BitmapData = new BitmapData(_loc5_.width + _loc3_ + _loc4_,_loc5_.height,true,0);
+         var _loc7_:Matrix = new Matrix();
+         if(_loc3_ > 0)
+         {
+            _loc7_.translate(_loc3_,0);
+         }
+         _loc6_.draw(_loc5_,_loc7_);
+         var _loc8_:Bitmap = new Bitmap(_loc6_);
+         this.prevChar = param1;
+         _loc8_.smoothing = true;
+         return _loc8_;
+      }
    }
 }
diff --git a/info/k2c/kjzero/tasks/ChapterSelectTask.as b/info/k2c/kjzero/tasks/ChapterSelectTask.as
index 28ffbd4..14bdca8 100644
--- a/info/k2c/kjzero/tasks/ChapterSelectTask.as
+++ b/info/k2c/kjzero/tasks/ChapterSelectTask.as
@@ -26,6 +26,8 @@ package info.k2c.kjzero.tasks
    import info.k2c.kjzero.app.factory.MySceneFactory;
    import info.k2c.kjzero.loader.ResourceLoaderUtil;
    import info.k2c.kjzero.models.ChapterDataManager;
+   import info.k2c.kjzero.scenario.view.text.ChapterListSprite;
+   import info.k2c.kjzero.scenario.view.text.ChapterSprite;
    import info.k2c.kjzero.scenario.view.text.TextStyleFactoryImpl;
    import info.k2c.kjzero.utils.AppUtil;
    import info.k2c.yamalib.filesystem.FileBulkLoader;
@@ -645,7 +647,7 @@ package info.k2c.kjzero.tasks
                   if(this.isIncompleteReadSection(_loc18_,_loc19_))
                   {
                      _loc16_ = "- Unnamed Section -";
-                     _loc17_ = "未完了のセクションです。ここから再開してください。";
+                     _loc17_ = "还未阅读的片段。请从这里开始游玩。";
                      (_loc22_ = new TextAnimationButton(_loc16_,24,16777215,false,3,1.5)).run();
                      _loc21_ = _loc22_;
                   }
@@ -787,380 +789,3 @@ package info.k2c.kjzero.tasks
       }
    }
 }
-
-import flash.display.Bitmap;
-import flash.display.BitmapData;
-import flash.display.DisplayObject;
-import flash.display.Sprite;
-import flash.events.Event;
-import flash.events.MouseEvent;
-import info.k2c.yamalib.utils.Util;
-import org.libspark.betweenas3.BetweenAS3;
-import org.libspark.betweenas3.easing.Expo;
-import org.libspark.betweenas3.easing.Sine;
-import org.libspark.betweenas3.tweens.ITween;
-
-class ChapterSprite extends Sprite
-{
-   
-   public static const EVENT_PROGRESS_SLIDE:String = "progress_slide";
-   
-   public static const EVENT_OPEN_SECTION:String = "open_section";
-    
-   
-   private var titleObj:DisplayObject;
-   
-   private var sectionListContainer:Sprite;
-   
-   private var sectionListContainerMask:Bitmap;
-   
-   private var sectionListObj:DisplayObject;
-   
-   private var showListFlag:Boolean;
-   
-   private var slideDownTween:ITween;
-   
-   private var slideUpTween:ITween;
-   
-   private var sectionOpenImg:Bitmap;
-   
-   private var sectionCloseImg:Bitmap;
-   
-   private var openIndicatorTween:ITween;
-   
-   private var closeIndicatorTween:ITween;
-   
-   private var allButtonMap:Object;
-   
-   public function ChapterSprite(param1:DisplayObject, param2:DisplayObject, param3:Bitmap, param4:Bitmap, param5:Object)
-   {
-      this.allButtonMap = {};
-      super();
-      this.titleObj = param1;
-      this.sectionListObj = param2;
-      this.sectionOpenImg = param3;
-      this.sectionCloseImg = param4;
-      this.allButtonMap = param5;
-      this.sectionListContainer = new Sprite();
-      this.sectionListContainer.x = param2.x;
-      this.sectionListContainer.y = param2.y;
-      param2.x = 0;
-      param2.y = 0;
-      this.sectionListContainer.addChild(param2);
-      param2.visible = false;
-      this.sectionListContainerMask = new Bitmap(new BitmapData(param2.width,param2.height,false,0));
-      this.addChild(param1);
-      this.addChild(this.sectionListContainer);
-      param3.height = param4.height = param1.height + 10;
-      param3.scaleX = param3.scaleY;
-      param4.scaleX = param4.scaleY;
-      param3.alpha = param4.alpha = 0.8;
-      param3.x = param4.x = param1.width + 15;
-      param3.y = param4.y = (param1.height - param3.height) / 2;
-      this.addChild(param3);
-      this.addChild(param4);
-      param3.alpha = param4.alpha = 0;
-      this.showListFlag = false;
-      this.mouseEnabled = false;
-      this.mouseChildren = true;
-      this.setTitleClickEvent();
-   }
-   
-   public function dispose() : void
-   {
-      var _loc1_:Object = null;
-      var _loc2_:* = undefined;
-      this.removeTitleClickEvent();
-      this.sectionListContainerMask.bitmapData.dispose();
-      this.sectionOpenImg.bitmapData.dispose();
-      this.sectionCloseImg.bitmapData.dispose();
-      for each(_loc1_ in this.allButtonMap)
-      {
-         for each(_loc2_ in _loc1_)
-         {
-            if(_loc2_.hasOwnProperty("dispose"))
-            {
-               _loc2_["dispose"]();
-            }
-         }
-      }
-      Util.removeAllChild(this);
-   }
-   
-   public function get isShowList() : Boolean
-   {
-      return this.showListFlag;
-   }
-   
-   public function getScenarioSceneButton(param1:String, param2:String) : Sprite
-   {
-      if(Boolean(this.allButtonMap.hasOwnProperty(param1)) && Boolean(this.allButtonMap[param1].hasOwnProperty(param2)))
-      {
-         return this.allButtonMap[param1][param2] as Sprite;
-      }
-      return null;
-   }
-   
-   public function hasScenarioScene(param1:String, param2:String) : Boolean
-   {
-      return null !== this.getScenarioSceneButton(param1,param2);
-   }
-   
-   public function get displayHeight() : Number
-   {
-      var _loc1_:Number = Number(this.sectionListContainer.y);
-      if(null != this.slideDownTween || null != this.slideUpTween)
-      {
-         _loc1_ += this.sectionListContainerMask.height + this.sectionListContainerMask.y;
-      }
-      return _loc1_;
-   }
-   
-   public function show() : Boolean
-   {
-      if(this.slideUpTween != null && Boolean(this.slideUpTween.isPlaying))
-      {
-         return false;
-      }
-      if(!this.showListFlag)
-      {
-         this.showListFlag = true;
-         this.sectionListContainerMask.y = -this.sectionListObj.height;
-         this.addChild(this.sectionListContainerMask);
-         this.sectionListContainer.mask = this.sectionListContainerMask;
-         this.slideDownTween = BetweenAS3.parallel(BetweenAS3.tween(this.sectionListObj,{"alpha":1},{"alpha":0},0.5,Sine.easeOut),BetweenAS3.tween(this.sectionListContainerMask,{"y":0},null,0.5,Sine.easeOut));
-         this.slideDownTween.onComplete = function():void
-         {
-            if(contains(sectionListContainerMask))
-            {
-               removeChild(sectionListContainerMask);
-               sectionListContainer.mask = null;
-            }
-         };
-         this.slideDownTween.onUpdate = function():void
-         {
-            dispatchEvent(new Event(EVENT_PROGRESS_SLIDE));
-         };
-         this.slideDownTween.play();
-         this.sectionListObj.visible = true;
-         dispatchEvent(new Event(EVENT_OPEN_SECTION));
-         return true;
-      }
-      return false;
-   }
-   
-   public function hide() : Boolean
-   {
-      if(this.slideDownTween != null && Boolean(this.slideDownTween.isPlaying))
-      {
-         return false;
-      }
-      if(this.showListFlag)
-      {
-         this.showListFlag = false;
-         this.sectionListContainerMask.y = 0;
-         this.addChild(this.sectionListContainerMask);
-         this.sectionListContainer.mask = this.sectionListContainerMask;
-         this.slideUpTween = BetweenAS3.parallel(BetweenAS3.tween(this.sectionListObj,{"alpha":0},null,0.8,Expo.easeOut),BetweenAS3.tween(this.sectionListContainerMask,{"y":-this.sectionListContainerMask.height},null,0.8,Expo.easeOut));
-         this.slideUpTween.onComplete = function():void
-         {
-            sectionListObj.visible = false;
-            removeChild(sectionListContainerMask);
-            sectionListContainer.mask = null;
-         };
-         this.slideUpTween.onUpdate = function():void
-         {
-            dispatchEvent(new Event(EVENT_PROGRESS_SLIDE));
-         };
-         this.slideUpTween.play();
-         return true;
-      }
-      return false;
-   }
-   
-   private function setTitleClickEvent() : void
-   {
-      this.titleObj.addEventListener(MouseEvent.CLICK,this.onTitleClick);
-      this.titleObj.addEventListener(MouseEvent.MOUSE_OVER,this.onTitleMouseOver);
-      this.titleObj.addEventListener(MouseEvent.MOUSE_OUT,this.onTitleMouseOut);
-   }
-   
-   private function removeTitleClickEvent() : void
-   {
-      this.titleObj.removeEventListener(MouseEvent.CLICK,this.onTitleClick);
-      this.titleObj.removeEventListener(MouseEvent.MOUSE_OVER,this.onTitleMouseOver);
-      this.titleObj.removeEventListener(MouseEvent.MOUSE_OUT,this.onTitleMouseOut);
-   }
-   
-   private function onTitleClick(param1:MouseEvent) : void
-   {
-      if(this.showListFlag)
-      {
-         this.hide();
-      }
-      else
-      {
-         this.show();
-      }
-   }
-   
-   private function onTitleMouseOver(param1:MouseEvent) : void
-   {
-      if(this.showListFlag)
-      {
-         this.showCloseIndicator();
-         this.hideOpenIndicator();
-      }
-      else
-      {
-         this.showOpenIndicator();
-         this.hideCloseIndicator();
-      }
-   }
-   
-   private function onTitleMouseOut(param1:MouseEvent) : void
-   {
-      this.hideCloseIndicator();
-      this.hideOpenIndicator();
-   }
-   
-   private function showCloseIndicator() : void
-   {
-      if(null != this.closeIndicatorTween && Boolean(this.closeIndicatorTween.isPlaying))
-      {
-         this.closeIndicatorTween.stop();
-      }
-      this.closeIndicatorTween = BetweenAS3.tween(this.sectionCloseImg,{"alpha":0.8},null,1,Sine.easeOut);
-      this.closeIndicatorTween.play();
-   }
-   
-   private function hideCloseIndicator() : void
-   {
-      if(null != this.closeIndicatorTween && Boolean(this.closeIndicatorTween.isPlaying))
-      {
-         this.closeIndicatorTween.stop();
-      }
-      this.closeIndicatorTween = BetweenAS3.tween(this.sectionCloseImg,{"alpha":0},null,1,Expo.easeOut);
-      this.closeIndicatorTween.play();
-   }
-   
-   private function showOpenIndicator() : void
-   {
-      if(null != this.openIndicatorTween && Boolean(this.openIndicatorTween.isPlaying))
-      {
-         this.openIndicatorTween.stop();
-      }
-      this.openIndicatorTween = BetweenAS3.tween(this.sectionOpenImg,{"alpha":0.8},null,1,Sine.easeOut);
-      this.openIndicatorTween.play();
-   }
-   
-   private function hideOpenIndicator() : void
-   {
-      if(null != this.openIndicatorTween && Boolean(this.openIndicatorTween.isPlaying))
-      {
-         this.openIndicatorTween.stop();
-      }
-      this.openIndicatorTween = BetweenAS3.tween(this.sectionOpenImg,{"alpha":0},null,1,Expo.easeOut);
-      this.openIndicatorTween.play();
-   }
-}
-
-import flash.display.Sprite;
-import flash.events.Event;
-import info.k2c.yamalib.utils.Util;
-import mx.logging.ILogger;
-import mx.logging.Log;
-
-class ChapterListSprite extends Sprite
-{
-   
-   public static const EVENT_PROGRESS_SLIDE:String = "progress_slide";
-   
-   private static var CHAPTER_LINE_MARGIN:int = 50;
-   
-   private static var log:ILogger = Log.getLogger("ChapterListSprite");
-    
-   
-   private var chapterSpriteList:Vector.<ChapterSprite>;
-   
-   private var _chapterStartHeightList:Vector.<int>;
-   
-   private var _displayHeight:int = 0;
-   
-   public function ChapterListSprite()
-   {
-      this.chapterSpriteList = new Vector.<ChapterSprite>();
-      this._chapterStartHeightList = new Vector.<int>();
-      super();
-   }
-   
-   public function dispose() : void
-   {
-      var _loc1_:ChapterSprite = null;
-      for each(_loc1_ in this.chapterSpriteList)
-      {
-         _loc1_.dispose();
-      }
-      Util.removeAllChild(this);
-   }
-   
-   public function get chapterStartHeightList() : Vector.<int>
-   {
-      return this._chapterStartHeightList;
-   }
-   
-   public function get displayHeight() : int
-   {
-      if(this._displayHeight <= 0)
-      {
-         return this.height;
-      }
-      return this._displayHeight;
-   }
-   
-   public function addChapterSprite(param1:ChapterSprite) : void
-   {
-      this.updateChaperSpriteHeight(null);
-      if(this.displayHeight != 0)
-      {
-         param1.y = this.displayHeight + CHAPTER_LINE_MARGIN;
-      }
-      this.chapterSpriteList.push(param1);
-      param1.addEventListener(ChapterSprite.EVENT_PROGRESS_SLIDE,this.updateChaperSpriteHeight);
-      this.addChild(param1);
-   }
-   
-   public function getChapterSprite(param1:String, param2:String) : ChapterSprite
-   {
-      var _loc3_:ChapterSprite = null;
-      for each(_loc3_ in this.chapterSpriteList)
-      {
-         if(_loc3_.hasScenarioScene(param1,param2))
-         {
-            return _loc3_;
-         }
-      }
-      return null;
-   }
-   
-   private function updateChaperSpriteHeight(param1:Event) : void
-   {
-      var _loc4_:ChapterSprite = null;
-      this._chapterStartHeightList = new Vector.<int>();
-      var _loc2_:int = 0;
-      var _loc3_:int = 0;
-      while(_loc3_ < this.chapterSpriteList.length)
-      {
-         if(_loc3_ > 0)
-         {
-            _loc2_ += CHAPTER_LINE_MARGIN;
-         }
-         this._chapterStartHeightList.push(_loc2_);
-         (_loc4_ = this.chapterSpriteList[_loc3_]).y = _loc2_;
-         _loc2_ += _loc4_.displayHeight;
-         _loc3_++;
-      }
-      this._displayHeight = _loc2_;
-      dispatchEvent(new Event(EVENT_PROGRESS_SLIDE));
-   }
-}
diff --git a/info/k2c/kjzero/tasks/OptionTask.as b/info/k2c/kjzero/tasks/OptionTask.as
index 49e27f6..e1f22ad 100644
--- a/info/k2c/kjzero/tasks/OptionTask.as
+++ b/info/k2c/kjzero/tasks/OptionTask.as
@@ -23,6 +23,9 @@ package info.k2c.kjzero.tasks
    import info.k2c.kjzero.dao.EnvironmentInfoDAO;
    import info.k2c.kjzero.loader.ResourceLoaderUtil;
    import info.k2c.kjzero.utils.AppUtil;
+   import info.k2c.yamalib.gui.button.DiscreteIndicator;
+   import info.k2c.yamalib.gui.button.SwitchableButtonGroup;
+   import info.k2c.yamalib.gui.button.SwitchableButtonGroupItem;
    import info.k2c.yamalib.gui.button.ZoomModefulButton;
    import info.k2c.yamalib.loader.IResourceLoader;
    import info.k2c.yamalib.sound.BGMManager;
@@ -240,7 +243,7 @@ package info.k2c.kjzero.tasks
          buttonY = 230;
          buttonLineSpace = 55;
          itemCx = 750;
-         windowModeButtonGroup = this.createSwitchableButtonGroup("ウインドウモード",buttonY,itemCx,new <SwitchableButtonGroupItem>[new SwitchableButtonGroupItem("window","ウィンドウ",null),new SwitchableButtonGroupItem("full","フルスクリーン",null)]);
+         windowModeButtonGroup = this.createSwitchableButtonGroup("窗口模式（需要重启）",buttonY,itemCx,new <SwitchableButtonGroupItem>[new SwitchableButtonGroupItem("window","窗口",null),new SwitchableButtonGroupItem("full","全屏",null)]);
          windowModeButtonGroup.setActiveItemIndex(0);
          uiComponent.addChild(windowModeButtonGroup);
          windowModeButtonGroup.addEventListener(SwitchableButtonGroup.EVENT_ON_CHANGE,function(param1:Event):void
@@ -256,7 +259,7 @@ package info.k2c.kjzero.tasks
             }
          });
          buttonY += buttonLineSpace;
-         imageQualityButtonGroup = this.createSwitchableButtonGroup("画質",buttonY,itemCx,new <SwitchableButtonGroupItem>[new SwitchableButtonGroupItem("high","中",null),new SwitchableButtonGroupItem("best","高",null)]);
+         imageQualityButtonGroup = this.createSwitchableButtonGroup("画质",buttonY,itemCx,new <SwitchableButtonGroupItem>[new SwitchableButtonGroupItem("high","中",null),new SwitchableButtonGroupItem("best","高",null)]);
          imageQualityButtonGroup.setActiveItemIndex(0);
          uiComponent.addChild(imageQualityButtonGroup);
          imageQualityButtonGroup.addEventListener(SwitchableButtonGroup.EVENT_ON_CHANGE,function(param1:Event):void
@@ -300,7 +303,7 @@ package info.k2c.kjzero.tasks
          bgmVolButtonGroup.addEventListener(SwitchableButtonGroup.EVENT_ON_CHANGE,function(param1:Event):void
          {
             var _loc2_:SwitchableButtonGroupItem = bgmVolButtonGroup.getActiveItem();
-            var _loc3_:int = parseInt(_loc2_.name);
+            var _loc3_:int = int(parseInt(_loc2_.name));
             bgmVolIndicator.setValue(_loc3_);
             var _loc4_:int = parseInt(_loc2_.name) * 10;
             env.bgmMansterVol = _loc4_;
@@ -317,7 +320,7 @@ package info.k2c.kjzero.tasks
          seVolButtonGroup.addEventListener(SwitchableButtonGroup.EVENT_ON_CHANGE,function(param1:Event):void
          {
             var _loc2_:SwitchableButtonGroupItem = seVolButtonGroup.getActiveItem();
-            var _loc3_:int = parseInt(_loc2_.name);
+            var _loc3_:int = int(parseInt(_loc2_.name));
             seVolIndicator.setValue(_loc3_);
             var _loc4_:int = parseInt(_loc2_.name) * 10;
             env.seMansterVol = _loc4_;
@@ -495,346 +498,3 @@ package info.k2c.kjzero.tasks
       }
    }
 }
-
-import flash.display.DisplayObject;
-import flash.display.Sprite;
-import flash.events.Event;
-import flash.events.MouseEvent;
-
-class SwitchableButtonGroup extends Sprite
-{
-   
-   public static var EVENT_ON_CHANGE:String = "EVENT_ON_CHANGE";
-    
-   
-   private var _backgroundImg:DisplayObject;
-   
-   private var _itemNameObj:DisplayObject;
-   
-   private var _prevButton:DisplayObject;
-   
-   private var _nextButton:DisplayObject;
-   
-   private var itemList:Vector.<SwitchableButtonGroupItem>;
-   
-   private var currentItemIndex:int = 0;
-   
-   public function SwitchableButtonGroup()
-   {
-      this.itemList = new Vector.<SwitchableButtonGroupItem>();
-      super();
-   }
-   
-   public function dispose() : void
-   {
-      if(this.itemList)
-      {
-         this.itemList = null;
-      }
-   }
-   
-   public function get backgroundImg() : DisplayObject
-   {
-      return this._backgroundImg;
-   }
-   
-   public function set backgroundImg(param1:DisplayObject) : void
-   {
-      if(this._backgroundImg)
-      {
-         removeChild(this._backgroundImg);
-      }
-      this._backgroundImg = param1;
-      if(this._backgroundImg)
-      {
-         addChildAt(this._backgroundImg,0);
-      }
-   }
-   
-   public function get itemNameObj() : DisplayObject
-   {
-      return this._itemNameObj;
-   }
-   
-   public function set itemNameObj(param1:DisplayObject) : void
-   {
-      this._itemNameObj = param1;
-      if(this._itemNameObj)
-      {
-         addChild(this._itemNameObj);
-      }
-   }
-   
-   public function get prevButton() : DisplayObject
-   {
-      return this._prevButton;
-   }
-   
-   public function set prevButton(param1:DisplayObject) : void
-   {
-      if(this._prevButton)
-      {
-         removeChild(this._prevButton);
-         this._prevButton.removeEventListener(MouseEvent.MOUSE_UP,this.onClickPrevButton);
-      }
-      this._prevButton = param1;
-      if(this._prevButton)
-      {
-         addChild(this._prevButton);
-         this._prevButton.addEventListener(MouseEvent.MOUSE_UP,this.onClickPrevButton);
-      }
-   }
-   
-   public function get nextButton() : DisplayObject
-   {
-      return this._nextButton;
-   }
-   
-   public function set nextButton(param1:DisplayObject) : void
-   {
-      if(this._nextButton)
-      {
-         removeChild(this._nextButton);
-         this._nextButton.removeEventListener(MouseEvent.MOUSE_UP,this.onClickNextButton);
-      }
-      this._nextButton = param1;
-      if(this._nextButton)
-      {
-         addChild(this._nextButton);
-         this._nextButton.addEventListener(MouseEvent.MOUSE_UP,this.onClickNextButton);
-      }
-   }
-   
-   public function prepare() : void
-   {
-   }
-   
-   public function addItem(param1:SwitchableButtonGroupItem) : void
-   {
-      if(param1)
-      {
-         this.itemList.push(param1);
-         if(param1.itemObj)
-         {
-            param1.itemObj.visible = false;
-            addChild(param1.itemObj);
-         }
-      }
-   }
-   
-   public function setActiveItemIndex(param1:uint) : SwitchableButtonGroupItem
-   {
-      var _loc2_:uint = 0;
-      var _loc3_:SwitchableButtonGroupItem = null;
-      var _loc4_:SwitchableButtonGroupItem = null;
-      if(this.itemList.length > param1)
-      {
-         _loc2_ = uint(this.currentItemIndex);
-         for each(_loc3_ in this.itemList)
-         {
-            if(_loc3_.itemObj)
-            {
-               _loc3_.itemObj.visible = false;
-            }
-         }
-         if((_loc4_ = this.itemList[param1]).itemObj)
-         {
-            _loc4_.itemObj.visible = true;
-         }
-         this.currentItemIndex = param1;
-         if(0 === this.currentItemIndex)
-         {
-            if(this._prevButton)
-            {
-               this._prevButton.visible = false;
-            }
-         }
-         else if(this._prevButton)
-         {
-            this._prevButton.visible = true;
-         }
-         if(this.itemList.length > this.currentItemIndex + 1)
-         {
-            if(this._nextButton)
-            {
-               this._nextButton.visible = true;
-            }
-         }
-         else if(this._nextButton)
-         {
-            this._nextButton.visible = false;
-         }
-         if(_loc2_ != this.currentItemIndex)
-         {
-            this.dispatchEvent(new Event(EVENT_ON_CHANGE));
-         }
-         return _loc4_;
-      }
-      return null;
-   }
-   
-   public function getActiveItem() : SwitchableButtonGroupItem
-   {
-      if(this.itemList.length > this.currentItemIndex)
-      {
-         return this.itemList[this.currentItemIndex];
-      }
-      return null;
-   }
-   
-   private function onClickPrevButton(param1:MouseEvent) : void
-   {
-      if(this.currentItemIndex > 0)
-      {
-         this.setActiveItemIndex(this.currentItemIndex - 1);
-      }
-   }
-   
-   private function onClickNextButton(param1:MouseEvent) : void
-   {
-      if(this.itemList.length > this.currentItemIndex + 1)
-      {
-         this.setActiveItemIndex(this.currentItemIndex + 1);
-      }
-   }
-}
-
-import flash.display.DisplayObject;
-
-class SwitchableButtonGroupItem
-{
-    
-   
-   private var _name:String;
-   
-   private var _value:String;
-   
-   private var _itemObj:DisplayObject;
-   
-   public function SwitchableButtonGroupItem(param1:String, param2:String, param3:DisplayObject)
-   {
-      super();
-      this._name = param1;
-      this._value = param2;
-      this._itemObj = param3;
-   }
-   
-   public function get name() : String
-   {
-      return this._name;
-   }
-   
-   public function set name(param1:String) : void
-   {
-      this._name = param1;
-   }
-   
-   public function get value() : String
-   {
-      return this._value;
-   }
-   
-   public function set value(param1:String) : void
-   {
-      this._value = param1;
-   }
-   
-   public function get itemObj() : DisplayObject
-   {
-      return this._itemObj;
-   }
-   
-   public function set itemObj(param1:DisplayObject) : void
-   {
-      this._itemObj = param1;
-   }
-}
-
-import flash.display.Shape;
-import flash.display.Sprite;
-import flash.filters.ColorMatrixFilter;
-
-class DiscreteIndicator extends Sprite
-{
-    
-   
-   private var container:Sprite;
-   
-   private var maxValue:uint;
-   
-   private var currentValue:uint;
-   
-   private var grayFilter:ColorMatrixFilter;
-   
-   private var shapeList:Vector.<Shape>;
-   
-   public function DiscreteIndicator(param1:uint)
-   {
-      this.shapeList = new Vector.<Shape>();
-      super();
-      this.container = new Sprite();
-      this.addChild(this.container);
-      this.maxValue = param1;
-      this.currentValue = 0;
-      this.grayFilter = createGrayFilter();
-      this.init();
-   }
-   
-   private static function createGrayFilter() : ColorMatrixFilter
-   {
-      var _loc1_:Array = [1 / 3,0,0,0,0,0,1 / 3,0,0,0,0,0,1 / 3,0,0,0,0,0,1,0];
-      return new ColorMatrixFilter(_loc1_);
-   }
-   
-   private function init() : void
-   {
-      var _loc4_:Shape = null;
-      var _loc1_:uint = 2;
-      var _loc2_:Number = 0;
-      var _loc3_:int = 0;
-      while(_loc3_ < this.maxValue)
-      {
-         (_loc4_ = new Shape()).graphics.beginFill(16094236);
-         _loc4_.graphics.drawRect(0,0,18,18);
-         _loc4_.graphics.endFill();
-         _loc4_.filters = [this.grayFilter];
-         _loc4_.x = _loc2_;
-         this.container.addChild(_loc4_);
-         this.shapeList.push(_loc4_);
-         _loc2_ += _loc4_.width + _loc1_;
-         _loc3_++;
-      }
-   }
-   
-   public function setValue(param1:uint) : void
-   {
-      var _loc3_:Shape = null;
-      if(this.maxValue >= param1)
-      {
-         this.currentValue = param1;
-      }
-      else
-      {
-         this.currentValue = this.maxValue;
-      }
-      var _loc2_:int = 0;
-      while(_loc2_ < this.maxValue)
-      {
-         _loc3_ = this.shapeList[_loc2_];
-         if(this.currentValue <= _loc2_)
-         {
-            _loc3_.filters = [this.grayFilter];
-         }
-         else
-         {
-            _loc3_.filters = null;
-         }
-         _loc2_++;
-      }
-   }
-   
-   public function getValue() : uint
-   {
-      return this.currentValue;
-   }
-}
diff --git a/info/k2c/kjzero/tasks/SaveLoadTask.as b/info/k2c/kjzero/tasks/SaveLoadTask.as
new file mode 100644
index 0000000..fd9cf9b
--- /dev/null
+++ b/info/k2c/kjzero/tasks/SaveLoadTask.as
@@ -0,0 +1,901 @@
+package info.k2c.kjzero.tasks
+{
+   import com.codecatalyst.promise.Deferred;
+   import com.codecatalyst.promise.Promise;
+   import flash.display.Bitmap;
+   import flash.display.BitmapData;
+   import flash.display.BlendMode;
+   import flash.display.DisplayObject;
+   import flash.display.Graphics;
+   import flash.display.Shape;
+   import flash.display.Sprite;
+   import flash.events.Event;
+   import flash.events.MouseEvent;
+   import flash.geom.Matrix;
+   import flash.geom.Rectangle;
+   import flash.globalization.DateTimeFormatter;
+   import flash.globalization.LocaleID;
+   import flash.system.System;
+   import flash.text.AntiAliasType;
+   import flash.text.GridFitType;
+   import flash.text.TextField;
+   import flash.text.TextFieldAutoSize;
+   import flash.text.TextFormat;
+   import flash.text.TextFormatAlign;
+   import flash.utils.ByteArray;
+   import flash.utils.Dictionary;
+   import info.k2c.kjzero.app.Consts;
+   import info.k2c.kjzero.app.GameSystem;
+   import info.k2c.kjzero.app.data.ChapterData;
+   import info.k2c.kjzero.app.factory.MySceneFactory;
+   import info.k2c.kjzero.dao.ScenarioSaveInfoDAO;
+   import info.k2c.kjzero.loader.ResourceLoaderUtil;
+   import info.k2c.kjzero.models.ChapterDataManager;
+   import info.k2c.yamalib.gui.button.AdvancedDarkenButton;
+   import info.k2c.yamalib.gui.button.SimpleFontButton;
+   import info.k2c.yamalib.gui.button.ZoomModefulButton;
+   import info.k2c.yamalib.loader.IResourceLoader;
+   import info.k2c.yamalib.sound.SEManager;
+   import info.k2c.yamalib.utils.Resource;
+   import info.k2c.yamalib.utils.Util;
+   import mx.logging.ILogger;
+   import mx.logging.Log;
+   import org.libspark.betweenas3.BetweenAS3;
+   import org.libspark.betweenas3.easing.Quad;
+   import org.libspark.betweenas3.tweens.ITween;
+   
+   public class SaveLoadTask extends AppTaskBase
+   {
+      
+      private static var log:ILogger = Log.getLogger("SaveLoadTask");
+      
+      private static var __message_from_marmalade__:String = "Kafkaesque.";
+      
+      private static const RESOURCE_LIST:Vector.<*> = Vector.<*>([{
+         "fileid":"system/option/bg.png",
+         "props":{"id":"bg"}
+      },{
+         "fileid":"system/option/bg_filter.png",
+         "props":{"id":"bg_filter"}
+      },{
+         "fileid":"system/option/load_log.png",
+         "props":{"id":"load_log"}
+      },{
+         "fileid":"system/option/save_log.png",
+         "props":{"id":"save_log"}
+      },{
+         "fileid":"system/option/button_return.png",
+         "props":{"id":"button_return"}
+      },{
+         "fileid":"system/option/button_return_over.png",
+         "props":{"id":"button_return_over"}
+      }]);
+       
+      
+      private var screenWidth:Number;
+      
+      private var screenHeight:Number;
+      
+      private var myLoader:IResourceLoader;
+      
+      private var isSave:Boolean;
+      
+      private var startTween:ITween;
+      
+      private var page:int = 1;
+      
+      private var saveInfoDAO:ScenarioSaveInfoDAO;
+      
+      private var paginationFormat:TextFormat;
+      
+      private var uiComponent:Sprite;
+      
+      private var paginationView:Sprite;
+      
+      private var saveListView:Sprite;
+      
+      private var parsedSaveDataArray:Vector.<*>;
+      
+      private var chapterDataManager:ChapterDataManager;
+      
+      private var missing:String = "因引擎及技术限制，在此处（死域、头戴显示器内画面及底部文本演出）存档可能会丢失角色立绘或特效演出，\n还请多加注意。";
+      
+      private var seResourceMapping:Dictionary;
+      
+      private const SPACING_CHAR_LIST:String = "。、Ｉ”";
+      
+      public function SaveLoadTask(gameSystem:Object, isSave:Boolean = true)
+      {
+         this.parsedSaveDataArray = new Vector.<*>();
+         log.info("TASK START - privateMemory: {0} MB, totalMemory: {1} MB, freeMemory: {2} MB",System.privateMemory / 1024 / 1024,System.totalMemory / 1024 / 1024,System.freeMemory / 1024 / 1024);
+         super(gameSystem as GameSystem);
+         this.screenWidth = GameSystem.clientWidth;
+         this.screenHeight = GameSystem.clientHeight;
+         this.isSave = isSave;
+         this.seResourceMapping = new Dictionary();
+         taskScreen = new Sprite();
+         stage.addChild(taskScreen);
+         this.saveInfoDAO = new ScenarioSaveInfoDAO(this.gameSys.resourceSettings.getUserDB());
+         this.chapterDataManager = new ChapterDataManager(null);
+         this.paginationFormat = new TextFormat();
+         this.paginationFormat.font = "DINCOROS Bold";
+         this.paginationFormat.size = 48;
+         this.paginationFormat.align = TextFormatAlign.LEFT;
+         this.paginationFormat.color = 16777215;
+         taskScreen.mouseChildren = false;
+         this.parseSaveDataArray();
+         this.loadCommonResource().then(this.initView).done();
+      }
+      
+      private static function fillSprite(sprite:Sprite, color:uint, alpha:Number = 1) : void
+      {
+         var graphic:Graphics = sprite.graphics;
+         graphic.beginFill(color,alpha);
+         graphic.drawRect(0,0,sprite.width,sprite.height);
+         graphic.endFill();
+      }
+      
+      private function createSoundResourceObject(soundID:String) : Resource
+      {
+         var soundResource:Resource = new Resource();
+         soundResource.id = soundID;
+         soundResource.data = this.myLoader.getSound(soundID);
+         return soundResource;
+      }
+      
+      private function toSmallBitmapData(bitmapData:BitmapData) : BitmapData
+      {
+         var smallBitmapData:BitmapData = new BitmapData(145,81);
+         var matrix:Matrix = new Matrix();
+         matrix.scale(145 / bitmapData.width,81 / bitmapData.height);
+         smallBitmapData.draw(bitmapData,matrix);
+         return smallBitmapData;
+      }
+      
+      private function bitmapDataToByteArray(bitmapData:BitmapData) : ByteArray
+      {
+         var byteArray:ByteArray = new ByteArray();
+         var smallBitmapData:BitmapData = this.toSmallBitmapData(bitmapData);
+         var rect:Rectangle = new Rectangle(0,0,smallBitmapData.width,smallBitmapData.height);
+         byteArray.writeUnsignedInt(smallBitmapData.width);
+         byteArray.writeUnsignedInt(smallBitmapData.height);
+         byteArray.writeBytes(smallBitmapData.getPixels(rect));
+         return byteArray;
+      }
+      
+      private function byteArrayToBitmapData(byteArray:ByteArray) : BitmapData
+      {
+         var byteArrayClone:ByteArray = new ByteArray();
+         byteArrayClone.writeBytes(byteArray);
+         byteArrayClone.position = 0;
+         var width:int = int(byteArrayClone.readUnsignedInt());
+         var height:int = int(byteArrayClone.readUnsignedInt());
+         var bitmapData:BitmapData = new BitmapData(width,height);
+         bitmapData.setPixels(new Rectangle(0,0,width,height),byteArrayClone);
+         return bitmapData;
+      }
+      
+      private function getChapterTitleAndSectionTitle(scenarioID:String, sceneID:int) : Object
+      {
+         for each(var chapterId in this.chapterDataManager.chapterIdList)
+         {
+            var chapterData:ChapterData = this.chapterDataManager.getChapterData(chapterId);
+            if(chapterData != null)
+            {
+               for each(var sectionData in chapterData.sectionDataList)
+               {
+                  if(sectionData.scenarioId == scenarioID && sectionData.sceneId == sceneID)
+                  {
+                     return {
+                        "chapterTitle":chapterData.title,
+                        "sectionTitle":sectionData.title
+                     };
+                  }
+               }
+            }
+         }
+         return {
+            "chapterTitle":"第0章 没有人看见草生长",
+            "sectionTitle":"草生长的时候，我在林中沉睡"
+         };
+      }
+      
+      private function chineseNumberToNumber(char:String) : int
+      {
+         var chineseNumberList:Array = ["零","一","二","三","四","五","六","七","八","九","十"];
+         if(chineseNumberList.indexOf(char) !== -1)
+         {
+            return chineseNumberList.indexOf(char);
+         }
+         return parseInt(char);
+      }
+      
+      private function createSaveObject() : Object
+      {
+         var titleObject:Object = this.getChapterTitleAndSectionTitle(gameSys.sceneParam.currentScenarioId,gameSys.sceneParam.currentSceneNo);
+         log.info("chapterTitle: {0}, sectionTitle: {1}",titleObject.chapterTitle,titleObject.sectionTitle);
+         var metadata:Object = {
+            "chapterTitle":titleObject.chapterTitle,
+            "sectionTitle":titleObject.sectionTitle,
+            "time":new Date().time,
+            "text":gameSys.sceneParam.currentText,
+            "page":-1,
+            "slot":-1,
+            "type":this.getScenarioViewType(gameSys.sceneParam.currentScenarioId),
+            "scenarioID":gameSys.sceneParam.currentScenarioId
+         };
+         var data:ByteArray = new ByteArray();
+         gameSys.sceneParam.bgmManager.createRestoreData(data,gameSys.environmentInfo.bgmMansterVol);
+         data.writeInt(gameSys.sceneParam.currentPos);
+         data.writeUTF(gameSys.sceneParam.currentScenarioView.createViewRestoreDataToString());
+         return {
+            "name":"呜呼，生如白驹过隙，此身乃是草芥，任死神随意收割",
+            "category1":"和",
+            "category2":"风",
+            "category3":"起",
+            "category4":"汉",
+            "category5":"俳",
+            "thumbnail":bitmapDataToByteArray(gameSys.sceneParam.screenShot),
+            "metadata":metadata,
+            "data":data
+         };
+      }
+      
+      private function nextPage() : void
+      {
+         if(this.page == 10)
+         {
+            return;
+         }
+         this.page++;
+         log.info("next page: {0}",this.page);
+         this.reDrawPage();
+      }
+      
+      private function prevPage() : void
+      {
+         if(this.page == 1)
+         {
+            return;
+         }
+         this.page--;
+         log.info("prev page: {0}",this.page);
+         this.reDrawPage();
+      }
+      
+      private function setPage(page:int) : void
+      {
+         if(page < 1 || page > 10)
+         {
+            return;
+         }
+         if(this.page == page)
+         {
+            return;
+         }
+         this.page = page;
+         log.info("set page: {0}",this.page);
+         this.reDrawPage();
+      }
+      
+      private function reDrawSaveListView() : void
+      {
+         if(this.uiComponent.getChildByName("save_list_view") != null)
+         {
+            this.uiComponent.removeChild(this.uiComponent.getChildByName("save_list_view"));
+         }
+         this.saveListView = createSaveListView();
+         this.saveListView.x = 242.75;
+         this.saveListView.y = 137.75;
+         this.uiComponent.addChild(this.saveListView);
+      }
+      
+      private function trim(s:String) : String
+      {
+         var newString:String = s.replace(/^([\s|\t|\n]+)?(.*)([\s|\t|\n]+)?$/gm,"$2");
+         return newString.replace("\n"," ");
+      }
+      
+      private function reDrawPage() : void
+      {
+         var pageButton:AdvancedDarkenButton;
+         var removeTween:ITween;
+         var addTween:ITween;
+         var i:int = 1;
+         while(i <= 10)
+         {
+            pageButton = this.paginationView.getChildByName("page_" + i) as AdvancedDarkenButton;
+            if(i === this.page)
+            {
+               pageButton.disableDarken();
+            }
+            else
+            {
+               pageButton.enableDarken();
+            }
+            i++;
+         }
+         removeTween = BetweenAS3.tween(this.saveListView,{"alpha":0},{"alpha":1},0.25,Quad.easeOut);
+         addTween = BetweenAS3.tween(this.saveListView,{"alpha":1},{"alpha":0},0.25,Quad.easeIn);
+         removeTween.onComplete = function():void
+         {
+            reDrawSaveListView();
+            addTween.play();
+         };
+         removeTween.play();
+      }
+      
+      private function parseSaveDataArray() : void
+      {
+         var saveDataArray:Vector.<*> = this.saveInfoDAO.getSaveData();
+         var parsedSaveDataArray:Vector.<*> = new Vector.<*>();
+         if(saveDataArray == null)
+         {
+            this.parsedSaveDataArray = parsedSaveDataArray;
+         }
+         for each(var saveData in saveDataArray)
+         {
+            var metadata:Object = JSON.parse(saveData.metadata);
+            var parsedSaveData:Object = {
+               "id":saveData.id,
+               "name":saveData.name,
+               "category1":null,
+               "category2":null,
+               "category3":null,
+               "category4":null,
+               "category5":null,
+               "thumbnail":saveData.thumbnail,
+               "metadata":metadata,
+               "data":saveData.data
+            };
+            parsedSaveDataArray.push(parsedSaveData);
+         }
+         this.parsedSaveDataArray = parsedSaveDataArray;
+      }
+      
+      private function getSaveByPageAndSlot(page:int, slot:int) : Object
+      {
+         for each(var saveData in this.parsedSaveDataArray)
+         {
+            var metadata:Object = saveData.metadata;
+            if(metadata.page === page && metadata.slot === slot)
+            {
+               return saveData;
+            }
+         }
+         return null;
+      }
+      
+      private function errorCheck(scenario:String) : Boolean
+      {
+         if(scenario.indexOf("SEI_") === 0)
+         {
+            var chapter:* = parseInt(scenario.split("_")[1]);
+            if(chapter > 2)
+            {
+               return true;
+            }
+            return false;
+         }
+         return true;
+      }
+      
+      private function getScenarioViewType(scenario:String) : String
+      {
+         return scenario.indexOf("SEI_") === 0 ? "novel" : "adv";
+      }
+      
+      override public function dispose() : void
+      {
+         super.dispose();
+         stage.removeChild(taskScreen);
+         Util.removeAllChild(taskScreen);
+         this.myLoader.dispose();
+         for each(var seResource in this.seResourceMapping)
+         {
+            seResource.dipose();
+         }
+         this.seResourceMapping = null;
+         this.chapterDataManager = null;
+         this.saveInfoDAO = null;
+         this.parsedSaveDataArray.splice(0,this.parsedSaveDataArray.length);
+         log.info("task dispose. privateMemory: {0} MB, totalMemory: {1} MB, freeMemory: {2} MB",System.privateMemory / 1024 / 1024,System.totalMemory / 1024 / 1024,System.freeMemory / 1024 / 1024);
+      }
+      
+      override public function task(unk_0:Object) : int
+      {
+         return 1;
+      }
+      
+      private function loadCommonResource() : Promise
+      {
+         var deferred:Deferred = new Deferred();
+         var onLoadCompleteCallback:Function = function():void
+         {
+            deferred.resolve(null);
+         };
+         this.myLoader = ResourceLoaderUtil.createLoader(RESOURCE_LIST.concat(Consts.COMMON_SE_RESOURCE_LIST));
+         this.myLoader.setDefaultBitmapSmoothing(true);
+         this.myLoader.loadStart(onLoadCompleteCallback);
+         return deferred.promise;
+      }
+      
+      private function createPaginationText(char:String) : DisplayObject
+      {
+         var paginationText:Sprite = new Sprite();
+         var size:Number = 0;
+         var iDoNotKnow:Number = 0;
+         if(this.SPACING_CHAR_LIST.indexOf(char) !== -1)
+         {
+            size += 10;
+         }
+         var textField:TextField = new TextField();
+         textField.defaultTextFormat = this.paginationFormat;
+         textField.autoSize = TextFieldAutoSize.LEFT;
+         textField.antiAliasType = AntiAliasType.ADVANCED;
+         textField.gridFitType = GridFitType.PIXEL;
+         textField.text = char;
+         textField.cacheAsBitmap = true;
+         textField.embedFonts = true;
+         textField.setTextFormat(this.paginationFormat);
+         var bitmapData:BitmapData = new BitmapData(textField.width + iDoNotKnow + size,textField.height,true,0);
+         var matrixData:Matrix = new Matrix();
+         if(iDoNotKnow > 0)
+         {
+            matrixData.translate(iDoNotKnow,0);
+         }
+         bitmapData.draw(textField,matrixData);
+         var bitmapView:Bitmap = new Bitmap(bitmapData);
+         bitmapView.smoothing = true;
+         return bitmapView;
+      }
+      
+      private function subStringFromEnd(text:String, subNumber:int) : String
+      {
+         return text.substr(0,text.length - subNumber) + "...";
+      }
+      
+      private function createCustomText(text:String, color:uint, fontSize:Number, fontName:String, bold:Boolean, maxWidth:Number = -1) : DisplayObject
+      {
+         var customFormat:TextFormat = new TextFormat();
+         customFormat.font = fontName;
+         customFormat.size = fontSize;
+         customFormat.bold = bold;
+         customFormat.color = color;
+         customFormat.align = TextFormatAlign.LEFT;
+         customFormat.letterSpacing = 3;
+         var customText:Sprite = new Sprite();
+         var size:Number = 0;
+         if(this.SPACING_CHAR_LIST.indexOf(text) !== -1)
+         {
+            size += 10;
+         }
+         var one_line_text:String = text.replace(/\n/g,"");
+         var textField:TextField = new TextField();
+         textField.defaultTextFormat = customFormat;
+         textField.autoSize = TextFieldAutoSize.LEFT;
+         textField.antiAliasType = AntiAliasType.ADVANCED;
+         textField.gridFitType = GridFitType.PIXEL;
+         textField.text = one_line_text;
+         textField.cacheAsBitmap = true;
+         textField.embedFonts = true;
+         textField.setTextFormat(customFormat);
+         if(maxWidth != -1)
+         {
+            var textWidth:Number = textField.width;
+            var subStringNumber:int = 1;
+            while(textWidth > maxWidth)
+            {
+               subStringNumber++;
+               textField.text = this.subStringFromEnd(one_line_text,subStringNumber);
+               textWidth = textField.width;
+            }
+         }
+         var bitmapData:BitmapData = new BitmapData(textField.width + size,textField.height,true,0);
+         var matrixData:Matrix = new Matrix();
+         bitmapData.draw(textField,matrixData);
+         var bitmapView:Bitmap = new Bitmap(bitmapData);
+         bitmapView.smoothing = true;
+         return bitmapView;
+      }
+      
+      private function createSaveListView() : Sprite
+      {
+         var i:int;
+         var slot:Object;
+         var emptySlot:Sprite;
+         var thumbnail:DisplayObject;
+         var title:DisplayObject;
+         var saveSlot:Sprite;
+         var thumbnailBitmapData:BitmapData;
+         var thumbnailBitMap:Bitmap;
+         var thumbnailView:AdvancedDarkenButton;
+         var chapterText:String;
+         var titleText:String;
+         var trimmedText:String;
+         var description:DisplayObject;
+         var formatter:DateTimeFormatter;
+         var date:Date;
+         var dateString:String;
+         var dateText:DisplayObject;
+         var lineSprite:Sprite;
+         var line:Shape;
+         var lineView:DisplayObject;
+         var deleteButton:DisplayObject;
+         var saveListView:Sprite = new Sprite();
+         var marginX:Number = 36.25;
+         var marginY:Number = 30.25;
+         var maxWidth:Number = 834.5;
+         var itemHeight:Number = 82;
+         var thumbnailWidth:Number = 145;
+         var thumbnailHeight:Number = 81;
+         var textMarginTop:Number = 32.05;
+         var noDataText:Object = {
+            "thumbnail":"-NO SIGNAL-",
+            "title":"-Waiting for you.-"
+         };
+         saveListView.mouseChildren = true;
+         saveListView.mouseEnabled = true;
+         saveListView.name = "save_list_view";
+         i = 0;
+         while(i < 4)
+         {
+            slot = this.getSaveByPageAndSlot(this.page,i);
+            if(slot == null)
+            {
+               emptySlot = new Sprite();
+               emptySlot.name = "page_slot_" + i;
+               emptySlot.x = marginX;
+               emptySlot.y = i * itemHeight + (i + 1) * marginY;
+               thumbnail = new AdvancedDarkenButton(this.createCustomText(noDataText.thumbnail,16777215,16,"Dream Hans Sans",true));
+               thumbnail.x = marginX + thumbnailWidth / 2 - thumbnail.width / 2;
+               thumbnail.y = itemHeight / 2 - thumbnail.height / 2;
+               title = new AdvancedDarkenButton(this.createCustomText(noDataText.title,16777215,24,"Dream Hans Sans",true));
+               title.x = 206.55;
+               title.y = -6;
+               emptySlot.addChild(thumbnail);
+               emptySlot.addChild(title);
+               saveListView.addChild(emptySlot);
+               emptySlot.addEventListener(MouseEvent.ROLL_OVER,function(event:Event):void
+               {
+                  event.stopImmediatePropagation();
+                  var i:uint = 0;
+                  while(i < event.currentTarget.numChildren)
+                  {
+                     if(event.currentTarget.getChildAt(i) is AdvancedDarkenButton)
+                     {
+                        var child:AdvancedDarkenButton = event.currentTarget.getChildAt(i);
+                        child.disableDarken();
+                     }
+                     i++;
+                  }
+               });
+               emptySlot.addEventListener(MouseEvent.ROLL_OUT,function(event:Event):void
+               {
+                  event.stopImmediatePropagation();
+                  var i:uint = 0;
+                  while(i < event.currentTarget.numChildren)
+                  {
+                     if(event.currentTarget.getChildAt(i) is AdvancedDarkenButton)
+                     {
+                        var child:AdvancedDarkenButton = event.currentTarget.getChildAt(i);
+                        child.enableDarken();
+                     }
+                     i++;
+                  }
+               });
+               if(this.isSave)
+               {
+                  emptySlot.addEventListener(MouseEvent.CLICK,function(event:Event):void
+                  {
+                     event.stopImmediatePropagation();
+                     var slot:int = int(parseInt(event.currentTarget.name.split("_")[2]));
+                     var saveData:Object = createSaveObject();
+                     saveData.metadata.page = page;
+                     saveData.metadata.slot = slot;
+                     saveInfoDAO.addMyOwnSaveData(saveData);
+                     var sound:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
+                     SEManager.getInstance().playSE(sound.id,sound);
+                     parseSaveDataArray();
+                     reDrawSaveListView();
+                  });
+               }
+            }
+            else
+            {
+               saveSlot = new Sprite();
+               saveSlot.name = "page_slot_" + i + "_id_" + slot.id;
+               saveSlot.x = marginX;
+               saveSlot.y = i * itemHeight + (i + 1) * marginY;
+               thumbnailBitmapData = byteArrayToBitmapData(slot.thumbnail);
+               thumbnailBitMap = new Bitmap(thumbnailBitmapData);
+               thumbnailView = new AdvancedDarkenButton(thumbnailBitMap);
+               thumbnailView.width = thumbnailWidth;
+               thumbnailView.height = thumbnailHeight;
+               thumbnailView.x = marginX;
+               thumbnailView.y = 0;
+               chapterText = String(slot.metadata.chapterTitle.split(" ")[0].split("第")[1].split("章")[0]);
+               titleText = "Chapter " + this.chineseNumberToNumber(chapterText) + " - " + slot.metadata.sectionTitle;
+               title = new AdvancedDarkenButton(this.createCustomText(titleText,16777215,24,"Dream Hans Sans",true,maxWidth - marginX - 206.55));
+               title.x = 206.55;
+               title.y = -8;
+               trimmedText = this.trim(slot.metadata.text);
+               description = new AdvancedDarkenButton(this.createCustomText(trimmedText,16777215,18,"Dream Hans Sans",true,maxWidth - marginX - 206.55));
+               description.x = 206.55;
+               description.y = textMarginTop - 6;
+               formatter = new DateTimeFormatter(flash.globalization.LocaleID.DEFAULT);
+               formatter.setDateTimePattern("yyyy-MM-dd HH:mm:ss a");
+               date = new Date(slot.metadata.time);
+               dateString = formatter.format(date);
+               dateText = new AdvancedDarkenButton(this.createCustomText(dateString,16777215,18,"Dream Hans Sans",true));
+               dateText.x = 206.55;
+               dateText.y = 64.17 - 6;
+               lineSprite = new Sprite();
+               line = new Shape();
+               line.graphics.beginFill(16777215);
+               line.graphics.drawRect(0,0,4,82);
+               line.graphics.endFill();
+               lineSprite.addChild(line);
+               lineView = new AdvancedDarkenButton(lineSprite);
+               lineSprite.x = 191.25;
+               deleteButton = new AdvancedDarkenButton(this.createCustomText("×",16777215,40,"DINCOROS Bold",true));
+               deleteButton.x = maxWidth - marginX - deleteButton.width;
+               deleteButton.y = 64.17 - 19;
+               deleteButton.addEventListener(MouseEvent.CLICK,function(event:Event):void
+               {
+                  var noButton:SimpleFontButton;
+                  var yesButton:SimpleFontButton;
+                  event.stopImmediatePropagation();
+                  noButton = new SimpleFontButton("取消",24);
+                  yesButton = new SimpleFontButton("确定",24);
+                  yesButton.addEventListener(MouseEvent.CLICK,function(yesEvent:Event):void
+                  {
+                     var id:int = int(parseInt(event.currentTarget.parent.name.split("_")[4]));
+                     saveInfoDAO.deleteSaveData(id);
+                     var sound:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
+                     SEManager.getInstance().playSE(sound.id,sound);
+                     parseSaveDataArray();
+                     reDrawSaveListView();
+                  });
+                  gameSys.showModalDialog("是否删除存档？",Vector.<DisplayObject>([yesButton,noButton]));
+               });
+               saveSlot.addChild(thumbnailView);
+               saveSlot.addChild(title);
+               saveSlot.addChild(description);
+               saveSlot.addChild(dateText);
+               saveSlot.addChild(lineView);
+               saveSlot.addChild(deleteButton);
+               saveListView.addChild(saveSlot);
+               saveSlot.addEventListener(MouseEvent.ROLL_OVER,function(event:Event):void
+               {
+                  event.stopImmediatePropagation();
+                  var i:uint = 0;
+                  while(i < event.currentTarget.numChildren)
+                  {
+                     if(event.currentTarget.getChildAt(i) is AdvancedDarkenButton)
+                     {
+                        var child:AdvancedDarkenButton = event.currentTarget.getChildAt(i);
+                        child.disableDarken();
+                     }
+                     i++;
+                  }
+               });
+               saveSlot.addEventListener(MouseEvent.ROLL_OUT,function(event:Event):void
+               {
+                  event.stopImmediatePropagation();
+                  var i:uint = 0;
+                  while(i < event.currentTarget.numChildren)
+                  {
+                     if(event.currentTarget.getChildAt(i) is AdvancedDarkenButton)
+                     {
+                        var child:AdvancedDarkenButton = event.currentTarget.getChildAt(i);
+                        child.enableDarken();
+                     }
+                     i++;
+                  }
+               });
+               if(this.isSave)
+               {
+                  saveSlot.addEventListener(MouseEvent.CLICK,function(event:Event):void
+                  {
+                     var noButton:SimpleFontButton;
+                     var yesButton:SimpleFontButton;
+                     event.stopImmediatePropagation();
+                     if(deleteButton.hitTestPoint(event.stageX,event.stageY))
+                     {
+                        deleteButton.dispatchEvent(event);
+                        return;
+                     }
+                     noButton = new SimpleFontButton("取消",24);
+                     yesButton = new SimpleFontButton("确定",24);
+                     yesButton.addEventListener(MouseEvent.CLICK,function(yesEvent:Event):void
+                     {
+                        var slot:int = int(parseInt(event.currentTarget.name.split("_")[2]));
+                        var id:int = int(parseInt(event.currentTarget.name.split("_")[4]));
+                        var saveData:Object = createSaveObject();
+                        saveData.metadata.page = page;
+                        saveData.metadata.slot = slot;
+                        saveInfoDAO.replaceSaveData(id,saveData);
+                        var sound:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
+                        SEManager.getInstance().playSE(sound.id,sound);
+                        parseSaveDataArray();
+                        reDrawSaveListView();
+                     });
+                     gameSys.showModalDialog("是否覆盖存档？",Vector.<DisplayObject>([yesButton,noButton]));
+                  });
+               }
+               else
+               {
+                  saveSlot.addEventListener(MouseEvent.CLICK,function(event:Event):void
+                  {
+                     var noButton:SimpleFontButton;
+                     var yesButton:SimpleFontButton;
+                     event.stopImmediatePropagation();
+                     if(deleteButton.hitTestPoint(event.stageX,event.stageY))
+                     {
+                        deleteButton.dispatchEvent(event);
+                        return;
+                     }
+                     noButton = new SimpleFontButton("取消",24);
+                     yesButton = new SimpleFontButton("确定",24);
+                     yesButton.addEventListener(MouseEvent.CLICK,function(yesEvent:Event):void
+                     {
+                        var slot:int = int(parseInt(event.currentTarget.name.split("_")[2]));
+                        var saveData:Object = getSaveByPageAndSlot(page,slot);
+                        var sound:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
+                        SEManager.getInstance().playSE(sound.id,sound);
+                        gameSys.getSceneController().reset();
+                        gameSys.sceneParam = {
+                           "saveData":saveData,
+                           "scenarioID":saveData.metadata.scenarioID,
+                           "viewType":saveData.metadata.type
+                        };
+                        gameSys.getSceneController().jumpScene(MySceneFactory.SCENARIO_MVP);
+                     });
+                     gameSys.showModalDialog("是否读取存档？",Vector.<DisplayObject>([yesButton,noButton]));
+                  });
+               }
+            }
+            i++;
+         }
+         return saveListView;
+      }
+      
+      private function createPagination() : Sprite
+      {
+         var x:*;
+         var prevButton:AdvancedDarkenButton;
+         var i:int;
+         var pageButton:AdvancedDarkenButton;
+         var firstPageButton:AdvancedDarkenButton;
+         var nextButton:AdvancedDarkenButton;
+         var pagination:Sprite = new Sprite();
+         pagination.mouseChildren = true;
+         pagination.mouseEnabled = true;
+         x = 0;
+         prevButton = new AdvancedDarkenButton(this.createPaginationText("<"));
+         prevButton.addEventListener(MouseEvent.CLICK,function():void
+         {
+            prevPage();
+         });
+         prevButton.blendMode = BlendMode.SCREEN;
+         prevButton.x = x;
+         pagination.addChild(prevButton);
+         i = 1;
+         while(i <= 10)
+         {
+            x = 10 + pagination.width;
+            pageButton = new AdvancedDarkenButton(this.createPaginationText(i.toString() + " "));
+            pageButton.addEventListener(MouseEvent.CLICK,function(event:Event):void
+            {
+               var name:String = String(event.currentTarget.name);
+               setPage(parseInt(name.split("_")[1]));
+            });
+            pageButton.blendMode = BlendMode.SCREEN;
+            pageButton.x = x;
+            pageButton.name = "page_" + i;
+            pagination.addChild(pageButton);
+            i++;
+         }
+         firstPageButton = pagination.getChildByName("page_1") as AdvancedDarkenButton;
+         firstPageButton.disableDarken();
+         x = 10 + pagination.width;
+         nextButton = new AdvancedDarkenButton(this.createPaginationText(">"));
+         nextButton.addEventListener(MouseEvent.CLICK,function():void
+         {
+            nextPage();
+         });
+         nextButton.blendMode = BlendMode.SCREEN;
+         nextButton.x = x;
+         pagination.addChild(nextButton);
+         return pagination;
+      }
+      
+      private function initView() : Promise
+      {
+         var sdID:*;
+         var bgImg:Bitmap;
+         var bgFilterImg:Bitmap;
+         var logoImg:Bitmap;
+         var missingText:TextField;
+         var missingFormat:TextFormat;
+         var buttonOption:ZoomModefulButton;
+         var titleTween:ITween;
+         var uiTween:ITween;
+         var deferred:Deferred = new Deferred();
+         var seIDList:Array = [Consts.SE_ID_START,Consts.SE_ID_MOUSE_OVER,Consts.SE_ID_BUTTON_CONFIRM,Consts.SE_ID_BUTTON_CANCEL];
+         for each(sdID in seIDList)
+         {
+            this.seResourceMapping[sdID] = this.createSoundResourceObject(sdID);
+         }
+         bgImg = this.myLoader.getBitmap("bg");
+         bgFilterImg = this.myLoader.getBitmap("bg_filter");
+         logoImg = this.myLoader.getBitmap(this.isSave ? "save_log" : "load_log");
+         this.uiComponent = new Sprite();
+         this.taskScreen.addChild(bgImg);
+         this.taskScreen.addChild(bgFilterImg);
+         this.taskScreen.addChild(logoImg);
+         this.taskScreen.addChild(this.uiComponent);
+         logoImg.x = 18;
+         logoImg.y = 43;
+         if(this.isSave && errorCheck(gameSys.sceneParam.currentScenarioId))
+         {
+            missingText = new TextField();
+            missingFormat = new TextFormat();
+            missingFormat.font = "Dream Hans Sans";
+            missingFormat.size = 18;
+            missingFormat.color = 8026746;
+            missingFormat.align = TextFormatAlign.LEFT;
+            missingText.defaultTextFormat = missingFormat;
+            missingText.autoSize = TextFieldAutoSize.LEFT;
+            missingText.antiAliasType = AntiAliasType.ADVANCED;
+            missingText.gridFitType = GridFitType.PIXEL;
+            missingText.text = missing;
+            missingText.x = 300;
+            missingText.y = 45;
+            missingText.cacheAsBitmap = true;
+            missingText.embedFonts = true;
+            missingText.setTextFormat(missingFormat);
+            this.uiComponent.addChild(missingText);
+         }
+         buttonOption = new ZoomModefulButton(this.myLoader.getBitmap("button_return"),null,this.myLoader.getBitmap("button_return_over"));
+         buttonOption.x = 1100;
+         buttonOption.y = 610;
+         buttonOption.addEventListener(MouseEvent.CLICK,function():void
+         {
+            taskScreen.mouseEnabled = false;
+            taskScreen.mouseChildren = false;
+            var sound:Resource = seResourceMapping[Consts.SE_ID_BUTTON_CANCEL] as Resource;
+            SEManager.getInstance().playSE(sound.id,sound);
+            gameSys.getSceneController().returnScene();
+         });
+         this.paginationView = this.createPagination();
+         this.saveListView = this.createSaveListView();
+         paginationView.x = 440;
+         paginationView.y = 600;
+         saveListView.x = 242.75;
+         saveListView.y = 137.75;
+         this.uiComponent.addChild(this.paginationView);
+         this.uiComponent.addChild(this.saveListView);
+         this.uiComponent.addChild(buttonOption);
+         this.uiComponent.alpha = 0;
+         titleTween = BetweenAS3.tween(logoImg,{
+            "alpha":1,
+            "$x":0
+         },{
+            "alpha":0,
+            "$x":-200
+         },0.4,Quad.easeOut);
+         uiTween = BetweenAS3.tween(this.uiComponent,{"alpha":1},{"alpha":0},0.75,Quad.easeOut);
+         this.startTween = BetweenAS3.serial(titleTween,BetweenAS3.parallel(uiTween));
+         this.startTween.onComplete = function():void
+         {
+            taskScreen.mouseEnabled = true;
+            taskScreen.mouseChildren = true;
+            deferred.resolve(null);
+         };
+         this.startTween.play();
+         return deferred.promise;
+      }
+   }
+}
diff --git a/info/k2c/kjzero/tasks/TitleTask.as b/info/k2c/kjzero/tasks/TitleTask.as
index 60d5762..bc83c52 100644
--- a/info/k2c/kjzero/tasks/TitleTask.as
+++ b/info/k2c/kjzero/tasks/TitleTask.as
@@ -41,6 +41,9 @@ package info.k2c.kjzero.tasks
       },{
          "fileid":"system/title/logo.png",
          "props":{"id":"logo"}
+      },{
+         "fileid":"system/title/load_btn.png",
+         "props":{"id":"loadButton"}
       },{
          "fileid":"system/title/logo_sub.png",
          "props":{"id":"logo_sub"}
@@ -98,6 +101,8 @@ package info.k2c.kjzero.tasks
       
       private var exitButton:SimpleDarkenButton;
       
+      private var loadButton:SimpleDarkenButton;
+      
       private var tweenQueue:TweenQueue;
       
       public function TitleTask(param1:Object)
@@ -173,7 +178,7 @@ package info.k2c.kjzero.tasks
          taskScreen.addChild(bg);
          this.logo = this.myLoader.getBitmap("logo");
          this.logo.alpha = 0;
-         this.logo.x = 286;
+         this.logo.x = 247;
          this.logo.y = 96;
          taskScreen.addChild(this.logo);
          logoSub = this.myLoader.getBitmap("logo_sub");
@@ -193,22 +198,26 @@ package info.k2c.kjzero.tasks
          taskScreen.addChild(this.buttonGroup);
          this.startButton = new SimpleDarkenButton(this.myLoader.getBitmap("startButton"));
          this.startButton.blendMode = BlendMode.SCREEN;
+         this.loadButton = new SimpleDarkenButton(this.myLoader.getBitmap("loadButton"));
+         this.loadButton.blendMode = BlendMode.SCREEN;
+         this.loadButton.y = 40;
          this.continueButton = new SimpleDarkenButton(this.myLoader.getBitmap("continueButton"));
          this.continueButton.blendMode = BlendMode.SCREEN;
-         this.continueButton.y = 40;
+         this.continueButton.y = 80;
          this.optionButton = new SimpleDarkenButton(this.myLoader.getBitmap("optionButton"));
          this.optionButton.blendMode = BlendMode.SCREEN;
-         this.optionButton.y = 80;
+         this.optionButton.y = 120;
          this.exitButton = new SimpleDarkenButton(this.myLoader.getBitmap("exitButton"));
          this.exitButton.blendMode = BlendMode.SCREEN;
-         this.exitButton.y = 120;
+         this.exitButton.y = 160;
          this.buttonGroup.addChild(this.startButton);
+         this.buttonGroup.addChild(this.loadButton);
          this.buttonGroup.addChild(this.continueButton);
          this.buttonGroup.addChild(this.optionButton);
          this.buttonGroup.addChild(this.exitButton);
          this.buttonGroup.blendMode = BlendMode.SCREEN;
          this.buttonGroup.x = (GameSystem.clientWidth - this.buttonGroup.width) / 2;
-         this.buttonGroup.y = GameSystem.clientHeight - GameSystem.clientHeight / 3;
+         this.buttonGroup.y = GameSystem.clientHeight - GameSystem.clientHeight / 3 - 40;
          backTween = BetweenAS3.tween(bg,{
             "alpha":0.9,
             "_blurFilter":{
@@ -325,7 +334,7 @@ package info.k2c.kjzero.tasks
       private function initEventListener() : void
       {
          var _loc2_:SimpleDarkenButton = null;
-         var _loc1_:Vector.<SimpleDarkenButton> = Vector.<SimpleDarkenButton>([this.startButton,this.continueButton,this.optionButton,this.exitButton]);
+         var _loc1_:Vector.<SimpleDarkenButton> = Vector.<SimpleDarkenButton>([this.startButton,this.continueButton,this.optionButton,this.exitButton,this.loadButton]);
          for each(_loc2_ in _loc1_)
          {
             _loc2_.addEventListener(MouseEvent.CLICK,this.onButtonClick);
@@ -336,7 +345,7 @@ package info.k2c.kjzero.tasks
       private function removeEventListener() : void
       {
          var _loc2_:SimpleDarkenButton = null;
-         var _loc1_:Vector.<SimpleDarkenButton> = Vector.<SimpleDarkenButton>([this.startButton,this.continueButton,this.optionButton,this.exitButton]);
+         var _loc1_:Vector.<SimpleDarkenButton> = Vector.<SimpleDarkenButton>([this.startButton,this.continueButton,this.optionButton,this.exitButton,this.loadButton]);
          for each(_loc2_ in _loc1_)
          {
             _loc2_.removeEventListener(MouseEvent.CLICK,this.onButtonClick);
@@ -367,6 +376,12 @@ package info.k2c.kjzero.tasks
                _loc2_ = this.seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
                this.seManager.playSE(_loc2_.id,_loc2_,1);
                break;
+            case this.loadButton:
+               log.info("click load.");
+               this.onClick(MySceneFactory.LOAD);
+               _loc2_ = this.seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
+               this.seManager.playSE(_loc2_.id,_loc2_,1);
+               break;
             case this.exitButton:
                log.info("click exit.");
                _loc2_ = this.seResourceMapping[Consts.SE_ID_BUTTON_CONFIRM] as Resource;
@@ -411,6 +426,19 @@ package info.k2c.kjzero.tasks
                   stage.removeChild(taskScreen);
                };
                break;
+            case MySceneFactory.LOAD:
+               this.callSceneID = MySceneFactory.LOAD;
+               func = function(param1:Event):void
+               {
+                  Util.removeOwnEventListener(param1,arguments.callee);
+                  gameSys.sceneParam = {
+                     "bgmManager":bgmManager,
+                     "seManager":seManager
+                  };
+                  callFlg = true;
+                  stage.removeChild(taskScreen);
+               };
+               break;
             case MySceneFactory.CHAPTER_SELECT:
                this.callSceneID = MySceneFactory.CHAPTER_SELECT;
                func = function(param1:Event):void
diff --git a/info/k2c/kjzero/tasks/ending/EndingTask.as b/info/k2c/kjzero/tasks/ending/EndingTask.as
index e7f1aff..42d6ad0 100644
--- a/info/k2c/kjzero/tasks/ending/EndingTask.as
+++ b/info/k2c/kjzero/tasks/ending/EndingTask.as
@@ -296,7 +296,7 @@ package info.k2c.kjzero.tasks.ending
          var _loc9_:Bitmap = null;
          this.growLeafObjList = new Vector.<Bitmap>();
          var _loc1_:uint = 200;
-         var _loc2_:String = "あまりの気だるさで夢から醒めたとは思えなかった。へとへとで指一本動かしたくない、致命的な疲労感が全身を支配していた。でも、ここはどこのだろう。俺は横たわっていて高い空を見上げている。白い雲が照れくさそうに挨拶しながら成層圏と俺の間に割り込んでくる。ああ、自分は今地表に居るんだなと、今までに想像もしなかった方法で教えられた気がした。ひんやりとした風と陽光の温もりが俺の肌の上で混ざり合う、心地よさの境界で俺は本当に溶けるような安堵感に包まれている。そこで俺は胸につっかかっている緊張感をはき出そうとした。しかし、俺は唖然とした。身体感覚はあるし、はき出そうとしているものもぼんやりと知覚している。だけれど、俺の肺……いや、横隔膜というのだろうか……もうなんでもいい、普段意識せず、息を吐き出すという行為を実現する器管はだんまりを決め込んでいた。俺は息ができていない……。もちろん俺は緊迫する。実際になったことはないがパニック障害のことはなんども想像したものだ。その想像が今役に立っているようだ。ゆっくり、焦らず、深く吸いこむ、吐き出す……焦れば失神するぞ。だけれど、一向に俺の肺は呼吸をしようとしなかった。死という概念が思い浮かび、それが目の前に現象として立ち現れている……つまり絶命する……俺は異常だと思った。俺は死ぬことを知っているし、それが今目の前で起ころうとしているけれど、なんでそれに抗わないのだろう……どうして恐れていないのだろう。俺は恐れようとした。";
+         var _loc2_:String = "携着如此凝重的疲惫气息，我不信自己是从梦中醒来的。手指如被抽出全部气力，连一根也无法抬起，致命的乏力感胀满了全身。不过，这究竟是哪里呢。我仰卧着，环视四周的天空。这白云娇滴滴地向我打着招呼，给平流层撞开一个缝，从我身边溜进去。啊啊，原来我是在地表上的呀，我是被这种意想不到的方法所点拨才明白的。丝缕冰凉的风缭乱了温吞的暖阳，嬉耍于我的肌肤之上，我的心灵也像被舒展开的白纸，整个地融化在了这舒适的境地。于此刻，我胸中霎时变得要将那拥堵的紧张感一齐迸出似得。我却只是哑然。倒是还存着些感知能力，能模模糊糊地觉察到自己将呕出什么东西。虽这么说，我的肺……不，该说是横膈膜吗……顾不上那么多了，就是那个平时意识不到且负责吞吐气息的那个器官，定是死死地梗住了。我无法整备自己的气息……。我是在逼迫自己。即使我并未确诊过惊恐障碍，但也曾数次幻想过自己的病发。这想象现如今也派上用场了。慢着来、不要着急、深吸气以至底端、缓缓吐出……若有丝毫焦躁可是会被瘴疠夺舍的哦。话虽如此，我的肺却并不愿一如往常地复还我的呼吸。死的概念从我心中孕育，那死的韵味也渐渐在我眼前明晰了模样……绝命将至……我已摆脱常理化的思考。我将死去，这进程明明已跃于我的眼前，为何我不愿反抗呢……我又为何没有丝毫畏惧呢。我对着那恐惧迈开步伐。";
          var _loc3_:int = 0;
          while(_loc3_ < _loc2_.length)
          {
@@ -392,12 +392,12 @@ package info.k2c.kjzero.tasks.ending
          deferred = new Deferred();
          this.phaseFunctionList = new Vector.<Function>();
          kyojintachiImg = this.getBitmapSpriteWrapper("kyojintachi");
-         kyojintachiImg.x = 439;
+         kyojintachiImg.x = 409;
          kyojintachiImg.y = 276;
          kyojintachiImg.alpha = 0;
          kyojintachiImg.blendMode = BlendMode.INVERT;
          zeroImg = this.getBitmapSpriteWrapper("zero");
-         zeroImg.x = 672;
+         zeroImg.x = 702;
          zeroImg.y = 276;
          zeroImg.alpha = 0;
          zeroImg.blendMode = BlendMode.INVERT;
@@ -997,261 +997,3 @@ package info.k2c.kjzero.tasks.ending
       }
    }
 }
-
-import flash.display.Bitmap;
-import flash.display.BitmapData;
-import flash.display.DisplayObject;
-import flash.display.Sprite;
-import flash.filters.BlurFilter;
-import flash.geom.Matrix;
-import flash.text.TextField;
-import flash.utils.ByteArray;
-import flash.utils.Dictionary;
-import info.k2c.kjzero.tasks.ending.GrowerTree;
-import info.k2c.kjzero.tasks.ending.GrowerTreeNode;
-import info.k2c.kjzero.utils.AppUtil;
-
-class GrowerTreeWrapper extends Sprite
-{
-    
-   
-   private var growerTree:GrowerTree;
-   
-   private var _leafList:Vector.<Bitmap> = null;
-   
-   private var nodeObjects:Dictionary;
-   
-   private var leafNodeList:Vector.<GrowerTreeNode>;
-   
-   public function GrowerTreeWrapper(param1:Number, param2:Number)
-   {
-      super();
-      this._leafList = new Vector.<Bitmap>();
-      this.nodeObjects = new Dictionary(true);
-      this.leafNodeList = new Vector.<GrowerTreeNode>();
-      this.growerTree = new GrowerTree(param1,param2,0);
-      this.addChild(this.growerTree);
-   }
-   
-   public function render() : Boolean
-   {
-      if(this.growerTree.isRenderComplete)
-      {
-         return false;
-      }
-      if(false === this.growerTree.render())
-      {
-         this.initTreeNodeContainer();
-      }
-      return true;
-   }
-   
-   public function renderAll() : void
-   {
-      this.growerTree.renderAll();
-      this.initTreeNodeContainer();
-   }
-   
-   private function initTreeNodeContainer() : void
-   {
-      var _loc1_:GrowerTreeNode = null;
-      var _loc2_:Sprite = null;
-      for each(_loc1_ in this.growerTree.treeNodeList)
-      {
-         if(_loc1_.isLeaf)
-         {
-            _loc2_ = new Sprite();
-            _loc2_.x = _loc1_.xPos;
-            _loc2_.y = _loc1_.yPos;
-            this.addChild(_loc2_);
-            this.nodeObjects[_loc1_] = _loc2_;
-            this.leafNodeList.push(_loc1_);
-         }
-      }
-   }
-   
-   public function createRandomLeafObject(param1:uint) : void
-   {
-      var _loc2_:Sprite = null;
-      var _loc3_:Bitmap = null;
-      param1 = 250;
-      do
-      {
-         for each(_loc2_ in this.nodeObjects)
-         {
-            _loc3_ = this.createLeafObject();
-            _loc2_.addChild(_loc3_);
-            this.leafList.push(_loc3_);
-            if(this._leafList.length >= param1)
-            {
-               break;
-            }
-         }
-      }
-      while(this._leafList.length < param1);
-      
-   }
-   
-   public function get leafList() : Vector.<Bitmap>
-   {
-      return this._leafList;
-   }
-   
-   public function getLeafRandom() : Bitmap
-   {
-      var _loc1_:uint = 0;
-      var _loc2_:Bitmap = null;
-      if(0 !== this._leafList.length)
-      {
-         _loc1_ = Math.floor(Math.random() * this._leafList.length);
-         _loc2_ = this._leafList[_loc1_];
-         this._leafList.splice(_loc1_,1);
-         return _loc2_;
-      }
-      return null;
-   }
-   
-   public function putLeafObjectRandom(param1:DisplayObject) : void
-   {
-      var _loc2_:uint = 0;
-      var _loc3_:GrowerTreeNode = null;
-      var _loc4_:Sprite = null;
-      if(0 !== this.leafNodeList.length)
-      {
-         _loc2_ = Math.floor(Math.random() * this.leafNodeList.length);
-         _loc3_ = this.leafNodeList[_loc2_];
-         if(_loc4_ = this.nodeObjects[_loc3_] as Sprite)
-         {
-            param1.x = -param1.width / 2;
-            param1.y = -param1.height / 2;
-            _loc4_.addChild(param1);
-         }
-      }
-   }
-   
-   public function dispose() : void
-   {
-      var _loc1_:Bitmap = null;
-      for each(_loc1_ in this.leafList)
-      {
-         _loc1_.bitmapData.dispose();
-      }
-   }
-   
-   private function createLeafObject() : Bitmap
-   {
-      var _loc16_:int = 0;
-      var _loc1_:uint = 34975;
-      var _loc2_:uint = 39026;
-      var _loc3_:uint = uint(_loc2_ - _loc1_);
-      var _loc4_:uint = 5;
-      var _loc5_:uint = 2;
-      var _loc6_:String = null;
-      var _loc7_:ByteArray = new ByteArray();
-      var _loc8_:int = 0;
-      while(_loc8_ < _loc5_)
-      {
-         _loc16_ = _loc1_ + Math.ceil(Math.random() * _loc3_);
-         _loc7_.writeShort(_loc16_);
-         _loc8_++;
-      }
-      _loc7_.position = 0;
-      _loc6_ = _loc7_.readMultiByte(_loc5_ * 2,"shift-jis");
-      var _loc9_:TextField = AppUtil.createAppGothicText(_loc6_,17,0);
-      var _loc10_:BlurFilter;
-      (_loc10_ = new BlurFilter()).blurX = 2;
-      _loc10_.blurY = 2;
-      _loc10_.quality = 1;
-      _loc9_.filters = [_loc10_];
-      var _loc11_:BitmapData = new BitmapData(_loc9_.width,_loc9_.height,true,0);
-      var _loc12_:Matrix = new Matrix();
-      _loc11_.draw(_loc9_,_loc12_);
-      var _loc13_:Bitmap;
-      (_loc13_ = new Bitmap(_loc11_)).x = _loc4_ * Math.random() * (Math.random() > 0.5 ? -1 : 1) - _loc13_.width / 2;
-      _loc13_.y = _loc4_ * Math.random() * (Math.random() > 0.5 ? -1 : 1) - _loc13_.height / 2;
-      var _loc14_:Number;
-      if((_loc14_ = 0.5 + Math.random()) > 1)
-      {
-         _loc14_ = 1;
-      }
-      _loc13_.alpha = _loc14_;
-      var _loc15_:Number = 1 + 0.5 * Math.random() * (Math.random() > 0.5 ? -1 : 1);
-      _loc13_.scaleX = _loc13_.scaleY = _loc15_;
-      return _loc13_;
-   }
-   
-   private function createLeafText(param1:uint = 10) : Sprite
-   {
-      var _loc9_:String = null;
-      var _loc10_:ByteArray = null;
-      var _loc11_:int = 0;
-      var _loc12_:TextField = null;
-      var _loc13_:BitmapData = null;
-      var _loc14_:Matrix = null;
-      var _loc15_:Bitmap = null;
-      var _loc16_:Number = NaN;
-      var _loc17_:Number = NaN;
-      var _loc18_:int = 0;
-      var _loc2_:Sprite = new Sprite();
-      var _loc3_:uint = 34975;
-      var _loc4_:uint;
-      var _loc5_:uint = uint((_loc4_ = 39026) - _loc3_);
-      var _loc6_:uint = 30;
-      var _loc7_:uint = 2;
-      var _loc8_:int = 0;
-      while(_loc8_ < param1)
-      {
-         _loc9_ = null;
-         _loc10_ = new ByteArray();
-         _loc11_ = 0;
-         while(_loc11_ < _loc7_)
-         {
-            _loc18_ = _loc3_ + Math.ceil(Math.random() * _loc5_);
-            _loc10_.writeShort(_loc18_);
-            _loc11_++;
-         }
-         _loc10_.position = 0;
-         _loc9_ = _loc10_.readMultiByte(_loc7_ * 2,"shift-jis");
-         _loc12_ = AppUtil.createAppGothicText(_loc9_,17,0);
-         _loc13_ = new BitmapData(_loc12_.width,_loc12_.height,true,0);
-         _loc14_ = new Matrix();
-         _loc13_.draw(_loc12_,_loc14_);
-         (_loc15_ = new Bitmap(_loc13_)).x = _loc6_ * Math.random() * (Math.random() > 0.5 ? -1 : 1);
-         _loc15_.y = _loc6_ * Math.random() * (Math.random() > 0.5 ? -1 : 1);
-         if((_loc16_ = 0.7 + Math.random()) > 1)
-         {
-            _loc16_ = 1;
-         }
-         _loc15_.alpha = _loc16_;
-         _loc17_ = 1 + 0.5 * Math.random();
-         _loc15_.scaleX = _loc15_.scaleY = _loc17_;
-         _loc2_.addChild(_loc15_);
-         this.leafList.push(_loc15_);
-         _loc8_++;
-      }
-      return _loc2_;
-   }
-}
-
-import flash.display.DisplayObject;
-
-class LeafObjectData
-{
-    
-   
-   public var text:String = null;
-   
-   public var displayObj:DisplayObject = null;
-   
-   public var targetX:Number = 0;
-   
-   public var targetY:Number = 0;
-   
-   public function LeafObjectData(param1:String, param2:Number, param3:Number)
-   {
-      super();
-      this.text = param1;
-      this.targetX = param2;
-      this.targetY = param3;
-   }
-}
diff --git a/info/k2c/kjzero/tasks/ending/GrowerTreeWrapper.as b/info/k2c/kjzero/tasks/ending/GrowerTreeWrapper.as
new file mode 100644
index 0000000..ec3aa5f
--- /dev/null
+++ b/info/k2c/kjzero/tasks/ending/GrowerTreeWrapper.as
@@ -0,0 +1,235 @@
+package info.k2c.kjzero.tasks.ending
+{
+   import flash.display.Bitmap;
+   import flash.display.BitmapData;
+   import flash.display.DisplayObject;
+   import flash.display.Sprite;
+   import flash.filters.BlurFilter;
+   import flash.geom.Matrix;
+   import flash.text.TextField;
+   import flash.utils.ByteArray;
+   import flash.utils.Dictionary;
+   import info.k2c.kjzero.utils.AppUtil;
+   
+   public class GrowerTreeWrapper extends Sprite
+   {
+       
+      
+      private var growerTree:GrowerTree;
+      
+      private var _leafList:Vector.<Bitmap> = null;
+      
+      private var nodeObjects:Dictionary;
+      
+      private var leafNodeList:Vector.<GrowerTreeNode>;
+      
+      public function GrowerTreeWrapper(param1:Number, param2:Number)
+      {
+         super();
+         this._leafList = new Vector.<Bitmap>();
+         this.nodeObjects = new Dictionary(true);
+         this.leafNodeList = new Vector.<GrowerTreeNode>();
+         this.growerTree = new GrowerTree(param1,param2,0);
+         this.addChild(this.growerTree);
+      }
+      
+      public function render() : Boolean
+      {
+         if(this.growerTree.isRenderComplete)
+         {
+            return false;
+         }
+         if(false === this.growerTree.render())
+         {
+            this.initTreeNodeContainer();
+         }
+         return true;
+      }
+      
+      public function renderAll() : void
+      {
+         this.growerTree.renderAll();
+         this.initTreeNodeContainer();
+      }
+      
+      private function initTreeNodeContainer() : void
+      {
+         var _loc1_:GrowerTreeNode = null;
+         var _loc2_:Sprite = null;
+         for each(_loc1_ in this.growerTree.treeNodeList)
+         {
+            if(_loc1_.isLeaf)
+            {
+               _loc2_ = new Sprite();
+               _loc2_.x = _loc1_.xPos;
+               _loc2_.y = _loc1_.yPos;
+               this.addChild(_loc2_);
+               this.nodeObjects[_loc1_] = _loc2_;
+               this.leafNodeList.push(_loc1_);
+            }
+         }
+      }
+      
+      public function createRandomLeafObject(param1:uint) : void
+      {
+         var _loc2_:Sprite = null;
+         var _loc3_:Bitmap = null;
+         param1 = 250;
+         do
+         {
+            for each(_loc2_ in this.nodeObjects)
+            {
+               _loc3_ = this.createLeafObject();
+               _loc2_.addChild(_loc3_);
+               this.leafList.push(_loc3_);
+               if(this._leafList.length >= param1)
+               {
+                  break;
+               }
+            }
+         }
+         while(this._leafList.length < param1);
+         
+      }
+      
+      public function get leafList() : Vector.<Bitmap>
+      {
+         return this._leafList;
+      }
+      
+      public function getLeafRandom() : Bitmap
+      {
+         var _loc1_:uint = 0;
+         var _loc2_:Bitmap = null;
+         if(0 !== this._leafList.length)
+         {
+            _loc1_ = Math.floor(Math.random() * this._leafList.length);
+            _loc2_ = this._leafList[_loc1_];
+            this._leafList.splice(_loc1_,1);
+            return _loc2_;
+         }
+         return null;
+      }
+      
+      public function putLeafObjectRandom(param1:DisplayObject) : void
+      {
+         var _loc2_:uint = 0;
+         var _loc3_:GrowerTreeNode = null;
+         var _loc4_:Sprite = null;
+         if(0 !== this.leafNodeList.length)
+         {
+            _loc2_ = Math.floor(Math.random() * this.leafNodeList.length);
+            _loc3_ = this.leafNodeList[_loc2_];
+            if(_loc4_ = this.nodeObjects[_loc3_] as Sprite)
+            {
+               param1.x = -param1.width / 2;
+               param1.y = -param1.height / 2;
+               _loc4_.addChild(param1);
+            }
+         }
+      }
+      
+      public function dispose() : void
+      {
+         var _loc1_:Bitmap = null;
+         for each(_loc1_ in this.leafList)
+         {
+            _loc1_.bitmapData.dispose();
+         }
+      }
+      
+      private function createLeafObject() : Bitmap
+      {
+         var _loc16_:int = 0;
+         var _loc1_:uint = 34975;
+         var _loc2_:uint = 39026;
+         var _loc3_:uint = uint(_loc2_ - _loc1_);
+         var _loc4_:uint = 5;
+         var _loc5_:uint = 2;
+         var _loc6_:String = null;
+         var _loc7_:ByteArray = new ByteArray();
+         var _loc8_:int = 0;
+         while(_loc8_ < _loc5_)
+         {
+            _loc16_ = _loc1_ + Math.ceil(Math.random() * _loc3_);
+            _loc7_.writeShort(_loc16_);
+            _loc8_++;
+         }
+         _loc7_.position = 0;
+         _loc6_ = _loc7_.readMultiByte(_loc5_ * 2,"shift-jis");
+         var _loc9_:TextField = AppUtil.createAppGothicText(_loc6_,17,0);
+         var _loc10_:BlurFilter;
+         (_loc10_ = new BlurFilter()).blurX = 2;
+         _loc10_.blurY = 2;
+         _loc10_.quality = 1;
+         _loc9_.filters = [_loc10_];
+         var _loc11_:BitmapData = new BitmapData(_loc9_.width,_loc9_.height,true,0);
+         var _loc12_:Matrix = new Matrix();
+         _loc11_.draw(_loc9_,_loc12_);
+         var _loc13_:Bitmap;
+         (_loc13_ = new Bitmap(_loc11_)).x = _loc4_ * Math.random() * (Math.random() > 0.5 ? -1 : 1) - _loc13_.width / 2;
+         _loc13_.y = _loc4_ * Math.random() * (Math.random() > 0.5 ? -1 : 1) - _loc13_.height / 2;
+         var _loc14_:Number;
+         if((_loc14_ = 0.5 + Math.random()) > 1)
+         {
+            _loc14_ = 1;
+         }
+         _loc13_.alpha = _loc14_;
+         var _loc15_:Number = 1 + 0.5 * Math.random() * (Math.random() > 0.5 ? -1 : 1);
+         _loc13_.scaleX = _loc13_.scaleY = _loc15_;
+         return _loc13_;
+      }
+      
+      private function createLeafText(param1:uint = 10) : Sprite
+      {
+         var _loc9_:String = null;
+         var _loc10_:ByteArray = null;
+         var _loc11_:int = 0;
+         var _loc12_:TextField = null;
+         var _loc13_:BitmapData = null;
+         var _loc14_:Matrix = null;
+         var _loc15_:Bitmap = null;
+         var _loc16_:Number = NaN;
+         var _loc17_:Number = NaN;
+         var _loc18_:int = 0;
+         var _loc2_:Sprite = new Sprite();
+         var _loc3_:uint = 34975;
+         var _loc4_:uint;
+         var _loc5_:uint = uint((_loc4_ = 39026) - _loc3_);
+         var _loc6_:uint = 30;
+         var _loc7_:uint = 2;
+         var _loc8_:int = 0;
+         while(_loc8_ < param1)
+         {
+            _loc9_ = null;
+            _loc10_ = new ByteArray();
+            _loc11_ = 0;
+            while(_loc11_ < _loc7_)
+            {
+               _loc18_ = _loc3_ + Math.ceil(Math.random() * _loc5_);
+               _loc10_.writeShort(_loc18_);
+               _loc11_++;
+            }
+            _loc10_.position = 0;
+            _loc9_ = _loc10_.readMultiByte(_loc7_ * 2,"shift-jis");
+            _loc12_ = AppUtil.createAppGothicText(_loc9_,17,0);
+            _loc13_ = new BitmapData(_loc12_.width,_loc12_.height,true,0);
+            _loc14_ = new Matrix();
+            _loc13_.draw(_loc12_,_loc14_);
+            (_loc15_ = new Bitmap(_loc13_)).x = _loc6_ * Math.random() * (Math.random() > 0.5 ? -1 : 1);
+            _loc15_.y = _loc6_ * Math.random() * (Math.random() > 0.5 ? -1 : 1);
+            if((_loc16_ = 0.7 + Math.random()) > 1)
+            {
+               _loc16_ = 1;
+            }
+            _loc15_.alpha = _loc16_;
+            _loc17_ = 1 + 0.5 * Math.random();
+            _loc15_.scaleX = _loc15_.scaleY = _loc17_;
+            _loc2_.addChild(_loc15_);
+            this.leafList.push(_loc15_);
+            _loc8_++;
+         }
+         return _loc2_;
+      }
+   }
+}
diff --git a/info/k2c/kjzero/tasks/ending/LeafObjectData.as b/info/k2c/kjzero/tasks/ending/LeafObjectData.as
new file mode 100644
index 0000000..e3cbb35
--- /dev/null
+++ b/info/k2c/kjzero/tasks/ending/LeafObjectData.as
@@ -0,0 +1,25 @@
+package info.k2c.kjzero.tasks.ending
+{
+   import flash.display.DisplayObject;
+   
+   public class LeafObjectData
+   {
+       
+      
+      public var text:String = null;
+      
+      public var displayObj:DisplayObject = null;
+      
+      public var targetX:Number = 0;
+      
+      public var targetY:Number = 0;
+      
+      public function LeafObjectData(param1:String, param2:Number, param3:Number)
+      {
+         super();
+         this.text = param1;
+         this.targetX = param2;
+         this.targetY = param3;
+      }
+   }
+}
diff --git a/info/k2c/yamalib/draw/RestorableLayer.as b/info/k2c/yamalib/draw/RestorableLayer.as
index 39abcd6..a25c057 100644
--- a/info/k2c/yamalib/draw/RestorableLayer.as
+++ b/info/k2c/yamalib/draw/RestorableLayer.as
@@ -18,12 +18,15 @@ package info.k2c.yamalib.draw
       private static var log:ILogger = Log.getLogger("RestorableLayer");
        
       
+      private var zIndexAddChild:Array;
+      
       protected var loaderFactory:ResourceLoaderFactory;
       
       public function RestorableLayer(param1:ResourceLoaderFactory)
       {
          super();
          this.loaderFactory = param1;
+         this.zIndexAddChild = [];
       }
       
       private static function getSize(param1:Object) : int
@@ -82,6 +85,43 @@ package info.k2c.yamalib.draw
          return _loc2_;
       }
       
+      private function setIndexMapWithZ(child:*, name:String, zindex:int) : *
+      {
+         var index:int = 0;
+         var childId:String = null;
+         var i:int = 0;
+         var length:int = int(this.zIndexAddChild.length);
+         i = 0;
+         while(i < length)
+         {
+            if(this.zIndexAddChild[i].zIndex > zindex)
+            {
+               break;
+            }
+            i++;
+         }
+         this.zIndexAddChild.splice(i,0,{
+            "child":child,
+            "name":name,
+            "zIndex":zindex
+         });
+      }
+      
+      private function okay() : *
+      {
+         var i:int = 0;
+         while(i < this.zIndexAddChild.length)
+         {
+            var child:* = this.zIndexAddChild[i].child;
+            var name:String = String(this.zIndexAddChild[i].name);
+            var zindex:int = int(this.zIndexAddChild[i].zIndex);
+            this.addChild(child);
+            this.setIndexMap(name,child,zindex);
+            this.childMap[name] = child;
+            i++;
+         }
+      }
+      
       public function restoreLayer(param1:LayerRestoreData) : void
       {
          var restoreResources:* = undefined;
@@ -129,6 +169,23 @@ package info.k2c.yamalib.draw
             {
                case IResourceLoader.TYPE_MOVIECLIP:
                   _loc6_.data = param3.getMovieClip(_loc6_.id);
+                  if(_loc6_.data.hasOwnProperty("doInit"))
+                  {
+                     _loc6_.data.doInit(this);
+                  }
+                  var i:int = 0;
+                  while(i < _loc6_.data.numChildren)
+                  {
+                     var child:MovieClip = _loc6_.data.getChildAt(i) as MovieClip;
+                     if(child != null && child.hasOwnProperty("play"))
+                     {
+                        if(child.hasOwnProperty("visible") && child.visible)
+                        {
+                           child.play();
+                        }
+                     }
+                     i++;
+                  }
                   break;
                default:
                   _loc6_.data = param3.getBitmap(_loc6_.id);
@@ -145,10 +202,9 @@ package info.k2c.yamalib.draw
                (_loc14_ = SenarioTransitionFactory.create(_loc9_,_loc12_,_loc13_)).start();
                _loc9_.addTransit(_loc14_);
             }
-            this.addChild(_loc9_);
-            this.setIndexMap(_loc4_,_loc9_,_loc8_);
-            this.childMap[_loc4_] = _loc9_;
+            this.setIndexMapWithZ(_loc9_,_loc4_,_loc8_);
          }
+         this.okay();
          log.info("loaded : numChildren : {0}",param2.length);
          this.restoreObject(param1.transitableSpriteRestoreData);
          dispatchEvent(new Event(LOAD_COMPLETE));
diff --git a/info/k2c/yamalib/gui/button/AdvancedDarkenButton.as b/info/k2c/yamalib/gui/button/AdvancedDarkenButton.as
new file mode 100644
index 0000000..317c8b5
--- /dev/null
+++ b/info/k2c/yamalib/gui/button/AdvancedDarkenButton.as
@@ -0,0 +1,73 @@
+package info.k2c.yamalib.gui.button
+{
+   import flash.display.DisplayObject;
+   import flash.display.Sprite;
+   import flash.events.MouseEvent;
+   import flash.filters.ColorMatrixFilter;
+   
+   public class AdvancedDarkenButton extends Sprite
+   {
+       
+      
+      private var colorFilter:ColorMatrixFilter;
+      
+      private var myImage:DisplayObject;
+      
+      public function AdvancedDarkenButton(param1:DisplayObject, param2:ColorMatrixFilter = null)
+      {
+         super();
+         this.mouseChildren = true;
+         this.mouseEnabled = true;
+         this.buttonMode = true;
+         if(param2 == null)
+         {
+            this.colorFilter = createGrayFilter();
+         }
+         else
+         {
+            this.colorFilter = param2;
+         }
+         this.myImage = param1;
+         this.myImage.filters = [this.colorFilter];
+         this.addChild(this.myImage);
+         this.addEventListener(MouseEvent.ROLL_OVER,this.onRollOver);
+         this.addEventListener(MouseEvent.ROLL_OUT,this.onRollOut);
+      }
+      
+      private static function createGrayFilter() : ColorMatrixFilter
+      {
+         var _loc1_:Array = [1 / 2,0,0,0,0,0,1 / 2,0,0,0,0,0,1 / 2,0,0,0,0,0,1,0];
+         return new ColorMatrixFilter(_loc1_);
+      }
+      
+      public function disableDarken() : void
+      {
+         if(this.hasEventListener(MouseEvent.ROLL_OVER))
+         {
+            this.myImage.filters = null;
+            this.removeEventListener(MouseEvent.ROLL_OVER,this.onRollOver);
+            this.removeEventListener(MouseEvent.ROLL_OUT,this.onRollOut);
+         }
+      }
+      
+      public function enableDarken() : void
+      {
+         if(!this.hasEventListener(MouseEvent.ROLL_OVER))
+         {
+            this.myImage.filters = [this.colorFilter];
+            this.addEventListener(MouseEvent.ROLL_OVER,this.onRollOver);
+            this.addEventListener(MouseEvent.ROLL_OUT,this.onRollOut);
+         }
+      }
+      
+      private function onRollOver(param1:MouseEvent) : void
+      {
+         this.myImage.filters = null;
+      }
+      
+      private function onRollOut(param1:MouseEvent) : void
+      {
+         this.myImage.filters = [this.colorFilter];
+      }
+   }
+}
diff --git a/info/k2c/yamalib/gui/button/DiscreteIndicator.as b/info/k2c/yamalib/gui/button/DiscreteIndicator.as
new file mode 100644
index 0000000..afca60c
--- /dev/null
+++ b/info/k2c/yamalib/gui/button/DiscreteIndicator.as
@@ -0,0 +1,91 @@
+package info.k2c.yamalib.gui.button
+{
+   import flash.display.Shape;
+   import flash.display.Sprite;
+   import flash.filters.ColorMatrixFilter;
+   
+   public class DiscreteIndicator extends Sprite
+   {
+       
+      
+      private var container:Sprite;
+      
+      private var maxValue:uint;
+      
+      private var currentValue:uint;
+      
+      private var grayFilter:ColorMatrixFilter;
+      
+      private var shapeList:Vector.<Shape>;
+      
+      public function DiscreteIndicator(param1:uint)
+      {
+         this.shapeList = new Vector.<Shape>();
+         super();
+         this.container = new Sprite();
+         this.addChild(this.container);
+         this.maxValue = param1;
+         this.currentValue = 0;
+         this.grayFilter = createGrayFilter();
+         this.init();
+      }
+      
+      private static function createGrayFilter() : ColorMatrixFilter
+      {
+         var _loc1_:Array = [1 / 3,0,0,0,0,0,1 / 3,0,0,0,0,0,1 / 3,0,0,0,0,0,1,0];
+         return new ColorMatrixFilter(_loc1_);
+      }
+      
+      private function init() : void
+      {
+         var _loc4_:Shape = null;
+         var _loc1_:uint = 2;
+         var _loc2_:Number = 0;
+         var _loc3_:int = 0;
+         while(_loc3_ < this.maxValue)
+         {
+            (_loc4_ = new Shape()).graphics.beginFill(16094236);
+            _loc4_.graphics.drawRect(0,0,18,18);
+            _loc4_.graphics.endFill();
+            _loc4_.filters = [this.grayFilter];
+            _loc4_.x = _loc2_;
+            this.container.addChild(_loc4_);
+            this.shapeList.push(_loc4_);
+            _loc2_ += _loc4_.width + _loc1_;
+            _loc3_++;
+         }
+      }
+      
+      public function setValue(param1:uint) : void
+      {
+         var _loc3_:Shape = null;
+         if(this.maxValue >= param1)
+         {
+            this.currentValue = param1;
+         }
+         else
+         {
+            this.currentValue = this.maxValue;
+         }
+         var _loc2_:int = 0;
+         while(_loc2_ < this.maxValue)
+         {
+            _loc3_ = this.shapeList[_loc2_];
+            if(this.currentValue <= _loc2_)
+            {
+               _loc3_.filters = [this.grayFilter];
+            }
+            else
+            {
+               _loc3_.filters = null;
+            }
+            _loc2_++;
+         }
+      }
+      
+      public function getValue() : uint
+      {
+         return this.currentValue;
+      }
+   }
+}
diff --git a/info/k2c/yamalib/gui/button/SwitchableButtonGroup.as b/info/k2c/yamalib/gui/button/SwitchableButtonGroup.as
new file mode 100644
index 0000000..7648383
--- /dev/null
+++ b/info/k2c/yamalib/gui/button/SwitchableButtonGroup.as
@@ -0,0 +1,205 @@
+package info.k2c.yamalib.gui.button
+{
+   import flash.display.DisplayObject;
+   import flash.display.Sprite;
+   import flash.events.Event;
+   import flash.events.MouseEvent;
+   
+   public class SwitchableButtonGroup extends Sprite
+   {
+      
+      public static var EVENT_ON_CHANGE:String = "EVENT_ON_CHANGE";
+       
+      
+      private var _backgroundImg:DisplayObject;
+      
+      private var _itemNameObj:DisplayObject;
+      
+      private var _prevButton:DisplayObject;
+      
+      private var _nextButton:DisplayObject;
+      
+      private var itemList:Vector.<SwitchableButtonGroupItem>;
+      
+      private var currentItemIndex:int = 0;
+      
+      public function SwitchableButtonGroup()
+      {
+         this.itemList = new Vector.<SwitchableButtonGroupItem>();
+         super();
+      }
+      
+      public function dispose() : void
+      {
+         if(this.itemList)
+         {
+            this.itemList = null;
+         }
+      }
+      
+      public function get backgroundImg() : DisplayObject
+      {
+         return this._backgroundImg;
+      }
+      
+      public function set backgroundImg(param1:DisplayObject) : void
+      {
+         if(this._backgroundImg)
+         {
+            removeChild(this._backgroundImg);
+         }
+         this._backgroundImg = param1;
+         if(this._backgroundImg)
+         {
+            addChildAt(this._backgroundImg,0);
+         }
+      }
+      
+      public function get itemNameObj() : DisplayObject
+      {
+         return this._itemNameObj;
+      }
+      
+      public function set itemNameObj(param1:DisplayObject) : void
+      {
+         this._itemNameObj = param1;
+         if(this._itemNameObj)
+         {
+            addChild(this._itemNameObj);
+         }
+      }
+      
+      public function get prevButton() : DisplayObject
+      {
+         return this._prevButton;
+      }
+      
+      public function set prevButton(param1:DisplayObject) : void
+      {
+         if(this._prevButton)
+         {
+            removeChild(this._prevButton);
+            this._prevButton.removeEventListener(MouseEvent.MOUSE_UP,this.onClickPrevButton);
+         }
+         this._prevButton = param1;
+         if(this._prevButton)
+         {
+            addChild(this._prevButton);
+            this._prevButton.addEventListener(MouseEvent.MOUSE_UP,this.onClickPrevButton);
+         }
+      }
+      
+      public function get nextButton() : DisplayObject
+      {
+         return this._nextButton;
+      }
+      
+      public function set nextButton(param1:DisplayObject) : void
+      {
+         if(this._nextButton)
+         {
+            removeChild(this._nextButton);
+            this._nextButton.removeEventListener(MouseEvent.MOUSE_UP,this.onClickNextButton);
+         }
+         this._nextButton = param1;
+         if(this._nextButton)
+         {
+            addChild(this._nextButton);
+            this._nextButton.addEventListener(MouseEvent.MOUSE_UP,this.onClickNextButton);
+         }
+      }
+      
+      public function prepare() : void
+      {
+      }
+      
+      public function addItem(param1:SwitchableButtonGroupItem) : void
+      {
+         if(param1)
+         {
+            this.itemList.push(param1);
+            if(param1.itemObj)
+            {
+               param1.itemObj.visible = false;
+               addChild(param1.itemObj);
+            }
+         }
+      }
+      
+      public function setActiveItemIndex(param1:uint) : SwitchableButtonGroupItem
+      {
+         var _loc2_:uint = 0;
+         var _loc3_:SwitchableButtonGroupItem = null;
+         var _loc4_:SwitchableButtonGroupItem = null;
+         if(this.itemList.length > param1)
+         {
+            _loc2_ = uint(this.currentItemIndex);
+            for each(_loc3_ in this.itemList)
+            {
+               if(_loc3_.itemObj)
+               {
+                  _loc3_.itemObj.visible = false;
+               }
+            }
+            if((_loc4_ = this.itemList[param1]).itemObj)
+            {
+               _loc4_.itemObj.visible = true;
+            }
+            this.currentItemIndex = param1;
+            if(0 === this.currentItemIndex)
+            {
+               if(this._prevButton)
+               {
+                  this._prevButton.visible = false;
+               }
+            }
+            else if(this._prevButton)
+            {
+               this._prevButton.visible = true;
+            }
+            if(this.itemList.length > this.currentItemIndex + 1)
+            {
+               if(this._nextButton)
+               {
+                  this._nextButton.visible = true;
+               }
+            }
+            else if(this._nextButton)
+            {
+               this._nextButton.visible = false;
+            }
+            if(_loc2_ != this.currentItemIndex)
+            {
+               this.dispatchEvent(new Event(EVENT_ON_CHANGE));
+            }
+            return _loc4_;
+         }
+         return null;
+      }
+      
+      public function getActiveItem() : SwitchableButtonGroupItem
+      {
+         if(this.itemList.length > this.currentItemIndex)
+         {
+            return this.itemList[this.currentItemIndex];
+         }
+         return null;
+      }
+      
+      private function onClickPrevButton(param1:MouseEvent) : void
+      {
+         if(this.currentItemIndex > 0)
+         {
+            this.setActiveItemIndex(this.currentItemIndex - 1);
+         }
+      }
+      
+      private function onClickNextButton(param1:MouseEvent) : void
+      {
+         if(this.itemList.length > this.currentItemIndex + 1)
+         {
+            this.setActiveItemIndex(this.currentItemIndex + 1);
+         }
+      }
+   }
+}
diff --git a/info/k2c/yamalib/gui/button/SwitchableButtonGroupItem.as b/info/k2c/yamalib/gui/button/SwitchableButtonGroupItem.as
new file mode 100644
index 0000000..3dc86d1
--- /dev/null
+++ b/info/k2c/yamalib/gui/button/SwitchableButtonGroupItem.as
@@ -0,0 +1,53 @@
+package info.k2c.yamalib.gui.button
+{
+   import flash.display.DisplayObject;
+   
+   public class SwitchableButtonGroupItem
+   {
+       
+      
+      private var _name:String;
+      
+      private var _value:String;
+      
+      private var _itemObj:DisplayObject;
+      
+      public function SwitchableButtonGroupItem(param1:String, param2:String, param3:DisplayObject)
+      {
+         super();
+         this._name = param1;
+         this._value = param2;
+         this._itemObj = param3;
+      }
+      
+      public function get name() : String
+      {
+         return this._name;
+      }
+      
+      public function set name(param1:String) : void
+      {
+         this._name = param1;
+      }
+      
+      public function get value() : String
+      {
+         return this._value;
+      }
+      
+      public function set value(param1:String) : void
+      {
+         this._value = param1;
+      }
+      
+      public function get itemObj() : DisplayObject
+      {
+         return this._itemObj;
+      }
+      
+      public function set itemObj(param1:DisplayObject) : void
+      {
+         this._itemObj = param1;
+      }
+   }
+}
diff --git a/info/k2c/yamalib/sound/BGMManager.as b/info/k2c/yamalib/sound/BGMManager.as
index e0a3f12..4a0603f 100644
--- a/info/k2c/yamalib/sound/BGMManager.as
+++ b/info/k2c/yamalib/sound/BGMManager.as
@@ -44,12 +44,14 @@ package info.k2c.yamalib.sound
          this.stopBGM(param4);
          playSound(param1,param2,param3,param4,param5 ? -1 : 0,param6);
          this.currentId = param1;
+         this.currentResource = param2;
       }
       
       public function stopBGM(param1:Number = -1, param2:Function = null) : void
       {
          stopSoundAll(param1,param2);
          this.currentId = null;
+         this.currentResource = null;
       }
       
       public function getBGMPosition() : Number
@@ -66,24 +68,32 @@ package info.k2c.yamalib.sound
          return 0;
       }
       
-      public function createRestoreData(param1:IDataOutput) : Boolean
+      public function createRestoreData(param1:IDataOutput, volume:Number) : Boolean
       {
-         return this.putRestoreData(param1);
+         return this.putRestoreData(param1,volume);
       }
       
-      private function putRestoreData(param1:IDataOutput) : Boolean
+      private function putRestoreData(param1:IDataOutput, volume:Number) : Boolean
       {
          if(isPlaying)
          {
             param1.writeBoolean(true);
             log.info("save playing : {0}",true);
-            param1.writeDouble(this.masterVol);
-            log.info("save masterVol : {0}",this.masterVol);
-            param1.writeDouble(this.currentVolume);
-            log.info("save currentVolume : {0}",this.currentVolume);
-            param1.writeUTF(this.currentId);
-            log.info("save currentId : {0}",this.currentId);
-            Serializer.serializeResource(this.currentResource,param1);
+            param1.writeDouble(volume);
+            log.info("save masterVol : {0}",volume);
+            param1.writeDouble(volume);
+            log.info("save currentVolume : {0}",volume);
+            if(this.currentId != null)
+            {
+               param1.writeBoolean(true);
+               param1.writeUTF(this.currentId);
+               log.info("save currentId : {0}",this.currentId);
+               Serializer.serializeResource(this.currentResource,param1);
+            }
+            else
+            {
+               param1.writeBoolean(false);
+            }
          }
          else
          {
@@ -95,9 +105,10 @@ package info.k2c.yamalib.sound
          return true;
       }
       
-      public function excecRestore(param1:IDataInput) : Boolean
+      public function excecRestore(param1:IDataInput, bgmMasterVol:Number) : Boolean
       {
          var playFlg:Boolean;
+         var hasMoreFlg:Boolean;
          var restoreVol:Number = NaN;
          var restoreId:String = null;
          var restoreRes:Resource = null;
@@ -110,23 +121,32 @@ package info.k2c.yamalib.sound
          if(playFlg)
          {
             this.masterVol = input.readDouble();
+            this.masterVol = bgmMasterVol;
             log.info("load masterVol : {0}",this.masterVol);
             restoreVol = Number(input.readDouble());
             log.info("load restoreVol : {0}",restoreVol);
-            restoreId = String(input.readUTF());
-            log.info("load restoreId : {0}",restoreId);
-            restoreRes = new Resource();
-            Serializer.deserializeResource(restoreRes,input);
-            bgmLoader = loaderFactory.createLoader();
-            bgmLoader.addBGM(restoreRes.id);
-            own = this;
-            bgmLoader.loadStart(function(param1:Event):void
+            hasMoreFlg = Boolean(input.readBoolean());
+            if(hasMoreFlg)
             {
-               restoreRes.data = bgmLoader.getSound(restoreRes.id);
-               playBGM(restoreId,restoreRes,restoreVol,0.3);
-               log.info("loaded. id : {0}",restoreRes.id);
-               own.dispatchEvent(new Event(LOAD_COMPLETE));
-            });
+               restoreId = String(input.readUTF());
+               log.info("load restoreId : {0}",restoreId);
+               restoreRes = new Resource();
+               Serializer.deserializeResource(restoreRes,input);
+               bgmLoader = loaderFactory.createLoader();
+               bgmLoader.addBGM(restoreRes.id);
+               own = this;
+               bgmLoader.loadStart(function(param1:Event):void
+               {
+                  restoreRes.data = bgmLoader.getSound(restoreRes.id);
+                  playBGM(restoreId,restoreRes,bgmMasterVol,0.3);
+                  log.info("loaded. id : {0}",restoreRes.id);
+                  own.dispatchEvent(new Event(LOAD_COMPLETE));
+               });
+            }
+            else
+            {
+               dispatchEvent(new Event(LOAD_COMPLETE));
+            }
          }
          else
          {
diff --git a/info/k2c/yamalib/sound/SEManager.as b/info/k2c/yamalib/sound/SEManager.as
index 65fd0ae..b0dd1dd 100644
--- a/info/k2c/yamalib/sound/SEManager.as
+++ b/info/k2c/yamalib/sound/SEManager.as
@@ -58,7 +58,7 @@ package info.k2c.yamalib.sound
       
       public function excecRestore(param1:IDataInput) : Boolean
       {
-         throw new Error();
+         return true;
       }
    }
 }
-- 
2.46.0

